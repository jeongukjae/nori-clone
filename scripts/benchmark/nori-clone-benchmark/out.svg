<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="5733"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (5 samples, 0.09%)</title><rect x="0.0000%" y="1141" width="0.0872%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__exit (5 samples, 0.09%)</title><rect x="0.0000%" y="1125" width="0.0872%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1135.50"></text></g><g><title>nori-clone-benchmark`alloc::string::String::as_str (2 samples, 0.03%)</title><rect x="0.0872%" y="1029" width="0.0349%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="2"/><text x="0.3372%" y="1039.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="0.0872%" y="1013" width="0.0349%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="2"/><text x="0.3372%" y="1023.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.03%)</title><rect x="0.0872%" y="997" width="0.0349%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.3372%" y="1007.50"></text></g><g><title>nori-clone-benchmark`clap::derive::Parser::parse (1 samples, 0.02%)</title><rect x="0.1221%" y="1029" width="0.0174%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="1"/><text x="0.3721%" y="1039.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone_benchmark::Args as clap::derive::CommandFactory&gt;::command (1 samples, 0.02%)</title><rect x="0.1221%" y="1013" width="0.0174%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="1"/><text x="0.3721%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone_benchmark::Args as clap::derive::Args&gt;::augment_args (1 samples, 0.02%)</title><rect x="0.1221%" y="997" width="0.0174%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="1"/><text x="0.3721%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="0.1221%" y="981" width="0.0174%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="1"/><text x="0.3721%" y="991.50"></text></g><g><title>nori-clone-benchmark`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="0.1221%" y="965" width="0.0174%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="1"/><text x="0.3721%" y="975.50"></text></g><g><title>nori-clone-benchmark`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="0.1221%" y="949" width="0.0174%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="0.3721%" y="959.50"></text></g><g><title>nori-clone-benchmark`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="0.1221%" y="933" width="0.0174%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="0.3721%" y="943.50"></text></g><g><title>nori-clone-benchmark`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.1221%" y="917" width="0.0174%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="0.3721%" y="927.50"></text></g><g><title>nori-clone-benchmark`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.1221%" y="901" width="0.0174%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="0.3721%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="0.1221%" y="885" width="0.0174%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="0.3721%" y="895.50"></text></g><g><title>nori-clone-benchmark`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1221%" y="869" width="0.0174%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.3721%" y="879.50"></text></g><g><title>nori-clone-benchmark`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1221%" y="853" width="0.0174%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="0.3721%" y="863.50"></text></g><g><title>nori-clone-benchmark`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1221%" y="837" width="0.0174%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.3721%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.1221%" y="821" width="0.0174%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.3721%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.1221%" y="805" width="0.0174%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="0.3721%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone_benchmark::Args as clap::derive::Args&gt;::augment_args::DEFAULT_VALUE::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1221%" y="789" width="0.0174%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.3721%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.02%)</title><rect x="0.1221%" y="773" width="0.0174%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="0.3721%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.02%)</title><rect x="0.1221%" y="757" width="0.0174%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="0.3721%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="0.1221%" y="741" width="0.0174%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="0.3721%" y="751.50"></text></g><g><title>nori-clone-benchmark`alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="0.1221%" y="725" width="0.0174%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.3721%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="0.1221%" y="709" width="0.0174%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.3721%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="0.1221%" y="693" width="0.0174%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.3721%" y="703.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="0.1221%" y="677" width="0.0174%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.3721%" y="687.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="0.1221%" y="661" width="0.0174%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.3721%" y="671.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="0.1221%" y="645" width="0.0174%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.3721%" y="655.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.1221%" y="629" width="0.0174%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.3721%" y="639.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="0.1221%" y="613" width="0.0174%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.3721%" y="623.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="0.1221%" y="597" width="0.0174%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.3721%" y="607.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="0.1395%" y="1029" width="0.0174%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="0.3895%" y="1039.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.1570%" y="949" width="0.0174%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="1"/><text x="0.4070%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="0.1744%" y="949" width="0.0174%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="0.4244%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="0.2442%" y="917" width="0.0349%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="2"/><text x="0.4942%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.03%)</title><rect x="0.4710%" y="869" width="0.0349%" height="15" fill="rgb(245,192,40)" fg:x="27" fg:w="2"/><text x="0.7210%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="0.4884%" y="853" width="0.0174%" height="15" fill="rgb(238,167,29)" fg:x="28" fg:w="1"/><text x="0.7384%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="0.4884%" y="837" width="0.0174%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="1"/><text x="0.7384%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="0.4361%" y="885" width="0.0872%" height="15" fill="rgb(231,60,39)" fg:x="25" fg:w="5"/><text x="0.6861%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="0.5058%" y="869" width="0.0174%" height="15" fill="rgb(208,69,12)" fg:x="29" fg:w="1"/><text x="0.7558%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="0.5058%" y="853" width="0.0174%" height="15" fill="rgb(235,93,37)" fg:x="29" fg:w="1"/><text x="0.7558%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="0.5058%" y="837" width="0.0174%" height="15" fill="rgb(213,116,39)" fg:x="29" fg:w="1"/><text x="0.7558%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (10 samples, 0.17%)</title><rect x="0.3837%" y="901" width="0.1744%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="10"/><text x="0.6337%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::str::converts::from_utf8_unchecked (2 samples, 0.03%)</title><rect x="0.5233%" y="885" width="0.0349%" height="15" fill="rgb(206,96,30)" fg:x="30" fg:w="2"/><text x="0.7733%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::string::String::new (1 samples, 0.02%)</title><rect x="0.5582%" y="901" width="0.0174%" height="15" fill="rgb(218,138,4)" fg:x="32" fg:w="1"/><text x="0.8082%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="0.6454%" y="837" width="0.0174%" height="15" fill="rgb(250,191,14)" fg:x="37" fg:w="1"/><text x="0.8954%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.03%)</title><rect x="0.6454%" y="853" width="0.0349%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="2"/><text x="0.8954%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="0.6628%" y="837" width="0.0174%" height="15" fill="rgb(206,27,48)" fg:x="38" fg:w="1"/><text x="0.9128%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.07%)</title><rect x="0.6279%" y="869" width="0.0698%" height="15" fill="rgb(225,35,8)" fg:x="36" fg:w="4"/><text x="0.8779%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="0.6803%" y="853" width="0.0174%" height="15" fill="rgb(250,213,24)" fg:x="39" fg:w="1"/><text x="0.9303%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="0.6279%" y="885" width="0.0872%" height="15" fill="rgb(247,123,22)" fg:x="36" fg:w="5"/><text x="0.8779%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="0.6977%" y="869" width="0.0174%" height="15" fill="rgb(231,138,38)" fg:x="40" fg:w="1"/><text x="0.9477%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="0.7326%" y="853" width="0.0174%" height="15" fill="rgb(231,145,46)" fg:x="42" fg:w="1"/><text x="0.9826%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.03%)</title><rect x="0.7500%" y="837" width="0.0349%" height="15" fill="rgb(251,118,11)" fg:x="43" fg:w="2"/><text x="1.0000%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="0.7675%" y="821" width="0.0174%" height="15" fill="rgb(217,147,25)" fg:x="44" fg:w="1"/><text x="1.0175%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6 samples, 0.10%)</title><rect x="0.7152%" y="869" width="0.1047%" height="15" fill="rgb(247,81,37)" fg:x="41" fg:w="6"/><text x="0.9652%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::str::validations::next_code_point_reverse (4 samples, 0.07%)</title><rect x="0.7500%" y="853" width="0.0698%" height="15" fill="rgb(209,12,38)" fg:x="43" fg:w="4"/><text x="1.0000%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="0.7849%" y="837" width="0.0349%" height="15" fill="rgb(227,1,9)" fg:x="45" fg:w="2"/><text x="1.0349%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.12%)</title><rect x="0.7152%" y="885" width="0.1221%" height="15" fill="rgb(248,47,43)" fg:x="41" fg:w="7"/><text x="0.9652%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="0.8198%" y="869" width="0.0174%" height="15" fill="rgb(221,10,30)" fg:x="47" fg:w="1"/><text x="1.0698%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::rev (1 samples, 0.02%)</title><rect x="0.8373%" y="885" width="0.0174%" height="15" fill="rgb(210,229,1)" fg:x="48" fg:w="1"/><text x="1.0873%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="0.9594%" y="821" width="0.0174%" height="15" fill="rgb(222,148,37)" fg:x="55" fg:w="1"/><text x="1.2094%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::string::String::pop (24 samples, 0.42%)</title><rect x="0.5756%" y="901" width="0.4186%" height="15" fill="rgb(234,67,33)" fg:x="33" fg:w="24"/><text x="0.8256%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::str::_&lt;impl str&gt;::chars (8 samples, 0.14%)</title><rect x="0.8547%" y="885" width="0.1395%" height="15" fill="rgb(247,98,35)" fg:x="49" fg:w="8"/><text x="1.1047%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::iter (6 samples, 0.10%)</title><rect x="0.8896%" y="869" width="0.1047%" height="15" fill="rgb(247,138,52)" fg:x="51" fg:w="6"/><text x="1.1396%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.10%)</title><rect x="0.8896%" y="853" width="0.1047%" height="15" fill="rgb(213,79,30)" fg:x="51" fg:w="6"/><text x="1.1396%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (5 samples, 0.09%)</title><rect x="0.9070%" y="837" width="0.0872%" height="15" fill="rgb(246,177,23)" fg:x="52" fg:w="5"/><text x="1.1570%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="0.9768%" y="821" width="0.0174%" height="15" fill="rgb(230,62,27)" fg:x="56" fg:w="1"/><text x="1.2268%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="0.9942%" y="901" width="0.0174%" height="15" fill="rgb(216,154,8)" fg:x="57" fg:w="1"/><text x="1.2442%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="1.2036%" y="837" width="0.0174%" height="15" fill="rgb(244,35,45)" fg:x="69" fg:w="1"/><text x="1.4536%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.03%)</title><rect x="1.2559%" y="805" width="0.0349%" height="15" fill="rgb(251,115,12)" fg:x="72" fg:w="2"/><text x="1.5059%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.02%)</title><rect x="1.2733%" y="789" width="0.0174%" height="15" fill="rgb(240,54,50)" fg:x="73" fg:w="1"/><text x="1.5233%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.10%)</title><rect x="1.2210%" y="837" width="0.1047%" height="15" fill="rgb(233,84,52)" fg:x="70" fg:w="6"/><text x="1.4710%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.10%)</title><rect x="1.2210%" y="821" width="0.1047%" height="15" fill="rgb(207,117,47)" fg:x="70" fg:w="6"/><text x="1.4710%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::mem::size_of_val (2 samples, 0.03%)</title><rect x="1.2908%" y="805" width="0.0349%" height="15" fill="rgb(249,43,39)" fg:x="74" fg:w="2"/><text x="1.5408%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (17 samples, 0.30%)</title><rect x="1.0815%" y="869" width="0.2965%" height="15" fill="rgb(209,38,44)" fg:x="62" fg:w="17"/><text x="1.3315%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::ends_with (14 samples, 0.24%)</title><rect x="1.1338%" y="853" width="0.2442%" height="15" fill="rgb(236,212,23)" fg:x="65" fg:w="14"/><text x="1.3838%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.05%)</title><rect x="1.3257%" y="837" width="0.0523%" height="15" fill="rgb(242,79,21)" fg:x="76" fg:w="3"/><text x="1.5757%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="1.3605%" y="821" width="0.0174%" height="15" fill="rgb(211,96,35)" fg:x="78" fg:w="1"/><text x="1.6105%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="1.3605%" y="805" width="0.0174%" height="15" fill="rgb(253,215,40)" fg:x="78" fg:w="1"/><text x="1.6105%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::len (1 samples, 0.02%)</title><rect x="1.3605%" y="789" width="0.0174%" height="15" fill="rgb(211,81,21)" fg:x="78" fg:w="1"/><text x="1.6105%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::metadata (1 samples, 0.02%)</title><rect x="1.3605%" y="773" width="0.0174%" height="15" fill="rgb(208,190,38)" fg:x="78" fg:w="1"/><text x="1.6105%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="1.4478%" y="821" width="0.0174%" height="15" fill="rgb(235,213,38)" fg:x="83" fg:w="1"/><text x="1.6978%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="1.4826%" y="805" width="0.0174%" height="15" fill="rgb(237,122,38)" fg:x="85" fg:w="1"/><text x="1.7326%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::char::methods::encode_utf8_raw (12 samples, 0.21%)</title><rect x="1.3780%" y="853" width="0.2093%" height="15" fill="rgb(244,218,35)" fg:x="79" fg:w="12"/><text x="1.6280%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9 samples, 0.16%)</title><rect x="1.4303%" y="837" width="0.1570%" height="15" fill="rgb(240,68,47)" fg:x="82" fg:w="9"/><text x="1.6803%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.12%)</title><rect x="1.4652%" y="821" width="0.1221%" height="15" fill="rgb(210,16,53)" fg:x="84" fg:w="7"/><text x="1.7152%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.09%)</title><rect x="1.5001%" y="805" width="0.0872%" height="15" fill="rgb(235,124,12)" fg:x="86" fg:w="5"/><text x="1.7501%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.05%)</title><rect x="1.5350%" y="789" width="0.0523%" height="15" fill="rgb(224,169,11)" fg:x="88" fg:w="3"/><text x="1.7850%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="1.5699%" y="773" width="0.0174%" height="15" fill="rgb(250,166,2)" fg:x="90" fg:w="1"/><text x="1.8199%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;char as core::str::pattern::Pattern&gt;::is_suffix_of (33 samples, 0.58%)</title><rect x="1.0291%" y="885" width="0.5756%" height="15" fill="rgb(242,216,29)" fg:x="59" fg:w="33"/><text x="1.2791%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::char::methods::_&lt;impl char&gt;::encode_utf8 (13 samples, 0.23%)</title><rect x="1.3780%" y="869" width="0.2268%" height="15" fill="rgb(230,116,27)" fg:x="79" fg:w="13"/><text x="1.6280%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::char::methods::len_utf8 (1 samples, 0.02%)</title><rect x="1.5873%" y="853" width="0.0174%" height="15" fill="rgb(228,99,48)" fg:x="91" fg:w="1"/><text x="1.8373%" y="863.50"></text></g><g><title>nori-clone-benchmark`DYLD-STUB$$memset (1 samples, 0.02%)</title><rect x="1.6047%" y="885" width="0.0174%" height="15" fill="rgb(253,11,6)" fg:x="92" fg:w="1"/><text x="1.8547%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::str::_&lt;impl str&gt;::ends_with (39 samples, 0.68%)</title><rect x="1.0117%" y="901" width="0.6803%" height="15" fill="rgb(247,143,39)" fg:x="58" fg:w="39"/><text x="1.2617%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::char::methods::_&lt;impl char&gt;::encode_utf8 (4 samples, 0.07%)</title><rect x="1.6222%" y="885" width="0.0698%" height="15" fill="rgb(236,97,10)" fg:x="93" fg:w="4"/><text x="1.8722%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.05%)</title><rect x="1.7792%" y="837" width="0.0523%" height="15" fill="rgb(233,208,19)" fg:x="102" fg:w="3"/><text x="2.0292%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.05%)</title><rect x="1.7792%" y="821" width="0.0523%" height="15" fill="rgb(216,164,2)" fg:x="102" fg:w="3"/><text x="2.0292%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="1.7966%" y="805" width="0.0349%" height="15" fill="rgb(220,129,5)" fg:x="103" fg:w="2"/><text x="2.0466%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="1.7792%" y="853" width="0.0872%" height="15" fill="rgb(242,17,10)" fg:x="102" fg:w="5"/><text x="2.0292%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (2 samples, 0.03%)</title><rect x="1.8315%" y="837" width="0.0349%" height="15" fill="rgb(242,107,0)" fg:x="105" fg:w="2"/><text x="2.0815%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="1.8489%" y="821" width="0.0174%" height="15" fill="rgb(251,28,31)" fg:x="106" fg:w="1"/><text x="2.0989%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="1.8489%" y="805" width="0.0174%" height="15" fill="rgb(233,223,10)" fg:x="106" fg:w="1"/><text x="2.0989%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="1.8664%" y="853" width="0.0174%" height="15" fill="rgb(215,21,27)" fg:x="107" fg:w="1"/><text x="2.1164%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.03%)</title><rect x="1.8838%" y="853" width="0.0349%" height="15" fill="rgb(232,23,21)" fg:x="108" fg:w="2"/><text x="2.1338%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="2.0059%" y="789" width="0.0174%" height="15" fill="rgb(244,5,23)" fg:x="115" fg:w="1"/><text x="2.2559%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (18 samples, 0.31%)</title><rect x="1.7617%" y="869" width="0.3140%" height="15" fill="rgb(226,81,46)" fg:x="101" fg:w="18"/><text x="2.0117%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.16%)</title><rect x="1.9187%" y="853" width="0.1570%" height="15" fill="rgb(247,70,30)" fg:x="110" fg:w="9"/><text x="2.1687%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.14%)</title><rect x="1.9362%" y="837" width="0.1395%" height="15" fill="rgb(212,68,19)" fg:x="111" fg:w="8"/><text x="2.1862%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.12%)</title><rect x="1.9536%" y="821" width="0.1221%" height="15" fill="rgb(240,187,13)" fg:x="112" fg:w="7"/><text x="2.2036%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.10%)</title><rect x="1.9710%" y="805" width="0.1047%" height="15" fill="rgb(223,113,26)" fg:x="113" fg:w="6"/><text x="2.2210%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (3 samples, 0.05%)</title><rect x="2.0234%" y="789" width="0.0523%" height="15" fill="rgb(206,192,2)" fg:x="116" fg:w="3"/><text x="2.2734%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (2 samples, 0.03%)</title><rect x="2.0408%" y="773" width="0.0349%" height="15" fill="rgb(241,108,4)" fg:x="117" fg:w="2"/><text x="2.2908%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;std::io::Guard as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.0757%" y="869" width="0.0174%" height="15" fill="rgb(247,173,49)" fg:x="119" fg:w="1"/><text x="2.3257%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::string::String::len (1 samples, 0.02%)</title><rect x="2.0931%" y="869" width="0.0174%" height="15" fill="rgb(224,114,35)" fg:x="120" fg:w="1"/><text x="2.3431%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="2.0931%" y="853" width="0.0174%" height="15" fill="rgb(245,159,27)" fg:x="120" fg:w="1"/><text x="2.3431%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.02%)</title><rect x="2.1106%" y="869" width="0.0174%" height="15" fill="rgb(245,172,44)" fg:x="121" fg:w="1"/><text x="2.3606%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.02%)</title><rect x="2.1106%" y="853" width="0.0174%" height="15" fill="rgb(236,23,11)" fg:x="121" fg:w="1"/><text x="2.3606%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::str::converts::from_utf8 (54 samples, 0.94%)</title><rect x="2.1280%" y="869" width="0.9419%" height="15" fill="rgb(205,117,38)" fg:x="122" fg:w="54"/><text x="2.3780%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.03%)</title><rect x="3.0699%" y="853" width="0.0349%" height="15" fill="rgb(237,72,25)" fg:x="176" fg:w="2"/><text x="3.3199%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (1 samples, 0.02%)</title><rect x="3.1223%" y="837" width="0.0174%" height="15" fill="rgb(244,70,9)" fg:x="179" fg:w="1"/><text x="3.3723%" y="847.50"></text></g><g><title>nori-clone-benchmark`std::io::buffered::bufreader::buffer::Buffer::consume (1 samples, 0.02%)</title><rect x="3.1223%" y="821" width="0.0174%" height="15" fill="rgb(217,125,39)" fg:x="179" fg:w="1"/><text x="3.3723%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::cmp::min (1 samples, 0.02%)</title><rect x="3.1223%" y="805" width="0.0174%" height="15" fill="rgb(235,36,10)" fg:x="179" fg:w="1"/><text x="3.3723%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="3.1223%" y="789" width="0.0174%" height="15" fill="rgb(251,123,47)" fg:x="179" fg:w="1"/><text x="3.3723%" y="799.50"></text></g><g><title>nori-clone-benchmark`std::io::buffered::bufreader::buffer::Buffer::buffer (3 samples, 0.05%)</title><rect x="3.1397%" y="805" width="0.0523%" height="15" fill="rgb(221,13,13)" fg:x="180" fg:w="3"/><text x="3.3897%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get_unchecked (3 samples, 0.05%)</title><rect x="3.1397%" y="789" width="0.0523%" height="15" fill="rgb(238,131,9)" fg:x="180" fg:w="3"/><text x="3.3897%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="3.1572%" y="773" width="0.0349%" height="15" fill="rgb(211,50,8)" fg:x="181" fg:w="2"/><text x="3.4072%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="3.1746%" y="757" width="0.0174%" height="15" fill="rgb(245,182,24)" fg:x="182" fg:w="1"/><text x="3.4246%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (17 samples, 0.30%)</title><rect x="3.1397%" y="837" width="0.2965%" height="15" fill="rgb(242,14,37)" fg:x="180" fg:w="17"/><text x="3.3897%" y="847.50"></text></g><g><title>nori-clone-benchmark`std::io::buffered::bufreader::buffer::Buffer::fill_buf (17 samples, 0.30%)</title><rect x="3.1397%" y="821" width="0.2965%" height="15" fill="rgb(246,228,12)" fg:x="180" fg:w="17"/><text x="3.3897%" y="831.50"></text></g><g><title>nori-clone-benchmark`std::io::impls::_&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (14 samples, 0.24%)</title><rect x="3.1920%" y="805" width="0.2442%" height="15" fill="rgb(213,55,15)" fg:x="183" fg:w="14"/><text x="3.4420%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`read (14 samples, 0.24%)</title><rect x="3.1920%" y="789" width="0.2442%" height="15" fill="rgb(209,9,3)" fg:x="183" fg:w="14"/><text x="3.4420%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="3.4537%" y="789" width="0.0349%" height="15" fill="rgb(230,59,30)" fg:x="198" fg:w="2"/><text x="3.7037%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.03%)</title><rect x="3.4537%" y="773" width="0.0349%" height="15" fill="rgb(209,121,21)" fg:x="198" fg:w="2"/><text x="3.7037%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="3.4711%" y="757" width="0.0174%" height="15" fill="rgb(220,109,13)" fg:x="199" fg:w="1"/><text x="3.7211%" y="767.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="3.5060%" y="741" width="0.0174%" height="15" fill="rgb(232,18,1)" fg:x="201" fg:w="1"/><text x="3.7560%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="3.5409%" y="725" width="0.0174%" height="15" fill="rgb(215,41,42)" fg:x="203" fg:w="1"/><text x="3.7909%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (3 samples, 0.05%)</title><rect x="3.5583%" y="725" width="0.0523%" height="15" fill="rgb(224,123,36)" fg:x="204" fg:w="3"/><text x="3.8083%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="3.5932%" y="709" width="0.0174%" height="15" fill="rgb(240,125,3)" fg:x="206" fg:w="1"/><text x="3.8432%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="3.6804%" y="677" width="0.0349%" height="15" fill="rgb(205,98,50)" fg:x="211" fg:w="2"/><text x="3.9304%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="3.9595%" y="613" width="0.0349%" height="15" fill="rgb(205,185,37)" fg:x="227" fg:w="2"/><text x="4.2095%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.30%)</title><rect x="3.7153%" y="645" width="0.2965%" height="15" fill="rgb(238,207,15)" fg:x="213" fg:w="17"/><text x="3.9653%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.30%)</title><rect x="3.7153%" y="629" width="0.2965%" height="15" fill="rgb(213,199,42)" fg:x="213" fg:w="17"/><text x="3.9653%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="3.9944%" y="613" width="0.0174%" height="15" fill="rgb(235,201,11)" fg:x="229" fg:w="1"/><text x="4.2444%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.33%)</title><rect x="3.7153%" y="661" width="0.3314%" height="15" fill="rgb(207,46,11)" fg:x="213" fg:w="19"/><text x="3.9653%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="4.0119%" y="645" width="0.0349%" height="15" fill="rgb(241,35,35)" fg:x="230" fg:w="2"/><text x="4.2619%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="4.0119%" y="629" width="0.0349%" height="15" fill="rgb(243,32,47)" fg:x="230" fg:w="2"/><text x="4.2619%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="4.0293%" y="613" width="0.0174%" height="15" fill="rgb(247,202,23)" fg:x="231" fg:w="1"/><text x="4.2793%" y="623.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (20 samples, 0.35%)</title><rect x="3.7153%" y="677" width="0.3489%" height="15" fill="rgb(219,102,11)" fg:x="213" fg:w="20"/><text x="3.9653%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="4.0467%" y="661" width="0.0174%" height="15" fill="rgb(243,110,44)" fg:x="232" fg:w="1"/><text x="4.2967%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="4.0467%" y="645" width="0.0174%" height="15" fill="rgb(222,74,54)" fg:x="232" fg:w="1"/><text x="4.2967%" y="655.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="4.0642%" y="677" width="0.0174%" height="15" fill="rgb(216,99,12)" fg:x="233" fg:w="1"/><text x="4.3142%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="4.0816%" y="661" width="0.0174%" height="15" fill="rgb(226,22,26)" fg:x="234" fg:w="1"/><text x="4.3316%" y="671.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.47%)</title><rect x="3.6804%" y="709" width="0.4710%" height="15" fill="rgb(217,163,10)" fg:x="211" fg:w="27"/><text x="3.9304%" y="719.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (27 samples, 0.47%)</title><rect x="3.6804%" y="693" width="0.4710%" height="15" fill="rgb(213,25,53)" fg:x="211" fg:w="27"/><text x="3.9304%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.07%)</title><rect x="4.0816%" y="677" width="0.0698%" height="15" fill="rgb(252,105,26)" fg:x="234" fg:w="4"/><text x="4.3316%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (3 samples, 0.05%)</title><rect x="4.0991%" y="661" width="0.0523%" height="15" fill="rgb(220,39,43)" fg:x="235" fg:w="3"/><text x="4.3491%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (3 samples, 0.05%)</title><rect x="4.0991%" y="645" width="0.0523%" height="15" fill="rgb(229,68,48)" fg:x="235" fg:w="3"/><text x="4.3491%" y="655.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="4.1514%" y="677" width="0.0174%" height="15" fill="rgb(252,8,32)" fg:x="238" fg:w="1"/><text x="4.4014%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="4.1514%" y="661" width="0.0174%" height="15" fill="rgb(223,20,43)" fg:x="238" fg:w="1"/><text x="4.4014%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="4.1514%" y="645" width="0.0174%" height="15" fill="rgb(229,81,49)" fg:x="238" fg:w="1"/><text x="4.4014%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="4.1514%" y="629" width="0.0174%" height="15" fill="rgb(236,28,36)" fg:x="238" fg:w="1"/><text x="4.4014%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="4.1514%" y="613" width="0.0174%" height="15" fill="rgb(249,185,26)" fg:x="238" fg:w="1"/><text x="4.4014%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="4.1514%" y="597" width="0.0174%" height="15" fill="rgb(249,174,33)" fg:x="238" fg:w="1"/><text x="4.4014%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="4.1514%" y="581" width="0.0174%" height="15" fill="rgb(233,201,37)" fg:x="238" fg:w="1"/><text x="4.4014%" y="591.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.03%)</title><rect x="4.1514%" y="709" width="0.0349%" height="15" fill="rgb(221,78,26)" fg:x="238" fg:w="2"/><text x="4.4014%" y="719.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::grow_impl (2 samples, 0.03%)</title><rect x="4.1514%" y="693" width="0.0349%" height="15" fill="rgb(250,127,30)" fg:x="238" fg:w="2"/><text x="4.4014%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="4.1688%" y="677" width="0.0174%" height="15" fill="rgb(230,49,44)" fg:x="239" fg:w="1"/><text x="4.4188%" y="687.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="4.1863%" y="709" width="0.0174%" height="15" fill="rgb(229,67,23)" fg:x="240" fg:w="1"/><text x="4.4363%" y="719.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::finish_grow (36 samples, 0.63%)</title><rect x="3.6107%" y="725" width="0.6279%" height="15" fill="rgb(249,83,47)" fg:x="207" fg:w="36"/><text x="3.8607%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.03%)</title><rect x="4.2037%" y="709" width="0.0349%" height="15" fill="rgb(215,43,3)" fg:x="241" fg:w="2"/><text x="4.4537%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="4.2386%" y="709" width="0.0174%" height="15" fill="rgb(238,154,13)" fg:x="243" fg:w="1"/><text x="4.4886%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="4.2561%" y="709" width="0.0174%" height="15" fill="rgb(219,56,2)" fg:x="244" fg:w="1"/><text x="4.5061%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (4 samples, 0.07%)</title><rect x="4.2386%" y="725" width="0.0698%" height="15" fill="rgb(233,0,4)" fg:x="243" fg:w="4"/><text x="4.4886%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (2 samples, 0.03%)</title><rect x="4.2735%" y="709" width="0.0349%" height="15" fill="rgb(235,30,7)" fg:x="245" fg:w="2"/><text x="4.5235%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="4.3084%" y="725" width="0.0174%" height="15" fill="rgb(250,79,13)" fg:x="247" fg:w="1"/><text x="4.5584%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (47 samples, 0.82%)</title><rect x="3.5235%" y="741" width="0.8198%" height="15" fill="rgb(211,146,34)" fg:x="202" fg:w="47"/><text x="3.7735%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="4.3258%" y="725" width="0.0174%" height="15" fill="rgb(228,22,38)" fg:x="248" fg:w="1"/><text x="4.5758%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.87%)</title><rect x="3.4886%" y="789" width="0.8721%" height="15" fill="rgb(235,168,5)" fg:x="200" fg:w="50"/><text x="3.7386%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.87%)</title><rect x="3.4886%" y="773" width="0.8721%" height="15" fill="rgb(221,155,16)" fg:x="200" fg:w="50"/><text x="3.7386%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (49 samples, 0.85%)</title><rect x="3.5060%" y="757" width="0.8547%" height="15" fill="rgb(215,215,53)" fg:x="201" fg:w="49"/><text x="3.7560%" y="767.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::handle_reserve (1 samples, 0.02%)</title><rect x="4.3433%" y="741" width="0.0174%" height="15" fill="rgb(223,4,10)" fg:x="249" fg:w="1"/><text x="4.5933%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="4.3433%" y="725" width="0.0174%" height="15" fill="rgb(234,103,6)" fg:x="249" fg:w="1"/><text x="4.5933%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::append_elements (64 samples, 1.12%)</title><rect x="3.4537%" y="805" width="1.1163%" height="15" fill="rgb(227,97,0)" fg:x="198" fg:w="64"/><text x="3.7037%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (12 samples, 0.21%)</title><rect x="4.3607%" y="789" width="0.2093%" height="15" fill="rgb(234,150,53)" fg:x="250" fg:w="12"/><text x="4.6107%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.21%)</title><rect x="4.3607%" y="773" width="0.2093%" height="15" fill="rgb(228,201,54)" fg:x="250" fg:w="12"/><text x="4.6107%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::addr (1 samples, 0.02%)</title><rect x="4.5700%" y="805" width="0.0174%" height="15" fill="rgb(222,22,37)" fg:x="262" fg:w="1"/><text x="4.8200%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (68 samples, 1.19%)</title><rect x="3.4537%" y="821" width="1.1861%" height="15" fill="rgb(237,53,32)" fg:x="198" fg:w="68"/><text x="3.7037%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.05%)</title><rect x="4.5875%" y="805" width="0.0523%" height="15" fill="rgb(233,25,53)" fg:x="263" fg:w="3"/><text x="4.8375%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (2 samples, 0.03%)</title><rect x="4.6049%" y="789" width="0.0349%" height="15" fill="rgb(210,40,34)" fg:x="264" fg:w="2"/><text x="4.8549%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (2 samples, 0.03%)</title><rect x="4.6049%" y="773" width="0.0349%" height="15" fill="rgb(241,220,44)" fg:x="264" fg:w="2"/><text x="4.8549%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (70 samples, 1.22%)</title><rect x="3.4362%" y="837" width="1.2210%" height="15" fill="rgb(235,28,35)" fg:x="197" fg:w="70"/><text x="3.6862%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="4.6398%" y="821" width="0.0174%" height="15" fill="rgb(210,56,17)" fg:x="266" fg:w="1"/><text x="4.8898%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="4.6398%" y="805" width="0.0174%" height="15" fill="rgb(224,130,29)" fg:x="266" fg:w="1"/><text x="4.8898%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="4.6398%" y="789" width="0.0174%" height="15" fill="rgb(235,212,8)" fg:x="266" fg:w="1"/><text x="4.8898%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.07%)</title><rect x="4.7445%" y="789" width="0.0698%" height="15" fill="rgb(223,33,50)" fg:x="272" fg:w="4"/><text x="4.9945%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.07%)</title><rect x="4.7445%" y="773" width="0.0698%" height="15" fill="rgb(219,149,13)" fg:x="272" fg:w="4"/><text x="4.9945%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="4.7968%" y="757" width="0.0174%" height="15" fill="rgb(250,156,29)" fg:x="275" fg:w="1"/><text x="5.0468%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.21%)</title><rect x="4.6572%" y="837" width="0.2093%" height="15" fill="rgb(216,193,19)" fg:x="267" fg:w="12"/><text x="4.9072%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.16%)</title><rect x="4.7096%" y="821" width="0.1570%" height="15" fill="rgb(216,135,14)" fg:x="270" fg:w="9"/><text x="4.9596%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.14%)</title><rect x="4.7270%" y="805" width="0.1395%" height="15" fill="rgb(241,47,5)" fg:x="271" fg:w="8"/><text x="4.9770%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ops::range::RangeInclusive&lt;usize&gt;::into_slice_range (3 samples, 0.05%)</title><rect x="4.8142%" y="789" width="0.0523%" height="15" fill="rgb(233,42,35)" fg:x="276" fg:w="3"/><text x="5.0642%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="4.8666%" y="821" width="0.0174%" height="15" fill="rgb(231,13,6)" fg:x="279" fg:w="1"/><text x="5.1166%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (273 samples, 4.76%)</title><rect x="0.2791%" y="917" width="4.7619%" height="15" fill="rgb(207,181,40)" fg:x="16" fg:w="273"/><text x="0.5291%" y="927.50">nori-c..</text></g><g><title>nori-clone-benchmark`std::io::BufRead::read_line (192 samples, 3.35%)</title><rect x="1.6920%" y="901" width="3.3490%" height="15" fill="rgb(254,173,49)" fg:x="97" fg:w="192"/><text x="1.9420%" y="911.50">nor..</text></g><g><title>nori-clone-benchmark`std::io::append_to_string (190 samples, 3.31%)</title><rect x="1.7268%" y="885" width="3.3141%" height="15" fill="rgb(221,1,38)" fg:x="99" fg:w="190"/><text x="1.9768%" y="895.50">nor..</text></g><g><title>nori-clone-benchmark`std::io::BufRead::read_line::_{{closure}} (113 samples, 1.97%)</title><rect x="3.0699%" y="869" width="1.9710%" height="15" fill="rgb(206,124,46)" fg:x="176" fg:w="113"/><text x="3.3199%" y="879.50">n..</text></g><g><title>nori-clone-benchmark`std::io::read_until (111 samples, 1.94%)</title><rect x="3.1048%" y="853" width="1.9362%" height="15" fill="rgb(249,21,11)" fg:x="178" fg:w="111"/><text x="3.3548%" y="863.50">n..</text></g><g><title>nori-clone-benchmark`std::sys_common::memchr::memchr (10 samples, 0.17%)</title><rect x="4.8666%" y="837" width="0.1744%" height="15" fill="rgb(222,201,40)" fg:x="279" fg:w="10"/><text x="5.1166%" y="847.50"></text></g><g><title>nori-clone-benchmark`std::sys::unix::memchr::memchr (9 samples, 0.16%)</title><rect x="4.8840%" y="821" width="0.1570%" height="15" fill="rgb(235,61,29)" fg:x="280" fg:w="9"/><text x="5.1340%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (9 samples, 0.16%)</title><rect x="4.8840%" y="805" width="0.1570%" height="15" fill="rgb(219,207,3)" fg:x="280" fg:w="9"/><text x="5.1340%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="5.0410%" y="917" width="0.0174%" height="15" fill="rgb(222,56,46)" fg:x="289" fg:w="1"/><text x="5.2910%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (279 samples, 4.87%)</title><rect x="0.2268%" y="933" width="4.8666%" height="15" fill="rgb(239,76,54)" fg:x="13" fg:w="279"/><text x="0.4768%" y="943.50">nori-c..</text></g><g><title>nori-clone-benchmark`std::io::BufRead::read_line (2 samples, 0.03%)</title><rect x="5.0584%" y="917" width="0.0349%" height="15" fill="rgb(231,124,27)" fg:x="290" fg:w="2"/><text x="5.3084%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="5.0933%" y="933" width="0.0174%" height="15" fill="rgb(249,195,6)" fg:x="292" fg:w="1"/><text x="5.3433%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="5.1108%" y="933" width="0.0349%" height="15" fill="rgb(237,174,47)" fg:x="293" fg:w="2"/><text x="5.3608%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.03%)</title><rect x="5.1108%" y="917" width="0.0349%" height="15" fill="rgb(206,201,31)" fg:x="293" fg:w="2"/><text x="5.3608%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="5.1108%" y="901" width="0.0349%" height="15" fill="rgb(231,57,52)" fg:x="293" fg:w="2"/><text x="5.3608%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="5.1456%" y="933" width="0.0174%" height="15" fill="rgb(248,177,22)" fg:x="295" fg:w="1"/><text x="5.3956%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::collect (289 samples, 5.04%)</title><rect x="0.1570%" y="1029" width="5.0410%" height="15" fill="rgb(215,211,37)" fg:x="9" fg:w="289"/><text x="0.4070%" y="1039.50">nori-c..</text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (289 samples, 5.04%)</title><rect x="0.1570%" y="1013" width="5.0410%" height="15" fill="rgb(241,128,51)" fg:x="9" fg:w="289"/><text x="0.4070%" y="1023.50">nori-c..</text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (289 samples, 5.04%)</title><rect x="0.1570%" y="997" width="5.0410%" height="15" fill="rgb(227,165,31)" fg:x="9" fg:w="289"/><text x="0.4070%" y="1007.50">nori-c..</text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (289 samples, 5.04%)</title><rect x="0.1570%" y="981" width="5.0410%" height="15" fill="rgb(228,167,24)" fg:x="9" fg:w="289"/><text x="0.4070%" y="991.50">nori-c..</text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (289 samples, 5.04%)</title><rect x="0.1570%" y="965" width="5.0410%" height="15" fill="rgb(228,143,12)" fg:x="9" fg:w="289"/><text x="0.4070%" y="975.50">nori-c..</text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (287 samples, 5.01%)</title><rect x="0.1919%" y="949" width="5.0061%" height="15" fill="rgb(249,149,8)" fg:x="11" fg:w="287"/><text x="0.4419%" y="959.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::write (2 samples, 0.03%)</title><rect x="5.1631%" y="933" width="0.0349%" height="15" fill="rgb(243,35,44)" fg:x="296" fg:w="2"/><text x="5.4131%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="5.1980%" y="949" width="0.0349%" height="15" fill="rgb(246,89,9)" fg:x="298" fg:w="2"/><text x="5.4480%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="5.1980%" y="933" width="0.0349%" height="15" fill="rgb(233,213,13)" fg:x="298" fg:w="2"/><text x="5.4480%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="5.1980%" y="917" width="0.0349%" height="15" fill="rgb(233,141,41)" fg:x="298" fg:w="2"/><text x="5.4480%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.12%)</title><rect x="5.2677%" y="885" width="0.1221%" height="15" fill="rgb(239,167,4)" fg:x="302" fg:w="7"/><text x="5.5177%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.12%)</title><rect x="5.2677%" y="869" width="0.1221%" height="15" fill="rgb(209,217,16)" fg:x="302" fg:w="7"/><text x="5.5177%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="5.3898%" y="885" width="0.0174%" height="15" fill="rgb(219,88,35)" fg:x="309" fg:w="1"/><text x="5.6398%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="5.3898%" y="869" width="0.0174%" height="15" fill="rgb(220,193,23)" fg:x="309" fg:w="1"/><text x="5.6398%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="5.3898%" y="853" width="0.0174%" height="15" fill="rgb(230,90,52)" fg:x="309" fg:w="1"/><text x="5.6398%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.12%)</title><rect x="5.4073%" y="885" width="0.1221%" height="15" fill="rgb(252,106,19)" fg:x="310" fg:w="7"/><text x="5.6573%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (5 samples, 0.09%)</title><rect x="5.4422%" y="869" width="0.0872%" height="15" fill="rgb(206,74,20)" fg:x="312" fg:w="5"/><text x="5.6922%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.09%)</title><rect x="5.4422%" y="853" width="0.0872%" height="15" fill="rgb(230,138,44)" fg:x="312" fg:w="5"/><text x="5.6922%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="5.5294%" y="885" width="0.0174%" height="15" fill="rgb(235,182,43)" fg:x="317" fg:w="1"/><text x="5.7794%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="5.5468%" y="885" width="0.0174%" height="15" fill="rgb(242,16,51)" fg:x="318" fg:w="1"/><text x="5.7968%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="5.5468%" y="869" width="0.0174%" height="15" fill="rgb(248,9,4)" fg:x="318" fg:w="1"/><text x="5.7968%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (19 samples, 0.33%)</title><rect x="5.2503%" y="901" width="0.3314%" height="15" fill="rgb(210,31,22)" fg:x="301" fg:w="19"/><text x="5.5003%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::get (1 samples, 0.02%)</title><rect x="5.5643%" y="885" width="0.0174%" height="15" fill="rgb(239,54,39)" fg:x="319" fg:w="1"/><text x="5.8143%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.35%)</title><rect x="5.2503%" y="917" width="0.3489%" height="15" fill="rgb(230,99,41)" fg:x="301" fg:w="20"/><text x="5.5003%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="5.5817%" y="901" width="0.0174%" height="15" fill="rgb(253,106,12)" fg:x="320" fg:w="1"/><text x="5.8317%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="5.6340%" y="901" width="0.0174%" height="15" fill="rgb(213,46,41)" fg:x="323" fg:w="1"/><text x="5.8840%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="5.6340%" y="885" width="0.0174%" height="15" fill="rgb(215,133,35)" fg:x="323" fg:w="1"/><text x="5.8840%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="5.6340%" y="869" width="0.0174%" height="15" fill="rgb(213,28,5)" fg:x="323" fg:w="1"/><text x="5.8840%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="5.6864%" y="885" width="0.0174%" height="15" fill="rgb(215,77,49)" fg:x="326" fg:w="1"/><text x="5.9364%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (4 samples, 0.07%)</title><rect x="5.6515%" y="901" width="0.0698%" height="15" fill="rgb(248,100,22)" fg:x="324" fg:w="4"/><text x="5.9015%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="5.7038%" y="885" width="0.0174%" height="15" fill="rgb(208,67,9)" fg:x="327" fg:w="1"/><text x="5.9538%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (31 samples, 0.54%)</title><rect x="5.1980%" y="1029" width="0.5407%" height="15" fill="rgb(219,133,21)" fg:x="298" fg:w="31"/><text x="5.4480%" y="1039.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.54%)</title><rect x="5.1980%" y="1013" width="0.5407%" height="15" fill="rgb(246,46,29)" fg:x="298" fg:w="31"/><text x="5.4480%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (31 samples, 0.54%)</title><rect x="5.1980%" y="997" width="0.5407%" height="15" fill="rgb(246,185,52)" fg:x="298" fg:w="31"/><text x="5.4480%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::string::String&gt; (31 samples, 0.54%)</title><rect x="5.1980%" y="981" width="0.5407%" height="15" fill="rgb(252,136,11)" fg:x="298" fg:w="31"/><text x="5.4480%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (31 samples, 0.54%)</title><rect x="5.1980%" y="965" width="0.5407%" height="15" fill="rgb(219,138,53)" fg:x="298" fg:w="31"/><text x="5.4480%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (29 samples, 0.51%)</title><rect x="5.2329%" y="949" width="0.5058%" height="15" fill="rgb(211,51,23)" fg:x="300" fg:w="29"/><text x="5.4829%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.49%)</title><rect x="5.2503%" y="933" width="0.4884%" height="15" fill="rgb(247,221,28)" fg:x="301" fg:w="28"/><text x="5.5003%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.14%)</title><rect x="5.5992%" y="917" width="0.1395%" height="15" fill="rgb(251,222,45)" fg:x="321" fg:w="8"/><text x="5.8492%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="5.7213%" y="901" width="0.0174%" height="15" fill="rgb(217,162,53)" fg:x="328" fg:w="1"/><text x="5.9713%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (1 samples, 0.02%)</title><rect x="5.7387%" y="917" width="0.0174%" height="15" fill="rgb(229,93,14)" fg:x="329" fg:w="1"/><text x="5.9887%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="5.7387%" y="981" width="0.0349%" height="15" fill="rgb(209,67,49)" fg:x="329" fg:w="2"/><text x="5.9887%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[nori_clone::tokenizer::nori_tokenizer::Node]&gt; (2 samples, 0.03%)</title><rect x="5.7387%" y="965" width="0.0349%" height="15" fill="rgb(213,87,29)" fg:x="329" fg:w="2"/><text x="5.9887%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::nori_tokenizer::Node&gt; (2 samples, 0.03%)</title><rect x="5.7387%" y="949" width="0.0349%" height="15" fill="rgb(205,151,52)" fg:x="329" fg:w="2"/><text x="5.9887%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt; (2 samples, 0.03%)</title><rect x="5.7387%" y="933" width="0.0349%" height="15" fill="rgb(253,215,39)" fg:x="329" fg:w="2"/><text x="5.9887%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (1 samples, 0.02%)</title><rect x="5.7561%" y="917" width="0.0174%" height="15" fill="rgb(221,220,41)" fg:x="330" fg:w="1"/><text x="6.0061%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (1 samples, 0.02%)</title><rect x="5.7561%" y="901" width="0.0174%" height="15" fill="rgb(218,133,21)" fg:x="330" fg:w="1"/><text x="6.0061%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.7561%" y="885" width="0.0174%" height="15" fill="rgb(221,193,43)" fg:x="330" fg:w="1"/><text x="6.0061%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.7561%" y="869" width="0.0174%" height="15" fill="rgb(240,128,52)" fg:x="330" fg:w="1"/><text x="6.0061%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.7561%" y="853" width="0.0174%" height="15" fill="rgb(253,114,12)" fg:x="330" fg:w="1"/><text x="6.0061%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="5.7561%" y="837" width="0.0174%" height="15" fill="rgb(215,223,47)" fg:x="330" fg:w="1"/><text x="6.0061%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="5.7736%" y="901" width="0.0174%" height="15" fill="rgb(248,225,23)" fg:x="331" fg:w="1"/><text x="6.0236%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;core::result::Result&lt;nori_clone::tokenizer::nori_tokenizer::Lattice,nori_clone::error::Error&gt;&gt; (4 samples, 0.07%)</title><rect x="5.7387%" y="1029" width="0.0698%" height="15" fill="rgb(250,108,0)" fg:x="329" fg:w="4"/><text x="5.9887%" y="1039.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::nori_tokenizer::Lattice&gt; (4 samples, 0.07%)</title><rect x="5.7387%" y="1013" width="0.0698%" height="15" fill="rgb(228,208,7)" fg:x="329" fg:w="4"/><text x="5.9887%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::Node&gt;&gt; (4 samples, 0.07%)</title><rect x="5.7387%" y="997" width="0.0698%" height="15" fill="rgb(244,45,10)" fg:x="329" fg:w="4"/><text x="5.9887%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::nori_tokenizer::Node&gt;&gt; (2 samples, 0.03%)</title><rect x="5.7736%" y="981" width="0.0349%" height="15" fill="rgb(207,125,25)" fg:x="331" fg:w="2"/><text x="6.0236%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="5.7736%" y="965" width="0.0349%" height="15" fill="rgb(210,195,18)" fg:x="331" fg:w="2"/><text x="6.0236%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="5.7736%" y="949" width="0.0349%" height="15" fill="rgb(249,80,12)" fg:x="331" fg:w="2"/><text x="6.0236%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="5.7736%" y="933" width="0.0349%" height="15" fill="rgb(221,65,9)" fg:x="331" fg:w="2"/><text x="6.0236%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="5.7736%" y="917" width="0.0349%" height="15" fill="rgb(235,49,36)" fg:x="331" fg:w="2"/><text x="6.0236%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="5.7910%" y="901" width="0.0174%" height="15" fill="rgb(225,32,20)" fg:x="332" fg:w="1"/><text x="6.0410%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;daachorse::Output&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="5.8085%" y="981" width="0.0174%" height="15" fill="rgb(215,141,46)" fg:x="333" fg:w="1"/><text x="6.0585%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;daachorse::Output&lt;usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="5.8085%" y="965" width="0.0174%" height="15" fill="rgb(250,160,47)" fg:x="333" fg:w="1"/><text x="6.0585%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.8085%" y="949" width="0.0174%" height="15" fill="rgb(216,222,40)" fg:x="333" fg:w="1"/><text x="6.0585%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.8085%" y="933" width="0.0174%" height="15" fill="rgb(234,217,39)" fg:x="333" fg:w="1"/><text x="6.0585%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.8085%" y="917" width="0.0174%" height="15" fill="rgb(207,178,40)" fg:x="333" fg:w="1"/><text x="6.0585%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.02%)</title><rect x="5.8085%" y="901" width="0.0174%" height="15" fill="rgb(221,136,13)" fg:x="333" fg:w="1"/><text x="6.0585%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.02%)</title><rect x="5.8085%" y="885" width="0.0174%" height="15" fill="rgb(249,199,10)" fg:x="333" fg:w="1"/><text x="6.0585%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="5.8085%" y="869" width="0.0174%" height="15" fill="rgb(249,222,13)" fg:x="333" fg:w="1"/><text x="6.0585%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;daachorse::charwise::CharwiseDoubleArrayAhoCorasick&lt;usize&gt;&gt; (4 samples, 0.07%)</title><rect x="5.8085%" y="997" width="0.0698%" height="15" fill="rgb(244,185,38)" fg:x="333" fg:w="4"/><text x="6.0585%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;daachorse::charwise::State&gt;&gt; (3 samples, 0.05%)</title><rect x="5.8259%" y="981" width="0.0523%" height="15" fill="rgb(236,202,9)" fg:x="334" fg:w="3"/><text x="6.0759%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;daachorse::charwise::State&gt;&gt; (3 samples, 0.05%)</title><rect x="5.8259%" y="965" width="0.0523%" height="15" fill="rgb(250,229,37)" fg:x="334" fg:w="3"/><text x="6.0759%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="5.8259%" y="949" width="0.0523%" height="15" fill="rgb(206,174,23)" fg:x="334" fg:w="3"/><text x="6.0759%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="5.8259%" y="933" width="0.0523%" height="15" fill="rgb(211,33,43)" fg:x="334" fg:w="3"/><text x="6.0759%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="5.8259%" y="917" width="0.0523%" height="15" fill="rgb(245,58,50)" fg:x="334" fg:w="3"/><text x="6.0759%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="5.8259%" y="901" width="0.0523%" height="15" fill="rgb(244,68,36)" fg:x="334" fg:w="3"/><text x="6.0759%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::ConnectionCost&gt; (2 samples, 0.03%)</title><rect x="5.8782%" y="997" width="0.0349%" height="15" fill="rgb(232,229,15)" fg:x="337" fg:w="2"/><text x="6.1282%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i16&gt;&gt; (2 samples, 0.03%)</title><rect x="5.8782%" y="981" width="0.0349%" height="15" fill="rgb(254,30,23)" fg:x="337" fg:w="2"/><text x="6.1282%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i16&gt;&gt; (2 samples, 0.03%)</title><rect x="5.8782%" y="965" width="0.0349%" height="15" fill="rgb(235,160,14)" fg:x="337" fg:w="2"/><text x="6.1282%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="5.8782%" y="949" width="0.0349%" height="15" fill="rgb(212,155,44)" fg:x="337" fg:w="2"/><text x="6.1282%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="5.8782%" y="933" width="0.0349%" height="15" fill="rgb(226,2,50)" fg:x="337" fg:w="2"/><text x="6.1282%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="5.8782%" y="917" width="0.0349%" height="15" fill="rgb(234,177,6)" fg:x="337" fg:w="2"/><text x="6.1282%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="5.8782%" y="901" width="0.0349%" height="15" fill="rgb(217,24,9)" fg:x="337" fg:w="2"/><text x="6.1282%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.07%)</title><rect x="6.0178%" y="885" width="0.0698%" height="15" fill="rgb(220,13,46)" fg:x="345" fg:w="4"/><text x="6.2678%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="6.0527%" y="869" width="0.0349%" height="15" fill="rgb(239,221,27)" fg:x="347" fg:w="2"/><text x="6.3027%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="6.0876%" y="885" width="0.0174%" height="15" fill="rgb(222,198,25)" fg:x="349" fg:w="1"/><text x="6.3376%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.10%)</title><rect x="6.0178%" y="901" width="0.1047%" height="15" fill="rgb(211,99,13)" fg:x="345" fg:w="6"/><text x="6.2678%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="6.1050%" y="885" width="0.0174%" height="15" fill="rgb(232,111,31)" fg:x="350" fg:w="1"/><text x="6.3550%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;&gt; (2 samples, 0.03%)</title><rect x="6.1573%" y="885" width="0.0349%" height="15" fill="rgb(245,82,37)" fg:x="353" fg:w="2"/><text x="6.4073%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="6.2271%" y="821" width="0.0174%" height="15" fill="rgb(227,149,46)" fg:x="357" fg:w="1"/><text x="6.4771%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="6.2271%" y="805" width="0.0174%" height="15" fill="rgb(218,36,50)" fg:x="357" fg:w="1"/><text x="6.4771%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="6.2445%" y="821" width="0.0174%" height="15" fill="rgb(226,80,48)" fg:x="358" fg:w="1"/><text x="6.4945%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.05%)</title><rect x="6.2271%" y="837" width="0.0523%" height="15" fill="rgb(238,224,15)" fg:x="357" fg:w="3"/><text x="6.4771%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="6.2620%" y="821" width="0.0174%" height="15" fill="rgb(241,136,10)" fg:x="359" fg:w="1"/><text x="6.5120%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="6.4015%" y="789" width="0.0174%" height="15" fill="rgb(208,32,45)" fg:x="367" fg:w="1"/><text x="6.6515%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.07%)</title><rect x="6.4539%" y="741" width="0.0698%" height="15" fill="rgb(207,135,9)" fg:x="370" fg:w="4"/><text x="6.7039%" y="751.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.14%)</title><rect x="6.4539%" y="757" width="0.1395%" height="15" fill="rgb(206,86,44)" fg:x="370" fg:w="8"/><text x="6.7039%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (4 samples, 0.07%)</title><rect x="6.5236%" y="741" width="0.0698%" height="15" fill="rgb(245,177,15)" fg:x="374" fg:w="4"/><text x="6.7736%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="6.5585%" y="725" width="0.0349%" height="15" fill="rgb(206,64,50)" fg:x="376" fg:w="2"/><text x="6.8085%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="6.5934%" y="757" width="0.0174%" height="15" fill="rgb(234,36,40)" fg:x="378" fg:w="1"/><text x="6.8434%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="6.6108%" y="757" width="0.0174%" height="15" fill="rgb(213,64,8)" fg:x="379" fg:w="1"/><text x="6.8608%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.23%)</title><rect x="6.4190%" y="773" width="0.2268%" height="15" fill="rgb(210,75,36)" fg:x="368" fg:w="13"/><text x="6.6690%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="6.6283%" y="757" width="0.0174%" height="15" fill="rgb(229,88,21)" fg:x="380" fg:w="1"/><text x="6.8783%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="6.6632%" y="725" width="0.0174%" height="15" fill="rgb(252,204,47)" fg:x="382" fg:w="1"/><text x="6.9132%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.16%)</title><rect x="6.7329%" y="709" width="0.1570%" height="15" fill="rgb(208,77,27)" fg:x="386" fg:w="9"/><text x="6.9829%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.16%)</title><rect x="6.7329%" y="693" width="0.1570%" height="15" fill="rgb(221,76,26)" fg:x="386" fg:w="9"/><text x="6.9829%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="6.8899%" y="709" width="0.0174%" height="15" fill="rgb(225,139,18)" fg:x="395" fg:w="1"/><text x="7.1399%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.12%)</title><rect x="6.9074%" y="709" width="0.1221%" height="15" fill="rgb(230,137,11)" fg:x="396" fg:w="7"/><text x="7.1574%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (3 samples, 0.05%)</title><rect x="6.9771%" y="693" width="0.0523%" height="15" fill="rgb(212,28,1)" fg:x="400" fg:w="3"/><text x="7.2271%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="6.9771%" y="677" width="0.0523%" height="15" fill="rgb(248,164,17)" fg:x="400" fg:w="3"/><text x="7.2271%" y="687.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.38%)</title><rect x="6.6632%" y="741" width="0.3837%" height="15" fill="rgb(222,171,42)" fg:x="382" fg:w="22"/><text x="6.9132%" y="751.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (21 samples, 0.37%)</title><rect x="6.6806%" y="725" width="0.3663%" height="15" fill="rgb(243,84,45)" fg:x="383" fg:w="21"/><text x="6.9306%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="7.0295%" y="709" width="0.0174%" height="15" fill="rgb(252,49,23)" fg:x="403" fg:w="1"/><text x="7.2795%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="7.0295%" y="693" width="0.0174%" height="15" fill="rgb(215,19,7)" fg:x="403" fg:w="1"/><text x="7.2795%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="7.0295%" y="677" width="0.0174%" height="15" fill="rgb(238,81,41)" fg:x="403" fg:w="1"/><text x="7.2795%" y="687.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="7.0992%" y="709" width="0.0174%" height="15" fill="rgb(210,199,37)" fg:x="407" fg:w="1"/><text x="7.3492%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.05%)</title><rect x="7.0818%" y="725" width="0.0523%" height="15" fill="rgb(244,192,49)" fg:x="406" fg:w="3"/><text x="7.3318%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="7.1167%" y="709" width="0.0174%" height="15" fill="rgb(226,211,11)" fg:x="408" fg:w="1"/><text x="7.3667%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (3 samples, 0.05%)</title><rect x="7.1690%" y="709" width="0.0523%" height="15" fill="rgb(236,162,54)" fg:x="411" fg:w="3"/><text x="7.4190%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="7.2214%" y="709" width="0.0174%" height="15" fill="rgb(220,229,9)" fg:x="414" fg:w="1"/><text x="7.4714%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (9 samples, 0.16%)</title><rect x="7.1341%" y="725" width="0.1570%" height="15" fill="rgb(250,87,22)" fg:x="409" fg:w="9"/><text x="7.3841%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (3 samples, 0.05%)</title><rect x="7.2388%" y="709" width="0.0523%" height="15" fill="rgb(239,43,17)" fg:x="415" fg:w="3"/><text x="7.4888%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="7.2911%" y="725" width="0.0174%" height="15" fill="rgb(231,177,25)" fg:x="418" fg:w="1"/><text x="7.5411%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="7.3435%" y="709" width="0.0174%" height="15" fill="rgb(219,179,1)" fg:x="421" fg:w="1"/><text x="7.5935%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (3 samples, 0.05%)</title><rect x="7.3609%" y="709" width="0.0523%" height="15" fill="rgb(238,219,53)" fg:x="422" fg:w="3"/><text x="7.6109%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="7.3958%" y="693" width="0.0174%" height="15" fill="rgb(232,167,36)" fg:x="424" fg:w="1"/><text x="7.6458%" y="703.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (22 samples, 0.38%)</title><rect x="7.0469%" y="741" width="0.3837%" height="15" fill="rgb(244,19,51)" fg:x="404" fg:w="22"/><text x="7.2969%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (7 samples, 0.12%)</title><rect x="7.3086%" y="725" width="0.1221%" height="15" fill="rgb(224,6,22)" fg:x="419" fg:w="7"/><text x="7.5586%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="7.4132%" y="709" width="0.0174%" height="15" fill="rgb(224,145,5)" fg:x="425" fg:w="1"/><text x="7.6632%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.80%)</title><rect x="6.6457%" y="757" width="0.8024%" height="15" fill="rgb(234,130,49)" fg:x="381" fg:w="46"/><text x="6.8957%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="7.4307%" y="741" width="0.0174%" height="15" fill="rgb(254,6,2)" fg:x="426" fg:w="1"/><text x="7.6807%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (47 samples, 0.82%)</title><rect x="6.6457%" y="773" width="0.8198%" height="15" fill="rgb(208,96,46)" fg:x="381" fg:w="47"/><text x="6.8957%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="7.4481%" y="757" width="0.0174%" height="15" fill="rgb(239,3,39)" fg:x="427" fg:w="1"/><text x="7.6981%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[nori_clone::tokenizer::dictionary::model::MorphemeExpression]&gt; (69 samples, 1.20%)</title><rect x="6.2794%" y="837" width="1.2036%" height="15" fill="rgb(233,210,1)" fg:x="360" fg:w="69"/><text x="6.5294%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt; (62 samples, 1.08%)</title><rect x="6.4015%" y="821" width="1.0815%" height="15" fill="rgb(244,137,37)" fg:x="367" fg:w="62"/><text x="6.6515%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::string::String&gt; (62 samples, 1.08%)</title><rect x="6.4015%" y="805" width="1.0815%" height="15" fill="rgb(240,136,2)" fg:x="367" fg:w="62"/><text x="6.6515%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (61 samples, 1.06%)</title><rect x="6.4190%" y="789" width="1.0640%" height="15" fill="rgb(239,18,37)" fg:x="368" fg:w="61"/><text x="6.6690%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="7.4656%" y="773" width="0.0174%" height="15" fill="rgb(218,185,22)" fg:x="428" fg:w="1"/><text x="7.7156%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt; (2 samples, 0.03%)</title><rect x="7.4830%" y="837" width="0.0349%" height="15" fill="rgb(225,218,4)" fg:x="429" fg:w="2"/><text x="7.7330%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 1.34%)</title><rect x="6.1922%" y="853" width="1.3431%" height="15" fill="rgb(230,182,32)" fg:x="355" fg:w="77"/><text x="6.4422%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="7.5179%" y="837" width="0.0174%" height="15" fill="rgb(242,56,43)" fg:x="431" fg:w="1"/><text x="7.7679%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[nori_clone::tokenizer::dictionary::model::MorphemeExpression]&gt; (1 samples, 0.02%)</title><rect x="7.5353%" y="853" width="0.0174%" height="15" fill="rgb(233,99,24)" fg:x="432" fg:w="1"/><text x="7.7853%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="7.5528%" y="837" width="0.0174%" height="15" fill="rgb(234,209,42)" fg:x="433" fg:w="1"/><text x="7.8028%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="7.5702%" y="805" width="0.0174%" height="15" fill="rgb(227,7,12)" fg:x="434" fg:w="1"/><text x="7.8202%" y="815.50"></text></g><g><title>nori-clone-benchmark`__rust_dealloc (1 samples, 0.02%)</title><rect x="7.5877%" y="805" width="0.0174%" height="15" fill="rgb(245,203,43)" fg:x="435" fg:w="1"/><text x="7.8377%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.09%)</title><rect x="7.6051%" y="789" width="0.0872%" height="15" fill="rgb(238,205,33)" fg:x="436" fg:w="5"/><text x="7.8551%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.05%)</title><rect x="7.6400%" y="773" width="0.0523%" height="15" fill="rgb(231,56,7)" fg:x="438" fg:w="3"/><text x="7.8900%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="7.6923%" y="789" width="0.0174%" height="15" fill="rgb(244,186,29)" fg:x="441" fg:w="1"/><text x="7.9423%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.07%)</title><rect x="7.7098%" y="789" width="0.0698%" height="15" fill="rgb(234,111,31)" fg:x="442" fg:w="4"/><text x="7.9598%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="7.7621%" y="773" width="0.0174%" height="15" fill="rgb(241,149,10)" fg:x="445" fg:w="1"/><text x="8.0121%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="7.7621%" y="757" width="0.0174%" height="15" fill="rgb(249,206,44)" fg:x="445" fg:w="1"/><text x="8.0121%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.23%)</title><rect x="7.5702%" y="821" width="0.2268%" height="15" fill="rgb(251,153,30)" fg:x="434" fg:w="13"/><text x="7.8202%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (11 samples, 0.19%)</title><rect x="7.6051%" y="805" width="0.1919%" height="15" fill="rgb(239,152,38)" fg:x="436" fg:w="11"/><text x="7.8551%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="7.7795%" y="789" width="0.0174%" height="15" fill="rgb(249,139,47)" fg:x="446" fg:w="1"/><text x="8.0295%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="7.8493%" y="805" width="0.0174%" height="15" fill="rgb(244,64,35)" fg:x="450" fg:w="1"/><text x="8.0993%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="7.8493%" y="789" width="0.0174%" height="15" fill="rgb(216,46,15)" fg:x="450" fg:w="1"/><text x="8.0993%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="7.8667%" y="805" width="0.0174%" height="15" fill="rgb(250,74,19)" fg:x="451" fg:w="1"/><text x="8.1167%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="7.9365%" y="789" width="0.0174%" height="15" fill="rgb(249,42,33)" fg:x="455" fg:w="1"/><text x="8.1865%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (5 samples, 0.09%)</title><rect x="7.8842%" y="805" width="0.0872%" height="15" fill="rgb(242,149,17)" fg:x="452" fg:w="5"/><text x="8.1342%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="7.9540%" y="789" width="0.0174%" height="15" fill="rgb(244,29,21)" fg:x="456" fg:w="1"/><text x="8.2040%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (2 samples, 0.03%)</title><rect x="7.9714%" y="805" width="0.0349%" height="15" fill="rgb(220,130,37)" fg:x="457" fg:w="2"/><text x="8.2214%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.03%)</title><rect x="7.9714%" y="789" width="0.0349%" height="15" fill="rgb(211,67,2)" fg:x="457" fg:w="2"/><text x="8.2214%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.23%)</title><rect x="7.7970%" y="821" width="0.2268%" height="15" fill="rgb(235,68,52)" fg:x="447" fg:w="13"/><text x="8.0470%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::unwrap_unchecked (1 samples, 0.02%)</title><rect x="8.0063%" y="805" width="0.0174%" height="15" fill="rgb(246,142,3)" fg:x="459" fg:w="1"/><text x="8.2563%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="8.0237%" y="821" width="0.0174%" height="15" fill="rgb(241,25,7)" fg:x="460" fg:w="1"/><text x="8.2737%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;&gt; (107 samples, 1.87%)</title><rect x="6.1922%" y="869" width="1.8664%" height="15" fill="rgb(242,119,39)" fg:x="355" fg:w="107"/><text x="6.4422%" y="879.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;&gt; (29 samples, 0.51%)</title><rect x="7.5528%" y="853" width="0.5058%" height="15" fill="rgb(241,98,45)" fg:x="433" fg:w="29"/><text x="7.8028%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.49%)</title><rect x="7.5702%" y="837" width="0.4884%" height="15" fill="rgb(254,28,30)" fg:x="434" fg:w="28"/><text x="7.8202%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="8.0412%" y="821" width="0.0174%" height="15" fill="rgb(241,142,54)" fg:x="461" fg:w="1"/><text x="8.2912%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="8.5993%" y="805" width="0.0174%" height="15" fill="rgb(222,85,15)" fg:x="493" fg:w="1"/><text x="8.8493%" y="815.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (33 samples, 0.58%)</title><rect x="8.0761%" y="821" width="0.5756%" height="15" fill="rgb(210,85,47)" fg:x="463" fg:w="33"/><text x="8.3261%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="8.6168%" y="805" width="0.0349%" height="15" fill="rgb(224,206,25)" fg:x="494" fg:w="2"/><text x="8.8668%" y="815.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (34 samples, 0.59%)</title><rect x="8.0761%" y="837" width="0.5931%" height="15" fill="rgb(243,201,19)" fg:x="463" fg:w="34"/><text x="8.3261%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="8.6517%" y="821" width="0.0174%" height="15" fill="rgb(236,59,4)" fg:x="496" fg:w="1"/><text x="8.9017%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="8.6517%" y="805" width="0.0174%" height="15" fill="rgb(254,179,45)" fg:x="496" fg:w="1"/><text x="8.9017%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="8.6691%" y="837" width="0.0174%" height="15" fill="rgb(226,14,10)" fg:x="497" fg:w="1"/><text x="8.9191%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.65%)</title><rect x="8.0586%" y="853" width="0.6454%" height="15" fill="rgb(244,27,41)" fg:x="462" fg:w="37"/><text x="8.3086%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="8.6866%" y="837" width="0.0174%" height="15" fill="rgb(235,35,32)" fg:x="498" fg:w="1"/><text x="8.9366%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="8.7040%" y="837" width="0.0174%" height="15" fill="rgb(218,68,31)" fg:x="499" fg:w="1"/><text x="8.9540%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="8.7389%" y="821" width="0.0174%" height="15" fill="rgb(207,120,37)" fg:x="501" fg:w="1"/><text x="8.9889%" y="831.50"></text></g><g><title>nori-clone-benchmark`__rust_dealloc (1 samples, 0.02%)</title><rect x="8.7563%" y="805" width="0.0174%" height="15" fill="rgb(227,98,0)" fg:x="502" fg:w="1"/><text x="9.0063%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.24%)</title><rect x="8.7738%" y="789" width="0.2442%" height="15" fill="rgb(207,7,3)" fg:x="503" fg:w="14"/><text x="9.0238%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.16%)</title><rect x="8.8610%" y="773" width="0.1570%" height="15" fill="rgb(206,98,19)" fg:x="508" fg:w="9"/><text x="9.1110%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.17%)</title><rect x="9.0180%" y="789" width="0.1744%" height="15" fill="rgb(217,5,26)" fg:x="517" fg:w="10"/><text x="9.2680%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="9.2098%" y="773" width="0.0174%" height="15" fill="rgb(235,190,38)" fg:x="528" fg:w="1"/><text x="9.4598%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (27 samples, 0.47%)</title><rect x="8.7738%" y="805" width="0.4710%" height="15" fill="rgb(247,86,24)" fg:x="503" fg:w="27"/><text x="9.0238%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (3 samples, 0.05%)</title><rect x="9.1924%" y="789" width="0.0523%" height="15" fill="rgb(205,101,16)" fg:x="527" fg:w="3"/><text x="9.4424%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::get (1 samples, 0.02%)</title><rect x="9.2273%" y="773" width="0.0174%" height="15" fill="rgb(246,168,33)" fg:x="529" fg:w="1"/><text x="9.4773%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.51%)</title><rect x="8.7563%" y="821" width="0.5058%" height="15" fill="rgb(231,114,1)" fg:x="502" fg:w="29"/><text x="9.0063%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="9.2447%" y="805" width="0.0174%" height="15" fill="rgb(207,184,53)" fg:x="530" fg:w="1"/><text x="9.4947%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="9.3843%" y="773" width="0.0349%" height="15" fill="rgb(224,95,51)" fg:x="538" fg:w="2"/><text x="9.6343%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.05%)</title><rect x="9.3843%" y="805" width="0.0523%" height="15" fill="rgb(212,188,45)" fg:x="538" fg:w="3"/><text x="9.6343%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (3 samples, 0.05%)</title><rect x="9.3843%" y="789" width="0.0523%" height="15" fill="rgb(223,154,38)" fg:x="538" fg:w="3"/><text x="9.6343%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="9.4192%" y="773" width="0.0174%" height="15" fill="rgb(251,22,52)" fg:x="540" fg:w="1"/><text x="9.6692%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="9.4366%" y="805" width="0.0174%" height="15" fill="rgb(229,209,22)" fg:x="541" fg:w="1"/><text x="9.6866%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (2 samples, 0.03%)</title><rect x="9.4540%" y="805" width="0.0349%" height="15" fill="rgb(234,138,34)" fg:x="542" fg:w="2"/><text x="9.7040%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.03%)</title><rect x="9.5413%" y="789" width="0.0349%" height="15" fill="rgb(212,95,11)" fg:x="547" fg:w="2"/><text x="9.7913%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::new_unchecked (1 samples, 0.02%)</title><rect x="9.5587%" y="773" width="0.0174%" height="15" fill="rgb(240,179,47)" fg:x="548" fg:w="1"/><text x="9.8087%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (4 samples, 0.07%)</title><rect x="9.5761%" y="789" width="0.0698%" height="15" fill="rgb(240,163,11)" fg:x="549" fg:w="4"/><text x="9.8261%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (10 samples, 0.17%)</title><rect x="9.4889%" y="805" width="0.1744%" height="15" fill="rgb(236,37,12)" fg:x="544" fg:w="10"/><text x="9.7389%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="9.6459%" y="789" width="0.0174%" height="15" fill="rgb(232,164,16)" fg:x="553" fg:w="1"/><text x="9.8959%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="9.6634%" y="805" width="0.0174%" height="15" fill="rgb(244,205,15)" fg:x="554" fg:w="1"/><text x="9.9134%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="9.6634%" y="789" width="0.0174%" height="15" fill="rgb(223,117,47)" fg:x="554" fg:w="1"/><text x="9.9134%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="9.6634%" y="773" width="0.0174%" height="15" fill="rgb(244,107,35)" fg:x="554" fg:w="1"/><text x="9.9134%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[nori_clone::tokenizer::dictionary::model::Morpheme]&gt; (205 samples, 3.58%)</title><rect x="6.1224%" y="901" width="3.5758%" height="15" fill="rgb(205,140,8)" fg:x="351" fg:w="205"/><text x="6.3724%" y="911.50">nori..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt; (201 samples, 3.51%)</title><rect x="6.1922%" y="885" width="3.5060%" height="15" fill="rgb(228,84,46)" fg:x="355" fg:w="201"/><text x="6.4422%" y="895.50">nor..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (94 samples, 1.64%)</title><rect x="8.0586%" y="869" width="1.6396%" height="15" fill="rgb(254,188,9)" fg:x="462" fg:w="94"/><text x="8.3086%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (57 samples, 0.99%)</title><rect x="8.7040%" y="853" width="0.9942%" height="15" fill="rgb(206,112,54)" fg:x="499" fg:w="57"/><text x="8.9540%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.98%)</title><rect x="8.7214%" y="837" width="0.9768%" height="15" fill="rgb(216,84,49)" fg:x="500" fg:w="56"/><text x="8.9714%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (25 samples, 0.44%)</title><rect x="9.2622%" y="821" width="0.4361%" height="15" fill="rgb(214,194,35)" fg:x="531" fg:w="25"/><text x="9.5122%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::unwrap_unchecked (1 samples, 0.02%)</title><rect x="9.6808%" y="805" width="0.0174%" height="15" fill="rgb(249,28,3)" fg:x="555" fg:w="1"/><text x="9.9308%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt; (1 samples, 0.02%)</title><rect x="9.6982%" y="901" width="0.0174%" height="15" fill="rgb(222,56,52)" fg:x="556" fg:w="1"/><text x="9.9482%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="9.7157%" y="901" width="0.0349%" height="15" fill="rgb(245,217,50)" fg:x="557" fg:w="2"/><text x="9.9657%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (220 samples, 3.84%)</title><rect x="5.9306%" y="917" width="3.8374%" height="15" fill="rgb(213,201,24)" fg:x="340" fg:w="220"/><text x="6.1806%" y="927.50">nori..</text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="9.7506%" y="901" width="0.0174%" height="15" fill="rgb(248,116,28)" fg:x="559" fg:w="1"/><text x="10.0006%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="9.7506%" y="885" width="0.0174%" height="15" fill="rgb(219,72,43)" fg:x="559" fg:w="1"/><text x="10.0006%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="9.7855%" y="885" width="0.0174%" height="15" fill="rgb(209,138,14)" fg:x="561" fg:w="1"/><text x="10.0355%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="9.8203%" y="869" width="0.0349%" height="15" fill="rgb(222,18,33)" fg:x="563" fg:w="2"/><text x="10.0703%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.17%)</title><rect x="9.9076%" y="853" width="0.1744%" height="15" fill="rgb(213,199,7)" fg:x="568" fg:w="10"/><text x="10.1576%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.12%)</title><rect x="9.9599%" y="837" width="0.1221%" height="15" fill="rgb(250,110,10)" fg:x="571" fg:w="7"/><text x="10.2099%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`madvise (20 samples, 0.35%)</title><rect x="10.2041%" y="821" width="0.3489%" height="15" fill="rgb(248,123,6)" fg:x="585" fg:w="20"/><text x="10.4541%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.49%)</title><rect x="10.0820%" y="853" width="0.4884%" height="15" fill="rgb(206,91,31)" fg:x="578" fg:w="28"/><text x="10.3320%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (21 samples, 0.37%)</title><rect x="10.2041%" y="837" width="0.3663%" height="15" fill="rgb(211,154,13)" fg:x="585" fg:w="21"/><text x="10.4541%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free (1 samples, 0.02%)</title><rect x="10.5529%" y="821" width="0.0174%" height="15" fill="rgb(225,148,7)" fg:x="605" fg:w="1"/><text x="10.8029%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (43 samples, 0.75%)</title><rect x="9.8552%" y="869" width="0.7500%" height="15" fill="rgb(220,160,43)" fg:x="565" fg:w="43"/><text x="10.1052%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (2 samples, 0.03%)</title><rect x="10.5704%" y="853" width="0.0349%" height="15" fill="rgb(213,52,39)" fg:x="606" fg:w="2"/><text x="10.8204%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="10.5878%" y="837" width="0.0174%" height="15" fill="rgb(243,137,7)" fg:x="607" fg:w="1"/><text x="10.8378%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.82%)</title><rect x="9.8029%" y="885" width="0.8198%" height="15" fill="rgb(230,79,13)" fg:x="562" fg:w="47"/><text x="10.0529%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="10.6053%" y="869" width="0.0174%" height="15" fill="rgb(247,105,23)" fg:x="608" fg:w="1"/><text x="10.8553%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.03%)</title><rect x="10.7797%" y="869" width="0.0349%" height="15" fill="rgb(223,179,41)" fg:x="618" fg:w="2"/><text x="11.0297%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="10.8146%" y="869" width="0.0174%" height="15" fill="rgb(218,9,34)" fg:x="620" fg:w="1"/><text x="11.0646%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.03%)</title><rect x="10.8844%" y="853" width="0.0349%" height="15" fill="rgb(222,106,8)" fg:x="624" fg:w="2"/><text x="11.1344%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::new_unchecked (1 samples, 0.02%)</title><rect x="10.9018%" y="837" width="0.0174%" height="15" fill="rgb(211,220,0)" fg:x="625" fg:w="1"/><text x="11.1518%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (7 samples, 0.12%)</title><rect x="10.8320%" y="869" width="0.1221%" height="15" fill="rgb(229,52,16)" fg:x="621" fg:w="7"/><text x="11.0820%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (2 samples, 0.03%)</title><rect x="10.9192%" y="853" width="0.0349%" height="15" fill="rgb(212,155,18)" fg:x="626" fg:w="2"/><text x="11.1692%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (2 samples, 0.03%)</title><rect x="10.9541%" y="869" width="0.0349%" height="15" fill="rgb(242,21,14)" fg:x="628" fg:w="2"/><text x="11.2041%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="11.0065%" y="853" width="0.0174%" height="15" fill="rgb(222,19,48)" fg:x="631" fg:w="1"/><text x="11.2565%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="11.0065%" y="837" width="0.0174%" height="15" fill="rgb(232,45,27)" fg:x="631" fg:w="1"/><text x="11.2565%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt;&gt; (73 samples, 1.27%)</title><rect x="9.7680%" y="917" width="1.2733%" height="15" fill="rgb(249,103,42)" fg:x="560" fg:w="73"/><text x="10.0180%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 1.27%)</title><rect x="9.7680%" y="901" width="1.2733%" height="15" fill="rgb(246,81,33)" fg:x="560" fg:w="73"/><text x="10.0180%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (24 samples, 0.42%)</title><rect x="10.6227%" y="885" width="0.4186%" height="15" fill="rgb(252,33,42)" fg:x="609" fg:w="24"/><text x="10.8727%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.05%)</title><rect x="10.9890%" y="869" width="0.0523%" height="15" fill="rgb(209,212,41)" fg:x="630" fg:w="3"/><text x="11.2390%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="11.0239%" y="853" width="0.0174%" height="15" fill="rgb(207,154,6)" fg:x="632" fg:w="1"/><text x="11.2739%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (295 samples, 5.15%)</title><rect x="5.9131%" y="965" width="5.1456%" height="15" fill="rgb(223,64,47)" fg:x="339" fg:w="295"/><text x="6.1631%" y="975.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt;]&gt; (295 samples, 5.15%)</title><rect x="5.9131%" y="949" width="5.1456%" height="15" fill="rgb(211,161,38)" fg:x="339" fg:w="295"/><text x="6.1631%" y="959.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt;&gt; (295 samples, 5.15%)</title><rect x="5.9131%" y="933" width="5.1456%" height="15" fill="rgb(219,138,40)" fg:x="339" fg:w="295"/><text x="6.1631%" y="943.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="11.0413%" y="917" width="0.0174%" height="15" fill="rgb(241,228,46)" fg:x="633" fg:w="1"/><text x="11.2913%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::nori_tokenizer::NoriTokenizer&gt; (304 samples, 5.30%)</title><rect x="5.8085%" y="1029" width="5.3026%" height="15" fill="rgb(223,209,38)" fg:x="333" fg:w="304"/><text x="6.0585%" y="1039.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::system::SystemDictionary&gt; (304 samples, 5.30%)</title><rect x="5.8085%" y="1013" width="5.3026%" height="15" fill="rgb(236,164,45)" fg:x="333" fg:w="304"/><text x="6.0585%" y="1023.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::TokenDictionary&gt; (298 samples, 5.20%)</title><rect x="5.9131%" y="997" width="5.1980%" height="15" fill="rgb(231,15,5)" fg:x="339" fg:w="298"/><text x="6.1631%" y="1007.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt;&gt;&gt; (298 samples, 5.20%)</title><rect x="5.9131%" y="981" width="5.1980%" height="15" fill="rgb(252,35,15)" fg:x="339" fg:w="298"/><text x="6.1631%" y="991.50">nori-c..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="11.0588%" y="965" width="0.0523%" height="15" fill="rgb(248,181,18)" fg:x="634" fg:w="3"/><text x="11.3088%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="11.0588%" y="949" width="0.0523%" height="15" fill="rgb(233,39,42)" fg:x="634" fg:w="3"/><text x="11.3088%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="11.0588%" y="933" width="0.0523%" height="15" fill="rgb(238,110,33)" fg:x="634" fg:w="3"/><text x="11.3088%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="11.0588%" y="917" width="0.0523%" height="15" fill="rgb(233,195,10)" fg:x="634" fg:w="3"/><text x="11.3088%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="11.0588%" y="901" width="0.0523%" height="15" fill="rgb(254,105,3)" fg:x="634" fg:w="3"/><text x="11.3088%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.07%)</title><rect x="11.1111%" y="997" width="0.0698%" height="15" fill="rgb(221,225,9)" fg:x="637" fg:w="4"/><text x="11.3611%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="11.1809%" y="997" width="0.0174%" height="15" fill="rgb(224,227,45)" fg:x="641" fg:w="1"/><text x="11.4309%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl u32&gt;::from_le_bytes (2 samples, 0.03%)</title><rect x="11.1983%" y="997" width="0.0349%" height="15" fill="rgb(229,198,43)" fg:x="642" fg:w="2"/><text x="11.4483%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::from_le_bytes (1 samples, 0.02%)</title><rect x="11.2332%" y="997" width="0.0174%" height="15" fill="rgb(206,209,35)" fg:x="644" fg:w="1"/><text x="11.4832%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroU32::new (1 samples, 0.02%)</title><rect x="11.2507%" y="997" width="0.0174%" height="15" fill="rgb(245,195,53)" fg:x="645" fg:w="1"/><text x="11.5007%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.12%)</title><rect x="11.2681%" y="997" width="0.1221%" height="15" fill="rgb(240,92,26)" fg:x="646" fg:w="7"/><text x="11.5181%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.12%)</title><rect x="11.2681%" y="981" width="0.1221%" height="15" fill="rgb(207,40,23)" fg:x="646" fg:w="7"/><text x="11.5181%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="11.2681%" y="965" width="0.1221%" height="15" fill="rgb(223,111,35)" fg:x="646" fg:w="7"/><text x="11.5181%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.12%)</title><rect x="11.2681%" y="949" width="0.1221%" height="15" fill="rgb(229,147,28)" fg:x="646" fg:w="7"/><text x="11.5181%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (7 samples, 0.12%)</title><rect x="11.2681%" y="933" width="0.1221%" height="15" fill="rgb(211,29,28)" fg:x="646" fg:w="7"/><text x="11.5181%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.12%)</title><rect x="11.2681%" y="917" width="0.1221%" height="15" fill="rgb(228,72,33)" fg:x="646" fg:w="7"/><text x="11.5181%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.03%)</title><rect x="11.3902%" y="997" width="0.0349%" height="15" fill="rgb(205,214,31)" fg:x="653" fg:w="2"/><text x="11.6402%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.07%)</title><rect x="11.4251%" y="997" width="0.0698%" height="15" fill="rgb(224,111,15)" fg:x="655" fg:w="4"/><text x="11.6751%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (2 samples, 0.03%)</title><rect x="12.9949%" y="965" width="0.0349%" height="15" fill="rgb(253,21,26)" fg:x="745" fg:w="2"/><text x="13.2449%" y="975.50"></text></g><g><title> N]&gt;::try_from (2 samples, 0.03%)</title><rect x="12.9949%" y="949" width="0.0349%" height="15" fill="rgb(245,139,43)" fg:x="745" fg:w="2"/><text x="13.2449%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (7 samples, 0.12%)</title><rect x="13.3961%" y="933" width="0.1221%" height="15" fill="rgb(252,170,7)" fg:x="768" fg:w="7"/><text x="13.6461%" y="943.50"></text></g><g><title> N]&gt;::try_from (7 samples, 0.12%)</title><rect x="13.3961%" y="917" width="0.1221%" height="15" fill="rgb(231,118,14)" fg:x="768" fg:w="7"/><text x="13.6461%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.02%)</title><rect x="13.5008%" y="901" width="0.0174%" height="15" fill="rgb(238,83,0)" fg:x="774" fg:w="1"/><text x="13.7508%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (2 samples, 0.03%)</title><rect x="13.5182%" y="933" width="0.0349%" height="15" fill="rgb(221,39,39)" fg:x="775" fg:w="2"/><text x="13.7682%" y="943.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (2 samples, 0.03%)</title><rect x="13.5182%" y="917" width="0.0349%" height="15" fill="rgb(222,119,46)" fg:x="775" fg:w="2"/><text x="13.7682%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map (86 samples, 1.50%)</title><rect x="13.5531%" y="933" width="1.5001%" height="15" fill="rgb(222,165,49)" fg:x="777" fg:w="86"/><text x="13.8031%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (23 samples, 0.40%)</title><rect x="14.6520%" y="917" width="0.4012%" height="15" fill="rgb(219,113,52)" fg:x="840" fg:w="23"/><text x="14.9020%" y="927.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (23 samples, 0.40%)</title><rect x="14.6520%" y="901" width="0.4012%" height="15" fill="rgb(214,7,15)" fg:x="840" fg:w="23"/><text x="14.9020%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (119 samples, 2.08%)</title><rect x="13.0298%" y="965" width="2.0757%" height="15" fill="rgb(235,32,4)" fg:x="747" fg:w="119"/><text x="13.2798%" y="975.50">n..</text></g><g><title> N]&gt;::try_from (119 samples, 2.08%)</title><rect x="13.0298%" y="949" width="2.0757%" height="15" fill="rgb(238,90,54)" fg:x="747" fg:w="119"/><text x="13.2798%" y="959.50"> ..</text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::as_ptr (3 samples, 0.05%)</title><rect x="15.0532%" y="933" width="0.0523%" height="15" fill="rgb(213,208,19)" fg:x="863" fg:w="3"/><text x="15.3032%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (142 samples, 2.48%)</title><rect x="12.6984%" y="981" width="2.4769%" height="15" fill="rgb(233,156,4)" fg:x="728" fg:w="142"/><text x="12.9484%" y="991.50">no..</text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map (4 samples, 0.07%)</title><rect x="15.1055%" y="965" width="0.0698%" height="15" fill="rgb(207,194,5)" fg:x="866" fg:w="4"/><text x="15.3555%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="15.1753%" y="981" width="0.0174%" height="15" fill="rgb(206,111,30)" fg:x="870" fg:w="1"/><text x="15.4253%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.07%)</title><rect x="15.1927%" y="981" width="0.0698%" height="15" fill="rgb(243,70,54)" fg:x="871" fg:w="4"/><text x="15.4427%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.05%)</title><rect x="15.2625%" y="981" width="0.0523%" height="15" fill="rgb(242,28,8)" fg:x="875" fg:w="3"/><text x="15.5125%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="15.4544%" y="949" width="0.0174%" height="15" fill="rgb(219,106,18)" fg:x="886" fg:w="1"/><text x="15.7044%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="15.4544%" y="933" width="0.0174%" height="15" fill="rgb(244,222,10)" fg:x="886" fg:w="1"/><text x="15.7044%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="15.4718%" y="949" width="0.0349%" height="15" fill="rgb(236,179,52)" fg:x="887" fg:w="2"/><text x="15.7218%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.05%)</title><rect x="15.5067%" y="949" width="0.0523%" height="15" fill="rgb(213,23,39)" fg:x="889" fg:w="3"/><text x="15.7567%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (5 samples, 0.09%)</title><rect x="15.5590%" y="949" width="0.0872%" height="15" fill="rgb(238,48,10)" fg:x="892" fg:w="5"/><text x="15.8090%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.07%)</title><rect x="15.5765%" y="933" width="0.0698%" height="15" fill="rgb(251,196,23)" fg:x="893" fg:w="4"/><text x="15.8265%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (14 samples, 0.24%)</title><rect x="15.4195%" y="965" width="0.2442%" height="15" fill="rgb(250,152,24)" fg:x="884" fg:w="14"/><text x="15.6695%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="15.6463%" y="949" width="0.0174%" height="15" fill="rgb(209,150,17)" fg:x="897" fg:w="1"/><text x="15.8963%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="15.6637%" y="965" width="0.0174%" height="15" fill="rgb(234,202,34)" fg:x="898" fg:w="1"/><text x="15.9137%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (58 samples, 1.01%)</title><rect x="15.3148%" y="981" width="1.0117%" height="15" fill="rgb(253,148,53)" fg:x="878" fg:w="58"/><text x="15.5648%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (37 samples, 0.65%)</title><rect x="15.6811%" y="965" width="0.6454%" height="15" fill="rgb(218,129,16)" fg:x="899" fg:w="37"/><text x="15.9311%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (3 samples, 0.05%)</title><rect x="16.3265%" y="981" width="0.0523%" height="15" fill="rgb(216,85,19)" fg:x="936" fg:w="3"/><text x="16.5765%" y="991.50"></text></g><g><title> N]&gt;::try_from (3 samples, 0.05%)</title><rect x="16.3265%" y="965" width="0.0523%" height="15" fill="rgb(235,228,7)" fg:x="936" fg:w="3"/><text x="16.5765%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.05%)</title><rect x="16.6056%" y="949" width="0.0523%" height="15" fill="rgb(245,175,0)" fg:x="952" fg:w="3"/><text x="16.8556%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for u32&gt;::clone (1 samples, 0.02%)</title><rect x="16.6579%" y="949" width="0.0174%" height="15" fill="rgb(208,168,36)" fg:x="955" fg:w="1"/><text x="16.9079%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (2 samples, 0.03%)</title><rect x="16.6928%" y="933" width="0.0349%" height="15" fill="rgb(246,171,24)" fg:x="957" fg:w="2"/><text x="16.9428%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (6 samples, 0.10%)</title><rect x="16.6754%" y="949" width="0.1047%" height="15" fill="rgb(215,142,24)" fg:x="956" fg:w="6"/><text x="16.9254%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (3 samples, 0.05%)</title><rect x="16.7277%" y="933" width="0.0523%" height="15" fill="rgb(250,187,7)" fg:x="959" fg:w="3"/><text x="16.9777%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (22 samples, 0.38%)</title><rect x="16.4486%" y="965" width="0.3837%" height="15" fill="rgb(228,66,33)" fg:x="943" fg:w="22"/><text x="16.6986%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (3 samples, 0.05%)</title><rect x="16.7800%" y="949" width="0.0523%" height="15" fill="rgb(234,215,21)" fg:x="962" fg:w="3"/><text x="17.0300%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.03%)</title><rect x="16.8324%" y="965" width="0.0349%" height="15" fill="rgb(222,191,20)" fg:x="965" fg:w="2"/><text x="17.0824%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for u32&gt;::clone (1 samples, 0.02%)</title><rect x="16.8673%" y="965" width="0.0174%" height="15" fill="rgb(245,79,54)" fg:x="967" fg:w="1"/><text x="17.1173%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for u32&gt;::lt (1 samples, 0.02%)</title><rect x="16.8847%" y="965" width="0.0174%" height="15" fill="rgb(240,10,37)" fg:x="968" fg:w="1"/><text x="17.1347%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (32 samples, 0.56%)</title><rect x="16.3789%" y="981" width="0.5582%" height="15" fill="rgb(214,192,32)" fg:x="939" fg:w="32"/><text x="16.6289%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (2 samples, 0.03%)</title><rect x="16.9021%" y="965" width="0.0349%" height="15" fill="rgb(209,36,54)" fg:x="969" fg:w="2"/><text x="17.1521%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl u32&gt;::from_le_bytes (4 samples, 0.07%)</title><rect x="16.9370%" y="981" width="0.0698%" height="15" fill="rgb(220,10,11)" fg:x="971" fg:w="4"/><text x="17.1870%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl u32&gt;::from_ne_bytes (3 samples, 0.05%)</title><rect x="16.9545%" y="965" width="0.0523%" height="15" fill="rgb(221,106,17)" fg:x="972" fg:w="3"/><text x="17.2045%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl u32&gt;::from_ne_bytes (2 samples, 0.03%)</title><rect x="17.0068%" y="981" width="0.0349%" height="15" fill="rgb(251,142,44)" fg:x="975" fg:w="2"/><text x="17.2568%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::from_le_bytes (1 samples, 0.02%)</title><rect x="17.0417%" y="981" width="0.0174%" height="15" fill="rgb(238,13,15)" fg:x="977" fg:w="1"/><text x="17.2917%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroU32::new (5 samples, 0.09%)</title><rect x="17.0591%" y="981" width="0.0872%" height="15" fill="rgb(208,107,27)" fg:x="978" fg:w="5"/><text x="17.3091%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (2 samples, 0.03%)</title><rect x="17.1463%" y="981" width="0.0349%" height="15" fill="rgb(205,136,37)" fg:x="983" fg:w="2"/><text x="17.3963%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::unwrap (38 samples, 0.66%)</title><rect x="17.1812%" y="981" width="0.6628%" height="15" fill="rgb(250,205,27)" fg:x="985" fg:w="38"/><text x="17.4312%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.03%)</title><rect x="18.2104%" y="965" width="0.0349%" height="15" fill="rgb(210,80,43)" fg:x="1044" fg:w="2"/><text x="18.4604%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.05%)</title><rect x="18.2452%" y="965" width="0.0523%" height="15" fill="rgb(247,160,36)" fg:x="1046" fg:w="3"/><text x="18.4952%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.10%)</title><rect x="18.4720%" y="949" width="0.1047%" height="15" fill="rgb(234,13,49)" fg:x="1059" fg:w="6"/><text x="18.7220%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (4 samples, 0.07%)</title><rect x="19.4662%" y="917" width="0.0698%" height="15" fill="rgb(234,122,0)" fg:x="1116" fg:w="4"/><text x="19.7162%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (2 samples, 0.03%)</title><rect x="19.5360%" y="917" width="0.0349%" height="15" fill="rgb(207,146,38)" fg:x="1120" fg:w="2"/><text x="19.7860%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (2 samples, 0.03%)</title><rect x="19.5709%" y="917" width="0.0349%" height="15" fill="rgb(207,177,25)" fg:x="1122" fg:w="2"/><text x="19.8209%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="19.7279%" y="901" width="0.0174%" height="15" fill="rgb(211,178,42)" fg:x="1131" fg:w="1"/><text x="19.9779%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (55 samples, 0.96%)</title><rect x="18.9430%" y="933" width="0.9594%" height="15" fill="rgb(230,69,54)" fg:x="1086" fg:w="55"/><text x="19.1930%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (17 samples, 0.30%)</title><rect x="19.6058%" y="917" width="0.2965%" height="15" fill="rgb(214,135,41)" fg:x="1124" fg:w="17"/><text x="19.8558%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (9 samples, 0.16%)</title><rect x="19.7453%" y="901" width="0.1570%" height="15" fill="rgb(237,67,25)" fg:x="1132" fg:w="9"/><text x="19.9953%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (4 samples, 0.07%)</title><rect x="19.9023%" y="933" width="0.0698%" height="15" fill="rgb(222,189,50)" fg:x="1141" fg:w="4"/><text x="20.1523%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::len (7 samples, 0.12%)</title><rect x="19.9721%" y="933" width="0.1221%" height="15" fill="rgb(245,148,34)" fg:x="1145" fg:w="7"/><text x="20.2221%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::metadata (2 samples, 0.03%)</title><rect x="20.0593%" y="917" width="0.0349%" height="15" fill="rgb(222,29,6)" fg:x="1150" fg:w="2"/><text x="20.3093%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::metadata (2 samples, 0.03%)</title><rect x="20.0942%" y="933" width="0.0349%" height="15" fill="rgb(221,189,43)" fg:x="1152" fg:w="2"/><text x="20.3442%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (94 samples, 1.64%)</title><rect x="18.5767%" y="949" width="1.6396%" height="15" fill="rgb(207,36,27)" fg:x="1065" fg:w="94"/><text x="18.8267%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (5 samples, 0.09%)</title><rect x="20.1291%" y="933" width="0.0872%" height="15" fill="rgb(217,90,24)" fg:x="1154" fg:w="5"/><text x="20.3791%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (113 samples, 1.97%)</title><rect x="18.2976%" y="965" width="1.9710%" height="15" fill="rgb(224,66,35)" fg:x="1049" fg:w="113"/><text x="18.5476%" y="975.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::len (3 samples, 0.05%)</title><rect x="20.2163%" y="949" width="0.0523%" height="15" fill="rgb(221,13,50)" fg:x="1159" fg:w="3"/><text x="20.4663%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.05%)</title><rect x="20.4954%" y="949" width="0.0523%" height="15" fill="rgb(236,68,49)" fg:x="1175" fg:w="3"/><text x="20.7454%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (13 samples, 0.23%)</title><rect x="21.2280%" y="917" width="0.2268%" height="15" fill="rgb(229,146,28)" fg:x="1217" fg:w="13"/><text x="21.4780%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (3 samples, 0.05%)</title><rect x="21.4547%" y="917" width="0.0523%" height="15" fill="rgb(225,31,38)" fg:x="1230" fg:w="3"/><text x="21.7047%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (4 samples, 0.07%)</title><rect x="21.5071%" y="917" width="0.0698%" height="15" fill="rgb(250,208,3)" fg:x="1233" fg:w="4"/><text x="21.7571%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (2 samples, 0.03%)</title><rect x="21.7338%" y="901" width="0.0349%" height="15" fill="rgb(246,54,23)" fg:x="1246" fg:w="2"/><text x="21.9838%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (55 samples, 0.96%)</title><rect x="20.8791%" y="933" width="0.9594%" height="15" fill="rgb(243,76,11)" fg:x="1197" fg:w="55"/><text x="21.1291%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (15 samples, 0.26%)</title><rect x="21.5768%" y="917" width="0.2616%" height="15" fill="rgb(245,21,50)" fg:x="1237" fg:w="15"/><text x="21.8268%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (4 samples, 0.07%)</title><rect x="21.7687%" y="901" width="0.0698%" height="15" fill="rgb(228,9,43)" fg:x="1248" fg:w="4"/><text x="22.0187%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (4 samples, 0.07%)</title><rect x="21.8385%" y="933" width="0.0698%" height="15" fill="rgb(208,100,47)" fg:x="1252" fg:w="4"/><text x="22.0885%" y="943.50"></text></g><g><title>nori-clone-benchmark`daachorse::charwise::CharwiseDoubleArrayAhoCorasick&lt;V&gt;::deserialize_unchecked (602 samples, 10.50%)</title><rect x="11.4949%" y="997" width="10.5006%" height="15" fill="rgb(232,26,8)" fg:x="659" fg:w="602"/><text x="11.7449%" y="1007.50">nori-clone-benc..</text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (238 samples, 4.15%)</title><rect x="17.8441%" y="981" width="4.1514%" height="15" fill="rgb(216,166,38)" fg:x="1023" fg:w="238"/><text x="18.0941%" y="991.50">nori-..</text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (99 samples, 1.73%)</title><rect x="20.2686%" y="965" width="1.7268%" height="15" fill="rgb(251,202,51)" fg:x="1162" fg:w="99"/><text x="20.5186%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (83 samples, 1.45%)</title><rect x="20.5477%" y="949" width="1.4478%" height="15" fill="rgb(254,216,34)" fg:x="1178" fg:w="83"/><text x="20.7977%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (5 samples, 0.09%)</title><rect x="21.9083%" y="933" width="0.0872%" height="15" fill="rgb(251,32,27)" fg:x="1256" fg:w="5"/><text x="22.1583%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.07%)</title><rect x="23.2339%" y="821" width="0.0698%" height="15" fill="rgb(208,127,28)" fg:x="1332" fg:w="4"/><text x="23.4839%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (15 samples, 0.26%)</title><rect x="23.3037%" y="821" width="0.2616%" height="15" fill="rgb(224,137,22)" fg:x="1336" fg:w="15"/><text x="23.5537%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="23.8793%" y="805" width="0.0349%" height="15" fill="rgb(254,70,32)" fg:x="1369" fg:w="2"/><text x="24.1293%" y="815.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="23.9142%" y="805" width="0.0174%" height="15" fill="rgb(229,75,37)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="815.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="23.9142%" y="789" width="0.0174%" height="15" fill="rgb(252,64,23)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="23.9142%" y="773" width="0.0174%" height="15" fill="rgb(232,162,48)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="23.9142%" y="757" width="0.0174%" height="15" fill="rgb(246,160,12)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="767.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="23.9142%" y="741" width="0.0174%" height="15" fill="rgb(247,166,0)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="751.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="23.9142%" y="725" width="0.0174%" height="15" fill="rgb(249,219,21)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="23.9142%" y="709" width="0.0174%" height="15" fill="rgb(205,209,3)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="23.9142%" y="693" width="0.0174%" height="15" fill="rgb(243,44,1)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="23.9142%" y="677" width="0.0174%" height="15" fill="rgb(206,159,16)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="23.9142%" y="661" width="0.0174%" height="15" fill="rgb(244,77,30)" fg:x="1371" fg:w="1"/><text x="24.1642%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.09%)</title><rect x="24.1409%" y="773" width="0.0872%" height="15" fill="rgb(218,69,12)" fg:x="1384" fg:w="5"/><text x="24.3909%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12 samples, 0.21%)</title><rect x="24.0537%" y="789" width="0.2093%" height="15" fill="rgb(212,87,7)" fg:x="1379" fg:w="12"/><text x="24.3037%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="24.2282%" y="773" width="0.0349%" height="15" fill="rgb(245,114,25)" fg:x="1389" fg:w="2"/><text x="24.4782%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (3 samples, 0.05%)</title><rect x="24.2630%" y="789" width="0.0523%" height="15" fill="rgb(210,61,42)" fg:x="1391" fg:w="3"/><text x="24.5130%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.10%)</title><rect x="24.3154%" y="789" width="0.1047%" height="15" fill="rgb(211,52,33)" fg:x="1394" fg:w="6"/><text x="24.5654%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="24.5247%" y="773" width="0.0349%" height="15" fill="rgb(234,58,33)" fg:x="1406" fg:w="2"/><text x="24.7747%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (10 samples, 0.17%)</title><rect x="24.4200%" y="789" width="0.1744%" height="15" fill="rgb(220,115,36)" fg:x="1400" fg:w="10"/><text x="24.6700%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="24.5596%" y="773" width="0.0349%" height="15" fill="rgb(243,153,54)" fg:x="1408" fg:w="2"/><text x="24.8096%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (40 samples, 0.70%)</title><rect x="23.9316%" y="805" width="0.6977%" height="15" fill="rgb(251,47,18)" fg:x="1372" fg:w="40"/><text x="24.1816%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="24.5945%" y="789" width="0.0349%" height="15" fill="rgb(242,102,42)" fg:x="1410" fg:w="2"/><text x="24.8445%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (7 samples, 0.12%)</title><rect x="24.6293%" y="805" width="0.1221%" height="15" fill="rgb(234,31,38)" fg:x="1412" fg:w="7"/><text x="24.8793%" y="815.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (111 samples, 1.94%)</title><rect x="23.5653%" y="821" width="1.9362%" height="15" fill="rgb(221,117,51)" fg:x="1351" fg:w="111"/><text x="23.8153%" y="831.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::write (43 samples, 0.75%)</title><rect x="24.7514%" y="805" width="0.7500%" height="15" fill="rgb(212,20,18)" fg:x="1419" fg:w="43"/><text x="25.0014%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (4 samples, 0.07%)</title><rect x="25.5015%" y="821" width="0.0698%" height="15" fill="rgb(245,133,36)" fg:x="1462" fg:w="4"/><text x="25.7515%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.03%)</title><rect x="26.4260%" y="805" width="0.0349%" height="15" fill="rgb(212,6,19)" fg:x="1515" fg:w="2"/><text x="26.6760%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.12%)</title><rect x="26.4608%" y="805" width="0.1221%" height="15" fill="rgb(218,1,36)" fg:x="1517" fg:w="7"/><text x="26.7108%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_i16 (5 samples, 0.09%)</title><rect x="28.8156%" y="773" width="0.0872%" height="15" fill="rgb(246,84,54)" fg:x="1652" fg:w="5"/><text x="29.0656%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="30.0366%" y="741" width="0.0174%" height="15" fill="rgb(242,110,6)" fg:x="1722" fg:w="1"/><text x="30.2866%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (85 samples, 1.48%)</title><rect x="30.0541%" y="741" width="1.4826%" height="15" fill="rgb(214,47,5)" fg:x="1723" fg:w="85"/><text x="30.3041%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (14 samples, 0.24%)</title><rect x="31.5367%" y="741" width="0.2442%" height="15" fill="rgb(218,159,25)" fg:x="1808" fg:w="14"/><text x="31.7867%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for i16&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_i16 (72 samples, 1.26%)</title><rect x="31.7809%" y="741" width="1.2559%" height="15" fill="rgb(215,211,28)" fg:x="1822" fg:w="72"/><text x="32.0309%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.17%)</title><rect x="33.0368%" y="741" width="0.1744%" height="15" fill="rgb(238,59,32)" fg:x="1894" fg:w="10"/><text x="33.2868%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="37.6068%" y="725" width="0.0174%" height="15" fill="rgb(226,82,3)" fg:x="2156" fg:w="1"/><text x="37.8568%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.09%)</title><rect x="37.6243%" y="725" width="0.0872%" height="15" fill="rgb(240,164,32)" fg:x="2157" fg:w="5"/><text x="37.8743%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.42%)</title><rect x="37.7115%" y="725" width="0.4186%" height="15" fill="rgb(232,46,7)" fg:x="2162" fg:w="24"/><text x="37.9615%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (84 samples, 1.47%)</title><rect x="38.1301%" y="725" width="1.4652%" height="15" fill="rgb(229,129,53)" fg:x="2186" fg:w="84"/><text x="38.3801%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.05%)</title><rect x="40.8512%" y="693" width="0.0523%" height="15" fill="rgb(234,188,29)" fg:x="2342" fg:w="3"/><text x="41.1012%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.03%)</title><rect x="40.9035%" y="693" width="0.0349%" height="15" fill="rgb(246,141,4)" fg:x="2345" fg:w="2"/><text x="41.1535%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11 samples, 0.19%)</title><rect x="40.9384%" y="693" width="0.1919%" height="15" fill="rgb(229,23,39)" fg:x="2347" fg:w="11"/><text x="41.1884%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (11 samples, 0.19%)</title><rect x="41.5838%" y="677" width="0.1919%" height="15" fill="rgb(206,12,3)" fg:x="2384" fg:w="11"/><text x="41.8338%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (46 samples, 0.80%)</title><rect x="41.1303%" y="693" width="0.8024%" height="15" fill="rgb(252,226,20)" fg:x="2358" fg:w="46"/><text x="41.3803%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (9 samples, 0.16%)</title><rect x="41.7757%" y="677" width="0.1570%" height="15" fill="rgb(216,123,35)" fg:x="2395" fg:w="9"/><text x="42.0257%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (7 samples, 0.12%)</title><rect x="41.9327%" y="693" width="0.1221%" height="15" fill="rgb(212,68,40)" fg:x="2404" fg:w="7"/><text x="42.1827%" y="703.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (140 samples, 2.44%)</title><rect x="39.8919%" y="709" width="2.4420%" height="15" fill="rgb(254,125,32)" fg:x="2287" fg:w="140"/><text x="40.1419%" y="719.50">no..</text></g><g><title>nori-clone-benchmark`core::ptr::write (16 samples, 0.28%)</title><rect x="42.0548%" y="693" width="0.2791%" height="15" fill="rgb(253,97,22)" fg:x="2411" fg:w="16"/><text x="42.3048%" y="703.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9 samples, 0.16%)</title><rect x="42.3339%" y="709" width="0.1570%" height="15" fill="rgb(241,101,14)" fg:x="2427" fg:w="9"/><text x="42.5839%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (10 samples, 0.17%)</title><rect x="42.4908%" y="709" width="0.1744%" height="15" fill="rgb(238,103,29)" fg:x="2436" fg:w="10"/><text x="42.7408%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.05%)</title><rect x="42.6653%" y="709" width="0.0523%" height="15" fill="rgb(233,195,47)" fg:x="2446" fg:w="3"/><text x="42.9153%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (195 samples, 3.40%)</title><rect x="39.5953%" y="725" width="3.4014%" height="15" fill="rgb(246,218,30)" fg:x="2270" fg:w="195"/><text x="39.8453%" y="735.50">nor..</text></g><g><title>nori-clone-benchmark`core::mem::replace (16 samples, 0.28%)</title><rect x="42.7176%" y="709" width="0.2791%" height="15" fill="rgb(219,145,47)" fg:x="2449" fg:w="16"/><text x="42.9676%" y="719.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u16 (592 samples, 10.33%)</title><rect x="33.2112%" y="741" width="10.3262%" height="15" fill="rgb(243,12,26)" fg:x="1904" fg:w="592"/><text x="33.4612%" y="751.50">nori-clone-benc..</text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (31 samples, 0.54%)</title><rect x="42.9967%" y="725" width="0.5407%" height="15" fill="rgb(214,87,16)" fg:x="2465" fg:w="31"/><text x="43.2467%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_i16 (888 samples, 15.49%)</title><rect x="28.9203%" y="757" width="15.4893%" height="15" fill="rgb(208,99,42)" fg:x="1658" fg:w="888"/><text x="29.1703%" y="767.50">nori-clone-benchmark`&lt;&amp;m..</text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::de_zig_zag_i16 (50 samples, 0.87%)</title><rect x="43.5374%" y="741" width="0.8721%" height="15" fill="rgb(253,99,2)" fg:x="2496" fg:w="50"/><text x="43.7874%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="44.4096%" y="757" width="0.0174%" height="15" fill="rgb(220,168,23)" fg:x="2546" fg:w="1"/><text x="44.6596%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for i16&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_i16 (5 samples, 0.09%)</title><rect x="44.4270%" y="757" width="0.0872%" height="15" fill="rgb(242,38,24)" fg:x="2547" fg:w="5"/><text x="44.6770%" y="767.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u16 (3 samples, 0.05%)</title><rect x="44.5142%" y="757" width="0.0523%" height="15" fill="rgb(225,182,9)" fg:x="2552" fg:w="3"/><text x="44.7642%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (919 samples, 16.03%)</title><rect x="28.6412%" y="789" width="16.0300%" height="15" fill="rgb(243,178,37)" fg:x="1642" fg:w="919"/><text x="28.8912%" y="799.50">nori-clone-benchmark`&lt;cor..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for i16&gt;::deserialize (904 samples, 15.77%)</title><rect x="28.9028%" y="773" width="15.7684%" height="15" fill="rgb(232,139,19)" fg:x="1657" fg:w="904"/><text x="29.1528%" y="783.50">nori-clone-benchmark`ser..</text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::de_zig_zag_i16 (6 samples, 0.10%)</title><rect x="44.5665%" y="757" width="0.1047%" height="15" fill="rgb(225,201,24)" fg:x="2555" fg:w="6"/><text x="44.8165%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (85 samples, 1.48%)</title><rect x="44.6712%" y="789" width="1.4826%" height="15" fill="rgb(221,47,46)" fg:x="2561" fg:w="85"/><text x="44.9212%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,389 samples, 24.23%)</title><rect x="21.9955%" y="837" width="24.2282%" height="15" fill="rgb(249,23,13)" fg:x="1261" fg:w="1389"/><text x="22.2455%" y="847.50">nori-clone-benchmark`&lt;serde::de::impls:..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1,184 samples, 20.65%)</title><rect x="25.5713%" y="821" width="20.6524%" height="15" fill="rgb(219,9,5)" fg:x="1466" fg:w="1184"/><text x="25.8213%" y="831.50">nori-clone-benchmark`serde::de::S..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,126 samples, 19.64%)</title><rect x="26.5829%" y="805" width="19.6407%" height="15" fill="rgb(254,171,16)" fg:x="1524" fg:w="1126"/><text x="26.8329%" y="815.50">nori-clone-benchmark`&lt;postcard:..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for i16&gt;::deserialize (4 samples, 0.07%)</title><rect x="46.1538%" y="789" width="0.0698%" height="15" fill="rgb(230,171,20)" fg:x="2646" fg:w="4"/><text x="46.4038%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.03%)</title><rect x="46.2236%" y="837" width="0.0349%" height="15" fill="rgb(210,71,41)" fg:x="2650" fg:w="2"/><text x="46.4736%" y="847.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::ConnectionCost&gt;::deserialize (1,395 samples, 24.33%)</title><rect x="21.9955%" y="981" width="24.3328%" height="15" fill="rgb(206,173,20)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="991.50">nori-clone-benchmark`nori_clone::tokeni..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,395 samples, 24.33%)</title><rect x="21.9955%" y="965" width="24.3328%" height="15" fill="rgb(233,88,34)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="975.50">nori-clone-benchmark`&lt;&amp;mut postcard::de..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_tuple (1,395 samples, 24.33%)</title><rect x="21.9955%" y="949" width="24.3328%" height="15" fill="rgb(223,209,46)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="959.50">nori-clone-benchmark`&lt;&amp;mut postcard::de..</text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::_::&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::ConnectionCost&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,395 samples, 24.33%)</title><rect x="21.9955%" y="933" width="24.3328%" height="15" fill="rgb(250,43,18)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="943.50">nori-clone-benchmark`&lt;nori_clone::token..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1,395 samples, 24.33%)</title><rect x="21.9955%" y="917" width="24.3328%" height="15" fill="rgb(208,13,10)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="927.50">nori-clone-benchmark`serde::de::SeqAcce..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,395 samples, 24.33%)</title><rect x="21.9955%" y="901" width="24.3328%" height="15" fill="rgb(212,200,36)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="911.50">nori-clone-benchmark`&lt;postcard::de::des..</text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,395 samples, 24.33%)</title><rect x="21.9955%" y="885" width="24.3328%" height="15" fill="rgb(225,90,30)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="895.50">nori-clone-benchmark`&lt;core::marker::Pha..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1,395 samples, 24.33%)</title><rect x="21.9955%" y="869" width="24.3328%" height="15" fill="rgb(236,182,39)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="879.50">nori-clone-benchmark`serde::de::impls::..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,395 samples, 24.33%)</title><rect x="21.9955%" y="853" width="24.3328%" height="15" fill="rgb(212,144,35)" fg:x="1261" fg:w="1395"/><text x="22.2455%" y="863.50">nori-clone-benchmark`&lt;&amp;mut postcard::de..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (4 samples, 0.07%)</title><rect x="46.2585%" y="837" width="0.0698%" height="15" fill="rgb(228,63,44)" fg:x="2652" fg:w="4"/><text x="46.5085%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.09%)</title><rect x="46.6771%" y="789" width="0.0872%" height="15" fill="rgb(228,109,6)" fg:x="2676" fg:w="5"/><text x="46.9271%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.05%)</title><rect x="46.7120%" y="773" width="0.0523%" height="15" fill="rgb(238,117,24)" fg:x="2678" fg:w="3"/><text x="46.9620%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="46.7818%" y="773" width="0.0174%" height="15" fill="rgb(242,26,26)" fg:x="2682" fg:w="1"/><text x="47.0318%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.19%)</title><rect x="46.6597%" y="805" width="0.1919%" height="15" fill="rgb(221,92,48)" fg:x="2675" fg:w="11"/><text x="46.9097%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (5 samples, 0.09%)</title><rect x="46.7643%" y="789" width="0.0872%" height="15" fill="rgb(209,209,32)" fg:x="2681" fg:w="5"/><text x="47.0143%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.05%)</title><rect x="46.7992%" y="773" width="0.0523%" height="15" fill="rgb(221,70,22)" fg:x="2683" fg:w="3"/><text x="47.0492%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.03%)</title><rect x="46.8516%" y="805" width="0.0349%" height="15" fill="rgb(248,145,5)" fg:x="2686" fg:w="2"/><text x="47.1016%" y="815.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.66%)</title><rect x="46.5201%" y="821" width="0.6628%" height="15" fill="rgb(226,116,26)" fg:x="2667" fg:w="38"/><text x="46.7701%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (17 samples, 0.30%)</title><rect x="46.8864%" y="805" width="0.2965%" height="15" fill="rgb(244,5,17)" fg:x="2688" fg:w="17"/><text x="47.1364%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="47.2876%" y="805" width="0.0174%" height="15" fill="rgb(252,159,33)" fg:x="2711" fg:w="1"/><text x="47.5376%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.05%)</title><rect x="47.3051%" y="805" width="0.0523%" height="15" fill="rgb(206,71,0)" fg:x="2712" fg:w="3"/><text x="47.5551%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="47.7935%" y="773" width="0.0174%" height="15" fill="rgb(233,118,54)" fg:x="2740" fg:w="1"/><text x="48.0435%" y="783.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.03%)</title><rect x="47.9505%" y="741" width="0.0349%" height="15" fill="rgb(234,83,48)" fg:x="2749" fg:w="2"/><text x="48.2005%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="47.9853%" y="741" width="0.0174%" height="15" fill="rgb(228,3,54)" fg:x="2751" fg:w="1"/><text x="48.2353%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="48.0028%" y="741" width="0.0174%" height="15" fill="rgb(226,155,13)" fg:x="2752" fg:w="1"/><text x="48.2528%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.23%)</title><rect x="48.3865%" y="725" width="0.2268%" height="15" fill="rgb(241,28,37)" fg:x="2774" fg:w="13"/><text x="48.6365%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="48.6133%" y="725" width="0.0174%" height="15" fill="rgb(233,93,10)" fg:x="2787" fg:w="1"/><text x="48.8633%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.02%)</title><rect x="48.6307%" y="725" width="0.0174%" height="15" fill="rgb(225,113,19)" fg:x="2788" fg:w="1"/><text x="48.8807%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="48.6482%" y="725" width="0.0174%" height="15" fill="rgb(241,2,18)" fg:x="2789" fg:w="1"/><text x="48.8982%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="48.7179%" y="709" width="0.0174%" height="15" fill="rgb(228,207,21)" fg:x="2793" fg:w="1"/><text x="48.9679%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="48.7703%" y="693" width="0.0174%" height="15" fill="rgb(213,211,35)" fg:x="2796" fg:w="1"/><text x="49.0203%" y="703.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.21%)</title><rect x="48.7354%" y="709" width="0.2093%" height="15" fill="rgb(209,83,10)" fg:x="2794" fg:w="12"/><text x="48.9854%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (9 samples, 0.16%)</title><rect x="48.7877%" y="693" width="0.1570%" height="15" fill="rgb(209,164,1)" fg:x="2797" fg:w="9"/><text x="49.0377%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.07%)</title><rect x="48.8749%" y="677" width="0.0698%" height="15" fill="rgb(213,184,43)" fg:x="2802" fg:w="4"/><text x="49.1249%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="48.9447%" y="709" width="0.0174%" height="15" fill="rgb(231,61,34)" fg:x="2806" fg:w="1"/><text x="49.1947%" y="719.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.40%)</title><rect x="48.6656%" y="725" width="0.4012%" height="15" fill="rgb(235,75,3)" fg:x="2790" fg:w="23"/><text x="48.9156%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (6 samples, 0.10%)</title><rect x="48.9621%" y="709" width="0.1047%" height="15" fill="rgb(220,106,47)" fg:x="2807" fg:w="6"/><text x="49.2121%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.10%)</title><rect x="48.9621%" y="693" width="0.1047%" height="15" fill="rgb(210,196,33)" fg:x="2807" fg:w="6"/><text x="49.2121%" y="703.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="49.0668%" y="709" width="0.0174%" height="15" fill="rgb(229,154,42)" fg:x="2813" fg:w="1"/><text x="49.3168%" y="719.50"></text></g><g><title>nori-clone-benchmark`__rdl_alloc (1 samples, 0.02%)</title><rect x="49.6250%" y="629" width="0.0174%" height="15" fill="rgb(228,114,26)" fg:x="2845" fg:w="1"/><text x="49.8750%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.14%)</title><rect x="50.7413%" y="565" width="0.1395%" height="15" fill="rgb(208,144,1)" fg:x="2909" fg:w="8"/><text x="50.9913%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (74 samples, 1.29%)</title><rect x="49.6947%" y="581" width="1.2908%" height="15" fill="rgb(239,112,37)" fg:x="2849" fg:w="74"/><text x="49.9447%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (6 samples, 0.10%)</title><rect x="50.8809%" y="565" width="0.1047%" height="15" fill="rgb(210,96,50)" fg:x="2917" fg:w="6"/><text x="51.1309%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (77 samples, 1.34%)</title><rect x="49.6773%" y="597" width="1.3431%" height="15" fill="rgb(222,178,2)" fg:x="2848" fg:w="77"/><text x="49.9273%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="50.9855%" y="581" width="0.0349%" height="15" fill="rgb(226,74,18)" fg:x="2923" fg:w="2"/><text x="51.2355%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (80 samples, 1.40%)</title><rect x="49.6424%" y="613" width="1.3954%" height="15" fill="rgb(225,67,54)" fg:x="2846" fg:w="80"/><text x="49.8924%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="51.0204%" y="597" width="0.0174%" height="15" fill="rgb(251,92,32)" fg:x="2925" fg:w="1"/><text x="51.2704%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="51.0204%" y="581" width="0.0174%" height="15" fill="rgb(228,149,22)" fg:x="2925" fg:w="1"/><text x="51.2704%" y="591.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (83 samples, 1.45%)</title><rect x="49.6424%" y="629" width="1.4478%" height="15" fill="rgb(243,54,13)" fg:x="2846" fg:w="83"/><text x="49.8924%" y="639.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (3 samples, 0.05%)</title><rect x="51.0379%" y="613" width="0.0523%" height="15" fill="rgb(243,180,28)" fg:x="2926" fg:w="3"/><text x="51.2879%" y="623.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (2 samples, 0.03%)</title><rect x="51.0553%" y="597" width="0.0349%" height="15" fill="rgb(208,167,24)" fg:x="2927" fg:w="2"/><text x="51.3053%" y="607.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="51.0902%" y="629" width="0.0174%" height="15" fill="rgb(245,73,45)" fg:x="2929" fg:w="1"/><text x="51.3402%" y="639.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="51.1251%" y="613" width="0.0174%" height="15" fill="rgb(237,203,48)" fg:x="2931" fg:w="1"/><text x="51.3751%" y="623.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new (8 samples, 0.14%)</title><rect x="51.1076%" y="629" width="0.1395%" height="15" fill="rgb(211,197,16)" fg:x="2930" fg:w="8"/><text x="51.3576%" y="639.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (6 samples, 0.10%)</title><rect x="51.1425%" y="613" width="0.1047%" height="15" fill="rgb(243,99,51)" fg:x="2932" fg:w="6"/><text x="51.3925%" y="623.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="51.2297%" y="597" width="0.0174%" height="15" fill="rgb(215,123,29)" fg:x="2937" fg:w="1"/><text x="51.4797%" y="607.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (103 samples, 1.80%)</title><rect x="49.5203%" y="645" width="1.7966%" height="15" fill="rgb(239,186,37)" fg:x="2839" fg:w="103"/><text x="49.7703%" y="655.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.07%)</title><rect x="51.2472%" y="629" width="0.0698%" height="15" fill="rgb(252,136,39)" fg:x="2938" fg:w="4"/><text x="51.4972%" y="639.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (3 samples, 0.05%)</title><rect x="51.2646%" y="613" width="0.0523%" height="15" fill="rgb(223,213,32)" fg:x="2939" fg:w="3"/><text x="51.5146%" y="623.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="51.2995%" y="597" width="0.0174%" height="15" fill="rgb(233,115,5)" fg:x="2941" fg:w="1"/><text x="51.5495%" y="607.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="51.3169%" y="645" width="0.0174%" height="15" fill="rgb(207,226,44)" fg:x="2942" fg:w="1"/><text x="51.5669%" y="655.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="51.3344%" y="645" width="0.0174%" height="15" fill="rgb(208,126,0)" fg:x="2943" fg:w="1"/><text x="51.5844%" y="655.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (107 samples, 1.87%)</title><rect x="49.5029%" y="661" width="1.8664%" height="15" fill="rgb(244,66,21)" fg:x="2838" fg:w="107"/><text x="49.7529%" y="671.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="51.3518%" y="645" width="0.0174%" height="15" fill="rgb(222,97,12)" fg:x="2944" fg:w="1"/><text x="51.6018%" y="655.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="51.3693%" y="661" width="0.0174%" height="15" fill="rgb(219,213,19)" fg:x="2945" fg:w="1"/><text x="51.6193%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.03%)</title><rect x="51.5088%" y="645" width="0.0349%" height="15" fill="rgb(252,169,30)" fg:x="2953" fg:w="2"/><text x="51.7588%" y="655.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (19 samples, 0.33%)</title><rect x="51.3867%" y="661" width="0.3314%" height="15" fill="rgb(206,32,51)" fg:x="2946" fg:w="19"/><text x="51.6367%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (10 samples, 0.17%)</title><rect x="51.5437%" y="645" width="0.1744%" height="15" fill="rgb(250,172,42)" fg:x="2955" fg:w="10"/><text x="51.7937%" y="655.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="51.7181%" y="661" width="0.0174%" height="15" fill="rgb(209,34,43)" fg:x="2965" fg:w="1"/><text x="51.9681%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="51.7356%" y="661" width="0.0174%" height="15" fill="rgb(223,11,35)" fg:x="2966" fg:w="1"/><text x="51.9856%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="51.7530%" y="661" width="0.0174%" height="15" fill="rgb(251,219,26)" fg:x="2967" fg:w="1"/><text x="52.0030%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="51.7705%" y="661" width="0.0174%" height="15" fill="rgb(231,119,3)" fg:x="2968" fg:w="1"/><text x="52.0205%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="51.7705%" y="645" width="0.0174%" height="15" fill="rgb(216,97,11)" fg:x="2968" fg:w="1"/><text x="52.0205%" y="655.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="51.7879%" y="661" width="0.0174%" height="15" fill="rgb(223,59,9)" fg:x="2969" fg:w="1"/><text x="52.0379%" y="671.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (155 samples, 2.70%)</title><rect x="49.1191%" y="677" width="2.7036%" height="15" fill="rgb(233,93,31)" fg:x="2816" fg:w="155"/><text x="49.3691%" y="687.50">no..</text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="51.8053%" y="661" width="0.0174%" height="15" fill="rgb(239,81,33)" fg:x="2970" fg:w="1"/><text x="52.0553%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="51.8228%" y="677" width="0.0174%" height="15" fill="rgb(213,120,34)" fg:x="2971" fg:w="1"/><text x="52.0728%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="51.8402%" y="677" width="0.0174%" height="15" fill="rgb(243,49,53)" fg:x="2972" fg:w="1"/><text x="52.0902%" y="687.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T&gt;::with_capacity (161 samples, 2.81%)</title><rect x="49.0668%" y="725" width="2.8083%" height="15" fill="rgb(247,216,33)" fg:x="2813" fg:w="161"/><text x="49.3168%" y="735.50">no..</text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (160 samples, 2.79%)</title><rect x="49.0842%" y="709" width="2.7909%" height="15" fill="rgb(226,26,14)" fg:x="2814" fg:w="160"/><text x="49.3342%" y="719.50">no..</text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (158 samples, 2.76%)</title><rect x="49.1191%" y="693" width="2.7560%" height="15" fill="rgb(215,49,53)" fg:x="2816" fg:w="158"/><text x="49.3691%" y="703.50">no..</text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="51.8577%" y="677" width="0.0174%" height="15" fill="rgb(245,162,40)" fg:x="2973" fg:w="1"/><text x="52.1077%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.02%)</title><rect x="51.8751%" y="725" width="0.0174%" height="15" fill="rgb(229,68,17)" fg:x="2974" fg:w="1"/><text x="52.1251%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="51.8926%" y="725" width="0.0174%" height="15" fill="rgb(213,182,10)" fg:x="2975" fg:w="1"/><text x="52.1426%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="51.9449%" y="709" width="0.0174%" height="15" fill="rgb(245,125,30)" fg:x="2978" fg:w="1"/><text x="52.1949%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::min (3 samples, 0.05%)</title><rect x="51.9972%" y="693" width="0.0523%" height="15" fill="rgb(232,202,2)" fg:x="2981" fg:w="3"/><text x="52.2472%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::cmp::min (6 samples, 0.10%)</title><rect x="51.9623%" y="709" width="0.1047%" height="15" fill="rgb(237,140,51)" fg:x="2979" fg:w="6"/><text x="52.2123%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.02%)</title><rect x="52.0495%" y="693" width="0.0174%" height="15" fill="rgb(236,157,25)" fg:x="2984" fg:w="1"/><text x="52.2995%" y="703.50"></text></g><g><title>nori-clone-benchmark`serde::__private::size_hint::cautious (11 samples, 0.19%)</title><rect x="51.9100%" y="725" width="0.1919%" height="15" fill="rgb(219,209,0)" fg:x="2976" fg:w="11"/><text x="52.1600%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::unwrap_or (2 samples, 0.03%)</title><rect x="52.0670%" y="709" width="0.0349%" height="15" fill="rgb(240,116,54)" fg:x="2985" fg:w="2"/><text x="52.3170%" y="719.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="52.1716%" y="709" width="0.0174%" height="15" fill="rgb(216,10,36)" fg:x="2991" fg:w="1"/><text x="52.4216%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="52.1891%" y="709" width="0.0349%" height="15" fill="rgb(222,72,44)" fg:x="2992" fg:w="2"/><text x="52.4391%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="52.2240%" y="709" width="0.0174%" height="15" fill="rgb(232,159,9)" fg:x="2994" fg:w="1"/><text x="52.4740%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="52.2414%" y="709" width="0.0349%" height="15" fill="rgb(210,39,32)" fg:x="2995" fg:w="2"/><text x="52.4914%" y="719.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="52.4158%" y="693" width="0.0174%" height="15" fill="rgb(216,194,45)" fg:x="3005" fg:w="1"/><text x="52.6658%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.37%)</title><rect x="52.4333%" y="693" width="0.3663%" height="15" fill="rgb(218,18,35)" fg:x="3006" fg:w="21"/><text x="52.6833%" y="703.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="52.9217%" y="677" width="0.0174%" height="15" fill="rgb(207,83,51)" fg:x="3034" fg:w="1"/><text x="53.1717%" y="687.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="53.3403%" y="629" width="0.0174%" height="15" fill="rgb(225,63,43)" fg:x="3058" fg:w="1"/><text x="53.5903%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="53.3578%" y="629" width="0.0174%" height="15" fill="rgb(207,57,36)" fg:x="3059" fg:w="1"/><text x="53.6078%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.10%)</title><rect x="54.2473%" y="613" width="0.1047%" height="15" fill="rgb(216,99,33)" fg:x="3110" fg:w="6"/><text x="54.4973%" y="623.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.07%)</title><rect x="54.5788%" y="597" width="0.0698%" height="15" fill="rgb(225,42,16)" fg:x="3129" fg:w="4"/><text x="54.8288%" y="607.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_i32 (1 samples, 0.02%)</title><rect x="56.0614%" y="565" width="0.0174%" height="15" fill="rgb(220,201,45)" fg:x="3214" fg:w="1"/><text x="56.3114%" y="575.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.05%)</title><rect x="56.0788%" y="565" width="0.0523%" height="15" fill="rgb(225,33,4)" fg:x="3215" fg:w="3"/><text x="56.3288%" y="575.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u16 (1 samples, 0.02%)</title><rect x="56.1312%" y="565" width="0.0174%" height="15" fill="rgb(224,33,50)" fg:x="3218" fg:w="1"/><text x="56.3812%" y="575.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.05%)</title><rect x="56.1486%" y="565" width="0.0523%" height="15" fill="rgb(246,198,51)" fg:x="3219" fg:w="3"/><text x="56.3986%" y="575.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u8 (1 samples, 0.02%)</title><rect x="56.3754%" y="549" width="0.0174%" height="15" fill="rgb(205,22,4)" fg:x="3232" fg:w="1"/><text x="56.6254%" y="559.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.05%)</title><rect x="56.3928%" y="549" width="0.0523%" height="15" fill="rgb(206,3,8)" fg:x="3233" fg:w="3"/><text x="56.6428%" y="559.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u8 (4 samples, 0.07%)</title><rect x="56.4800%" y="533" width="0.0698%" height="15" fill="rgb(251,23,15)" fg:x="3238" fg:w="4"/><text x="56.7300%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u8 (1 samples, 0.02%)</title><rect x="56.5324%" y="517" width="0.0174%" height="15" fill="rgb(252,88,28)" fg:x="3241" fg:w="1"/><text x="56.7824%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="56.5498%" y="533" width="0.0174%" height="15" fill="rgb(212,127,14)" fg:x="3242" fg:w="1"/><text x="56.7998%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (1 samples, 0.02%)</title><rect x="56.5672%" y="533" width="0.0174%" height="15" fill="rgb(247,145,37)" fg:x="3243" fg:w="1"/><text x="56.8172%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::POSType as serde::de::Deserialize&gt;::deserialize (23 samples, 0.40%)</title><rect x="56.2009%" y="565" width="0.4012%" height="15" fill="rgb(209,117,53)" fg:x="3222" fg:w="23"/><text x="56.4509%" y="575.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (9 samples, 0.16%)</title><rect x="56.4451%" y="549" width="0.1570%" height="15" fill="rgb(212,90,42)" fg:x="3236" fg:w="9"/><text x="56.6951%" y="559.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u8 (1 samples, 0.02%)</title><rect x="56.5847%" y="533" width="0.0174%" height="15" fill="rgb(218,164,37)" fg:x="3244" fg:w="1"/><text x="56.8347%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="56.8463%" y="533" width="0.0349%" height="15" fill="rgb(246,65,34)" fg:x="3259" fg:w="2"/><text x="57.0963%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (1 samples, 0.02%)</title><rect x="56.8812%" y="533" width="0.0174%" height="15" fill="rgb(231,100,33)" fg:x="3261" fg:w="1"/><text x="57.1312%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="57.4568%" y="517" width="0.0174%" height="15" fill="rgb(228,126,14)" fg:x="3294" fg:w="1"/><text x="57.7068%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::size_hint (5 samples, 0.09%)</title><rect x="57.4743%" y="517" width="0.0872%" height="15" fill="rgb(215,173,21)" fg:x="3295" fg:w="5"/><text x="57.7243%" y="527.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="57.5615%" y="517" width="0.0174%" height="15" fill="rgb(210,6,40)" fg:x="3300" fg:w="1"/><text x="57.8115%" y="527.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="57.7185%" y="501" width="0.0174%" height="15" fill="rgb(212,48,18)" fg:x="3309" fg:w="1"/><text x="57.9685%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="57.8057%" y="469" width="0.0174%" height="15" fill="rgb(230,214,11)" fg:x="3314" fg:w="1"/><text x="58.0557%" y="479.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.09%)</title><rect x="57.7708%" y="485" width="0.0872%" height="15" fill="rgb(254,105,39)" fg:x="3312" fg:w="5"/><text x="58.0208%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="57.8231%" y="469" width="0.0349%" height="15" fill="rgb(245,158,5)" fg:x="3315" fg:w="2"/><text x="58.0731%" y="479.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="57.8580%" y="485" width="0.0349%" height="15" fill="rgb(249,208,11)" fg:x="3317" fg:w="2"/><text x="58.1080%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="57.8929%" y="485" width="0.0174%" height="15" fill="rgb(210,39,28)" fg:x="3319" fg:w="1"/><text x="58.1429%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="57.9801%" y="469" width="0.0174%" height="15" fill="rgb(211,56,53)" fg:x="3324" fg:w="1"/><text x="58.2301%" y="479.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (20 samples, 0.35%)</title><rect x="57.7359%" y="501" width="0.3489%" height="15" fill="rgb(226,201,30)" fg:x="3310" fg:w="20"/><text x="57.9859%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (10 samples, 0.17%)</title><rect x="57.9103%" y="485" width="0.1744%" height="15" fill="rgb(239,101,34)" fg:x="3320" fg:w="10"/><text x="58.1603%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.09%)</title><rect x="57.9976%" y="469" width="0.0872%" height="15" fill="rgb(226,209,5)" fg:x="3325" fg:w="5"/><text x="58.2476%" y="479.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.05%)</title><rect x="58.0848%" y="501" width="0.0523%" height="15" fill="rgb(250,105,47)" fg:x="3330" fg:w="3"/><text x="58.3348%" y="511.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.58%)</title><rect x="57.5789%" y="517" width="0.5756%" height="15" fill="rgb(230,72,3)" fg:x="3301" fg:w="33"/><text x="57.8289%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="58.1371%" y="501" width="0.0174%" height="15" fill="rgb(232,218,39)" fg:x="3333" fg:w="1"/><text x="58.3871%" y="511.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="58.1545%" y="517" width="0.0698%" height="15" fill="rgb(248,166,6)" fg:x="3334" fg:w="4"/><text x="58.4045%" y="527.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="58.3290%" y="485" width="0.0174%" height="15" fill="rgb(247,89,20)" fg:x="3344" fg:w="1"/><text x="58.5790%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="59.1313%" y="421" width="0.0174%" height="15" fill="rgb(248,130,54)" fg:x="3390" fg:w="1"/><text x="59.3813%" y="431.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="59.1488%" y="421" width="0.0349%" height="15" fill="rgb(234,196,4)" fg:x="3391" fg:w="2"/><text x="59.3988%" y="431.50"></text></g><g><title>nori-clone-benchmark`__rdl_alloc (2 samples, 0.03%)</title><rect x="59.1837%" y="421" width="0.0349%" height="15" fill="rgb(250,143,31)" fg:x="3393" fg:w="2"/><text x="59.4337%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.16%)</title><rect x="60.2826%" y="357" width="0.1570%" height="15" fill="rgb(211,110,34)" fg:x="3456" fg:w="9"/><text x="60.5326%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (66 samples, 1.15%)</title><rect x="59.3755%" y="373" width="1.1512%" height="15" fill="rgb(215,124,48)" fg:x="3404" fg:w="66"/><text x="59.6255%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.09%)</title><rect x="60.4396%" y="357" width="0.0872%" height="15" fill="rgb(216,46,13)" fg:x="3465" fg:w="5"/><text x="60.6896%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (73 samples, 1.27%)</title><rect x="59.2709%" y="405" width="1.2733%" height="15" fill="rgb(205,184,25)" fg:x="3398" fg:w="73"/><text x="59.5209%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (71 samples, 1.24%)</title><rect x="59.3058%" y="389" width="1.2384%" height="15" fill="rgb(228,1,10)" fg:x="3400" fg:w="71"/><text x="59.5558%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="60.5268%" y="373" width="0.0174%" height="15" fill="rgb(213,116,27)" fg:x="3470" fg:w="1"/><text x="60.7768%" y="383.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (78 samples, 1.36%)</title><rect x="59.2186%" y="421" width="1.3605%" height="15" fill="rgb(241,95,50)" fg:x="3395" fg:w="78"/><text x="59.4686%" y="431.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (2 samples, 0.03%)</title><rect x="60.5442%" y="405" width="0.0349%" height="15" fill="rgb(238,48,32)" fg:x="3471" fg:w="2"/><text x="60.7942%" y="415.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="60.5791%" y="421" width="0.0174%" height="15" fill="rgb(235,113,49)" fg:x="3473" fg:w="1"/><text x="60.8291%" y="431.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="60.5965%" y="421" width="0.0174%" height="15" fill="rgb(205,127,43)" fg:x="3474" fg:w="1"/><text x="60.8465%" y="431.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new (8 samples, 0.14%)</title><rect x="60.6140%" y="421" width="0.1395%" height="15" fill="rgb(250,162,2)" fg:x="3475" fg:w="8"/><text x="60.8640%" y="431.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (5 samples, 0.09%)</title><rect x="60.6663%" y="405" width="0.0872%" height="15" fill="rgb(220,13,41)" fg:x="3478" fg:w="5"/><text x="60.9163%" y="415.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="60.7186%" y="389" width="0.0349%" height="15" fill="rgb(249,221,25)" fg:x="3481" fg:w="2"/><text x="60.9686%" y="399.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="60.7884%" y="405" width="0.0174%" height="15" fill="rgb(215,208,19)" fg:x="3485" fg:w="1"/><text x="61.0384%" y="415.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="60.8059%" y="405" width="0.0174%" height="15" fill="rgb(236,175,2)" fg:x="3486" fg:w="1"/><text x="61.0559%" y="415.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.05%)</title><rect x="60.8233%" y="405" width="0.0523%" height="15" fill="rgb(241,52,2)" fg:x="3487" fg:w="3"/><text x="61.0733%" y="415.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (121 samples, 2.11%)</title><rect x="58.9395%" y="437" width="2.1106%" height="15" fill="rgb(248,140,14)" fg:x="3379" fg:w="121"/><text x="59.1895%" y="447.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (17 samples, 0.30%)</title><rect x="60.7535%" y="421" width="0.2965%" height="15" fill="rgb(253,22,42)" fg:x="3483" fg:w="17"/><text x="61.0035%" y="431.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (10 samples, 0.17%)</title><rect x="60.8756%" y="405" width="0.1744%" height="15" fill="rgb(234,61,47)" fg:x="3490" fg:w="10"/><text x="61.1256%" y="415.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (3 samples, 0.05%)</title><rect x="60.9977%" y="389" width="0.0523%" height="15" fill="rgb(208,226,15)" fg:x="3497" fg:w="3"/><text x="61.2477%" y="399.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (125 samples, 2.18%)</title><rect x="58.8871%" y="453" width="2.1804%" height="15" fill="rgb(217,221,4)" fg:x="3376" fg:w="125"/><text x="59.1371%" y="463.50">n..</text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="61.0501%" y="437" width="0.0174%" height="15" fill="rgb(212,174,34)" fg:x="3500" fg:w="1"/><text x="61.3001%" y="447.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="61.0675%" y="453" width="0.0174%" height="15" fill="rgb(253,83,4)" fg:x="3501" fg:w="1"/><text x="61.3175%" y="463.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="61.0849%" y="453" width="0.0174%" height="15" fill="rgb(250,195,49)" fg:x="3502" fg:w="1"/><text x="61.3349%" y="463.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::new_in (5 samples, 0.09%)</title><rect x="61.1024%" y="453" width="0.0872%" height="15" fill="rgb(241,192,25)" fg:x="3503" fg:w="5"/><text x="61.3524%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::dangling (5 samples, 0.09%)</title><rect x="61.1024%" y="437" width="0.0872%" height="15" fill="rgb(208,124,10)" fg:x="3503" fg:w="5"/><text x="61.3524%" y="447.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::dangling (2 samples, 0.03%)</title><rect x="61.1547%" y="421" width="0.0349%" height="15" fill="rgb(222,33,0)" fg:x="3506" fg:w="2"/><text x="61.4047%" y="431.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="61.1896%" y="453" width="0.0174%" height="15" fill="rgb(234,209,28)" fg:x="3508" fg:w="1"/><text x="61.4396%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (3 samples, 0.05%)</title><rect x="61.4861%" y="437" width="0.0523%" height="15" fill="rgb(224,11,23)" fg:x="3525" fg:w="3"/><text x="61.7361%" y="447.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (24 samples, 0.42%)</title><rect x="61.2070%" y="453" width="0.4186%" height="15" fill="rgb(232,99,1)" fg:x="3509" fg:w="24"/><text x="61.4570%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (5 samples, 0.09%)</title><rect x="61.5385%" y="437" width="0.0872%" height="15" fill="rgb(237,95,45)" fg:x="3528" fg:w="5"/><text x="61.7885%" y="447.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="61.6257%" y="453" width="0.0174%" height="15" fill="rgb(208,109,11)" fg:x="3533" fg:w="1"/><text x="61.8757%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (3 samples, 0.05%)</title><rect x="61.6431%" y="453" width="0.0523%" height="15" fill="rgb(216,190,48)" fg:x="3534" fg:w="3"/><text x="61.8931%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="61.6780%" y="437" width="0.0174%" height="15" fill="rgb(251,171,36)" fg:x="3536" fg:w="1"/><text x="61.9280%" y="447.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.03%)</title><rect x="61.6954%" y="453" width="0.0349%" height="15" fill="rgb(230,62,22)" fg:x="3537" fg:w="2"/><text x="61.9454%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::dangling (1 samples, 0.02%)</title><rect x="61.7303%" y="453" width="0.0174%" height="15" fill="rgb(225,114,35)" fg:x="3539" fg:w="1"/><text x="61.9803%" y="463.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (195 samples, 3.40%)</title><rect x="58.4162%" y="469" width="3.4014%" height="15" fill="rgb(215,118,42)" fg:x="3349" fg:w="195"/><text x="58.6662%" y="479.50">nor..</text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (4 samples, 0.07%)</title><rect x="61.7478%" y="453" width="0.0698%" height="15" fill="rgb(243,119,21)" fg:x="3540" fg:w="4"/><text x="61.9978%" y="463.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="61.8175%" y="469" width="0.0174%" height="15" fill="rgb(252,177,53)" fg:x="3544" fg:w="1"/><text x="62.0675%" y="479.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T&gt;::with_capacity (208 samples, 3.63%)</title><rect x="58.2243%" y="517" width="3.6281%" height="15" fill="rgb(237,209,29)" fg:x="3338" fg:w="208"/><text x="58.4743%" y="527.50">nori..</text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (207 samples, 3.61%)</title><rect x="58.2418%" y="501" width="3.6107%" height="15" fill="rgb(212,65,23)" fg:x="3339" fg:w="207"/><text x="58.4918%" y="511.50">nori..</text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (201 samples, 3.51%)</title><rect x="58.3464%" y="485" width="3.5060%" height="15" fill="rgb(230,222,46)" fg:x="3345" fg:w="201"/><text x="58.5964%" y="495.50">nor..</text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="61.8350%" y="469" width="0.0174%" height="15" fill="rgb(215,135,32)" fg:x="3545" fg:w="1"/><text x="62.0850%" y="479.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.02%)</title><rect x="61.8524%" y="517" width="0.0174%" height="15" fill="rgb(246,101,22)" fg:x="3546" fg:w="1"/><text x="62.1024%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;core::option::Option&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;&gt; (1 samples, 0.02%)</title><rect x="61.8699%" y="517" width="0.0174%" height="15" fill="rgb(206,107,13)" fg:x="3547" fg:w="1"/><text x="62.1199%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="61.8873%" y="517" width="0.0174%" height="15" fill="rgb(250,100,44)" fg:x="3548" fg:w="1"/><text x="62.1373%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="61.9222%" y="501" width="0.0174%" height="15" fill="rgb(231,147,38)" fg:x="3550" fg:w="1"/><text x="62.1722%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::cmp::min (13 samples, 0.23%)</title><rect x="61.9396%" y="501" width="0.2268%" height="15" fill="rgb(229,8,40)" fg:x="3551" fg:w="13"/><text x="62.1896%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::min (10 samples, 0.17%)</title><rect x="61.9920%" y="485" width="0.1744%" height="15" fill="rgb(221,135,30)" fg:x="3554" fg:w="10"/><text x="62.2420%" y="495.50"></text></g><g><title>nori-clone-benchmark`serde::__private::size_hint::cautious (20 samples, 0.35%)</title><rect x="61.9048%" y="517" width="0.3489%" height="15" fill="rgb(249,193,18)" fg:x="3549" fg:w="20"/><text x="62.1548%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::unwrap_or (5 samples, 0.09%)</title><rect x="62.1664%" y="501" width="0.0872%" height="15" fill="rgb(209,133,39)" fg:x="3564" fg:w="5"/><text x="62.4164%" y="511.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.03%)</title><rect x="62.3408%" y="501" width="0.0349%" height="15" fill="rgb(232,100,14)" fg:x="3574" fg:w="2"/><text x="62.5908%" y="511.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.07%)</title><rect x="62.3757%" y="501" width="0.0698%" height="15" fill="rgb(224,185,1)" fg:x="3576" fg:w="4"/><text x="62.6257%" y="511.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u8 (1 samples, 0.02%)</title><rect x="63.5095%" y="453" width="0.0174%" height="15" fill="rgb(223,139,8)" fg:x="3641" fg:w="1"/><text x="63.7595%" y="463.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="63.5269%" y="453" width="0.0174%" height="15" fill="rgb(232,213,38)" fg:x="3642" fg:w="1"/><text x="63.7769%" y="463.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.05%)</title><rect x="63.6142%" y="421" width="0.0523%" height="15" fill="rgb(207,94,22)" fg:x="3647" fg:w="3"/><text x="63.8642%" y="431.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (6 samples, 0.10%)</title><rect x="63.6665%" y="421" width="0.1047%" height="15" fill="rgb(219,183,54)" fg:x="3650" fg:w="6"/><text x="63.9165%" y="431.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::POSTag as serde::de::Deserialize&gt;::deserialize (30 samples, 0.52%)</title><rect x="63.2653%" y="469" width="0.5233%" height="15" fill="rgb(216,185,54)" fg:x="3627" fg:w="30"/><text x="63.5153%" y="479.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (14 samples, 0.24%)</title><rect x="63.5444%" y="453" width="0.2442%" height="15" fill="rgb(254,217,39)" fg:x="3643" fg:w="14"/><text x="63.7944%" y="463.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u8 (13 samples, 0.23%)</title><rect x="63.5618%" y="437" width="0.2268%" height="15" fill="rgb(240,178,23)" fg:x="3644" fg:w="13"/><text x="63.8118%" y="447.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u8 (1 samples, 0.02%)</title><rect x="63.7711%" y="421" width="0.0174%" height="15" fill="rgb(218,11,47)" fg:x="3656" fg:w="1"/><text x="64.0211%" y="431.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="64.4514%" y="405" width="0.0174%" height="15" fill="rgb(218,51,51)" fg:x="3695" fg:w="1"/><text x="64.7014%" y="415.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.03%)</title><rect x="64.5735%" y="389" width="0.0349%" height="15" fill="rgb(238,126,27)" fg:x="3702" fg:w="2"/><text x="64.8235%" y="399.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="64.6084%" y="389" width="0.0174%" height="15" fill="rgb(249,202,22)" fg:x="3704" fg:w="1"/><text x="64.8584%" y="399.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="65.1143%" y="341" width="0.0174%" height="15" fill="rgb(254,195,49)" fg:x="3733" fg:w="1"/><text x="65.3643%" y="351.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="65.2538%" y="309" width="0.0174%" height="15" fill="rgb(208,123,14)" fg:x="3741" fg:w="1"/><text x="65.5038%" y="319.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (11 samples, 0.19%)</title><rect x="65.2712%" y="309" width="0.1919%" height="15" fill="rgb(224,200,8)" fg:x="3742" fg:w="11"/><text x="65.5212%" y="319.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u8 (20 samples, 0.35%)</title><rect x="65.1666%" y="325" width="0.3489%" height="15" fill="rgb(217,61,36)" fg:x="3736" fg:w="20"/><text x="65.4166%" y="335.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u8 (3 samples, 0.05%)</title><rect x="65.4631%" y="309" width="0.0523%" height="15" fill="rgb(206,35,45)" fg:x="3753" fg:w="3"/><text x="65.7131%" y="319.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::POSTag as serde::de::Deserialize&gt;::deserialize (30 samples, 0.52%)</title><rect x="65.0096%" y="357" width="0.5233%" height="15" fill="rgb(217,65,33)" fg:x="3727" fg:w="30"/><text x="65.2596%" y="367.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (23 samples, 0.40%)</title><rect x="65.1317%" y="341" width="0.4012%" height="15" fill="rgb(222,158,48)" fg:x="3734" fg:w="23"/><text x="65.3817%" y="351.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u8 (1 samples, 0.02%)</title><rect x="65.5154%" y="325" width="0.0174%" height="15" fill="rgb(254,2,54)" fg:x="3756" fg:w="1"/><text x="65.7654%" y="335.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="65.6027%" y="341" width="0.0174%" height="15" fill="rgb(250,143,38)" fg:x="3761" fg:w="1"/><text x="65.8527%" y="351.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.09%)</title><rect x="65.8992%" y="309" width="0.0872%" height="15" fill="rgb(248,25,0)" fg:x="3778" fg:w="5"/><text x="66.1492%" y="319.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (2 samples, 0.03%)</title><rect x="65.9864%" y="309" width="0.0349%" height="15" fill="rgb(206,152,27)" fg:x="3783" fg:w="2"/><text x="66.2364%" y="319.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="66.0387%" y="293" width="0.0174%" height="15" fill="rgb(240,77,30)" fg:x="3786" fg:w="1"/><text x="66.2887%" y="303.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="66.0736%" y="277" width="0.0174%" height="15" fill="rgb(231,5,3)" fg:x="3788" fg:w="1"/><text x="66.3236%" y="287.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (2 samples, 0.03%)</title><rect x="66.0911%" y="277" width="0.0349%" height="15" fill="rgb(207,226,32)" fg:x="3789" fg:w="2"/><text x="66.3411%" y="287.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::try_take_n (7 samples, 0.12%)</title><rect x="66.0213%" y="309" width="0.1221%" height="15" fill="rgb(222,207,47)" fg:x="3785" fg:w="7"/><text x="66.2713%" y="319.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (5 samples, 0.09%)</title><rect x="66.0562%" y="293" width="0.0872%" height="15" fill="rgb(229,115,45)" fg:x="3787" fg:w="5"/><text x="66.3062%" y="303.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="66.1259%" y="277" width="0.0174%" height="15" fill="rgb(224,191,6)" fg:x="3791" fg:w="1"/><text x="66.3759%" y="287.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="66.1259%" y="261" width="0.0174%" height="15" fill="rgb(230,227,24)" fg:x="3791" fg:w="1"/><text x="66.3759%" y="271.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="66.1434%" y="309" width="0.0174%" height="15" fill="rgb(228,80,19)" fg:x="3792" fg:w="1"/><text x="66.3934%" y="319.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="66.1608%" y="309" width="0.0174%" height="15" fill="rgb(247,229,0)" fg:x="3793" fg:w="1"/><text x="66.4108%" y="319.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.03%)</title><rect x="66.1783%" y="309" width="0.0349%" height="15" fill="rgb(237,194,15)" fg:x="3794" fg:w="2"/><text x="66.4283%" y="319.50"></text></g><g><title>nori-clone-benchmark`core::str::converts::from_utf8 (15 samples, 0.26%)</title><rect x="66.2132%" y="309" width="0.2616%" height="15" fill="rgb(219,203,20)" fg:x="3796" fg:w="15"/><text x="66.4632%" y="319.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="66.5795%" y="293" width="0.0174%" height="15" fill="rgb(234,128,8)" fg:x="3817" fg:w="1"/><text x="66.8295%" y="303.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="66.5969%" y="293" width="0.0349%" height="15" fill="rgb(248,202,8)" fg:x="3818" fg:w="2"/><text x="66.8469%" y="303.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (3 samples, 0.05%)</title><rect x="66.6318%" y="293" width="0.0523%" height="15" fill="rgb(206,104,37)" fg:x="3820" fg:w="3"/><text x="66.8818%" y="303.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="66.7888%" y="261" width="0.0174%" height="15" fill="rgb(223,8,27)" fg:x="3829" fg:w="1"/><text x="67.0388%" y="271.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.02%)</title><rect x="66.8062%" y="261" width="0.0174%" height="15" fill="rgb(216,217,28)" fg:x="3830" fg:w="1"/><text x="67.0562%" y="271.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (3 samples, 0.05%)</title><rect x="66.8411%" y="245" width="0.0523%" height="15" fill="rgb(249,199,1)" fg:x="3832" fg:w="3"/><text x="67.0911%" y="255.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (5 samples, 0.09%)</title><rect x="66.8237%" y="261" width="0.0872%" height="15" fill="rgb(240,85,17)" fg:x="3831" fg:w="5"/><text x="67.0737%" y="271.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="66.8934%" y="245" width="0.0174%" height="15" fill="rgb(206,108,45)" fg:x="3835" fg:w="1"/><text x="67.1434%" y="255.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.24%)</title><rect x="66.6841%" y="293" width="0.2442%" height="15" fill="rgb(245,210,41)" fg:x="3823" fg:w="14"/><text x="66.9341%" y="303.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.21%)</title><rect x="66.7190%" y="277" width="0.2093%" height="15" fill="rgb(206,13,37)" fg:x="3825" fg:w="12"/><text x="66.9690%" y="287.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (1 samples, 0.02%)</title><rect x="66.9109%" y="261" width="0.0174%" height="15" fill="rgb(250,61,18)" fg:x="3836" fg:w="1"/><text x="67.1609%" y="271.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u64 (27 samples, 0.47%)</title><rect x="66.4748%" y="309" width="0.4710%" height="15" fill="rgb(235,172,48)" fg:x="3811" fg:w="27"/><text x="66.7248%" y="319.50"></text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (1 samples, 0.02%)</title><rect x="66.9283%" y="293" width="0.0174%" height="15" fill="rgb(249,201,17)" fg:x="3837" fg:w="1"/><text x="67.1783%" y="303.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="67.0679%" y="261" width="0.0174%" height="15" fill="rgb(219,208,6)" fg:x="3845" fg:w="1"/><text x="67.3179%" y="271.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="67.2074%" y="165" width="0.0349%" height="15" fill="rgb(248,31,23)" fg:x="3853" fg:w="2"/><text x="67.4574%" y="175.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="67.2248%" y="149" width="0.0174%" height="15" fill="rgb(245,15,42)" fg:x="3854" fg:w="1"/><text x="67.4748%" y="159.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.16%)</title><rect x="67.1900%" y="181" width="0.1570%" height="15" fill="rgb(222,217,39)" fg:x="3852" fg:w="9"/><text x="67.4400%" y="191.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (6 samples, 0.10%)</title><rect x="67.2423%" y="165" width="0.1047%" height="15" fill="rgb(210,219,27)" fg:x="3855" fg:w="6"/><text x="67.4923%" y="175.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.07%)</title><rect x="67.2772%" y="149" width="0.0698%" height="15" fill="rgb(252,166,36)" fg:x="3857" fg:w="4"/><text x="67.5272%" y="159.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="67.4342%" y="149" width="0.0349%" height="15" fill="rgb(245,132,34)" fg:x="3866" fg:w="2"/><text x="67.6842%" y="159.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="67.6784%" y="117" width="0.0174%" height="15" fill="rgb(236,54,3)" fg:x="3880" fg:w="1"/><text x="67.9284%" y="127.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="67.8005%" y="101" width="0.0349%" height="15" fill="rgb(241,173,43)" fg:x="3887" fg:w="2"/><text x="68.0505%" y="111.50"></text></g><g><title>nori-clone-benchmark`__rdl_alloc (1 samples, 0.02%)</title><rect x="67.8353%" y="101" width="0.0174%" height="15" fill="rgb(215,190,9)" fg:x="3889" fg:w="1"/><text x="68.0853%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.17%)</title><rect x="68.1319%" y="37" width="0.1744%" height="15" fill="rgb(242,101,16)" fg:x="3906" fg:w="10"/><text x="68.3819%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.44%)</title><rect x="67.8877%" y="85" width="0.4361%" height="15" fill="rgb(223,190,21)" fg:x="3892" fg:w="25"/><text x="68.1377%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.42%)</title><rect x="67.9051%" y="69" width="0.4186%" height="15" fill="rgb(215,228,25)" fg:x="3893" fg:w="24"/><text x="68.1551%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.42%)</title><rect x="67.9051%" y="53" width="0.4186%" height="15" fill="rgb(225,36,22)" fg:x="3893" fg:w="24"/><text x="68.1551%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="68.3063%" y="37" width="0.0174%" height="15" fill="rgb(251,106,46)" fg:x="3916" fg:w="1"/><text x="68.5563%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="68.3237%" y="85" width="0.0174%" height="15" fill="rgb(208,90,1)" fg:x="3917" fg:w="1"/><text x="68.5737%" y="95.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (2 samples, 0.03%)</title><rect x="68.4110%" y="69" width="0.0349%" height="15" fill="rgb(243,10,4)" fg:x="3922" fg:w="2"/><text x="68.6610%" y="79.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::get (1 samples, 0.02%)</title><rect x="68.4458%" y="69" width="0.0174%" height="15" fill="rgb(212,137,27)" fg:x="3924" fg:w="1"/><text x="68.6958%" y="79.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (36 samples, 0.63%)</title><rect x="67.8528%" y="101" width="0.6279%" height="15" fill="rgb(231,220,49)" fg:x="3890" fg:w="36"/><text x="68.1028%" y="111.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (8 samples, 0.14%)</title><rect x="68.3412%" y="85" width="0.1395%" height="15" fill="rgb(237,96,20)" fg:x="3918" fg:w="8"/><text x="68.5912%" y="95.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="68.4633%" y="69" width="0.0174%" height="15" fill="rgb(239,229,30)" fg:x="3925" fg:w="1"/><text x="68.7133%" y="79.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="68.4807%" y="101" width="0.0174%" height="15" fill="rgb(219,65,33)" fg:x="3926" fg:w="1"/><text x="68.7307%" y="111.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="68.4982%" y="101" width="0.0174%" height="15" fill="rgb(243,134,7)" fg:x="3927" fg:w="1"/><text x="68.7482%" y="111.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new (10 samples, 0.17%)</title><rect x="68.5156%" y="101" width="0.1744%" height="15" fill="rgb(216,177,54)" fg:x="3928" fg:w="10"/><text x="68.7656%" y="111.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (8 samples, 0.14%)</title><rect x="68.5505%" y="85" width="0.1395%" height="15" fill="rgb(211,160,20)" fg:x="3930" fg:w="8"/><text x="68.8005%" y="95.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="68.6552%" y="69" width="0.0349%" height="15" fill="rgb(239,85,39)" fg:x="3936" fg:w="2"/><text x="68.9052%" y="79.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.05%)</title><rect x="68.7249%" y="85" width="0.0523%" height="15" fill="rgb(232,125,22)" fg:x="3940" fg:w="3"/><text x="68.9749%" y="95.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (68 samples, 1.19%)</title><rect x="67.6958%" y="117" width="1.1861%" height="15" fill="rgb(244,57,34)" fg:x="3881" fg:w="68"/><text x="67.9458%" y="127.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (11 samples, 0.19%)</title><rect x="68.6900%" y="101" width="0.1919%" height="15" fill="rgb(214,203,32)" fg:x="3938" fg:w="11"/><text x="68.9400%" y="111.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (6 samples, 0.10%)</title><rect x="68.7773%" y="85" width="0.1047%" height="15" fill="rgb(207,58,43)" fg:x="3943" fg:w="6"/><text x="69.0273%" y="95.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (4 samples, 0.07%)</title><rect x="68.8121%" y="69" width="0.0698%" height="15" fill="rgb(215,193,15)" fg:x="3945" fg:w="4"/><text x="69.0621%" y="79.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 1.24%)</title><rect x="67.6609%" y="133" width="1.2384%" height="15" fill="rgb(232,15,44)" fg:x="3879" fg:w="71"/><text x="67.9109%" y="143.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="68.8819%" y="117" width="0.0174%" height="15" fill="rgb(212,3,48)" fg:x="3949" fg:w="1"/><text x="69.1319%" y="127.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="68.8994%" y="133" width="0.0174%" height="15" fill="rgb(218,128,7)" fg:x="3950" fg:w="1"/><text x="69.1494%" y="143.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.05%)</title><rect x="69.0389%" y="117" width="0.0523%" height="15" fill="rgb(226,216,39)" fg:x="3958" fg:w="3"/><text x="69.2889%" y="127.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (3 samples, 0.05%)</title><rect x="69.0912%" y="117" width="0.0523%" height="15" fill="rgb(243,47,51)" fg:x="3961" fg:w="3"/><text x="69.3412%" y="127.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::new_unchecked (1 samples, 0.02%)</title><rect x="69.1261%" y="101" width="0.0174%" height="15" fill="rgb(241,183,40)" fg:x="3963" fg:w="1"/><text x="69.3761%" y="111.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::new_unchecked (1 samples, 0.02%)</title><rect x="69.1436%" y="117" width="0.0174%" height="15" fill="rgb(231,217,32)" fg:x="3964" fg:w="1"/><text x="69.3936%" y="127.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (20 samples, 0.35%)</title><rect x="68.9168%" y="133" width="0.3489%" height="15" fill="rgb(229,61,38)" fg:x="3951" fg:w="20"/><text x="69.1668%" y="143.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (6 samples, 0.10%)</title><rect x="69.1610%" y="117" width="0.1047%" height="15" fill="rgb(225,210,5)" fg:x="3965" fg:w="6"/><text x="69.4110%" y="127.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="69.2657%" y="133" width="0.0174%" height="15" fill="rgb(231,79,45)" fg:x="3971" fg:w="1"/><text x="69.5157%" y="143.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="69.2831%" y="133" width="0.0349%" height="15" fill="rgb(224,100,7)" fg:x="3972" fg:w="2"/><text x="69.5331%" y="143.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="69.3180%" y="133" width="0.0174%" height="15" fill="rgb(241,198,18)" fg:x="3974" fg:w="1"/><text x="69.5680%" y="143.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="69.3180%" y="117" width="0.0174%" height="15" fill="rgb(252,97,53)" fg:x="3974" fg:w="1"/><text x="69.5680%" y="127.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="69.3354%" y="133" width="0.0174%" height="15" fill="rgb(220,88,7)" fg:x="3975" fg:w="1"/><text x="69.5854%" y="143.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (112 samples, 1.95%)</title><rect x="67.4690%" y="149" width="1.9536%" height="15" fill="rgb(213,176,14)" fg:x="3868" fg:w="112"/><text x="67.7190%" y="159.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (4 samples, 0.07%)</title><rect x="69.3529%" y="133" width="0.0698%" height="15" fill="rgb(246,73,7)" fg:x="3976" fg:w="4"/><text x="69.6029%" y="143.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="69.4052%" y="117" width="0.0174%" height="15" fill="rgb(245,64,36)" fg:x="3979" fg:w="1"/><text x="69.6552%" y="127.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="69.4226%" y="149" width="0.0174%" height="15" fill="rgb(245,80,10)" fg:x="3980" fg:w="1"/><text x="69.6726%" y="159.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="69.4401%" y="149" width="0.0174%" height="15" fill="rgb(232,107,50)" fg:x="3981" fg:w="1"/><text x="69.6901%" y="159.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="69.4575%" y="149" width="0.0174%" height="15" fill="rgb(253,3,0)" fg:x="3982" fg:w="1"/><text x="69.7075%" y="159.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="69.4750%" y="149" width="0.0174%" height="15" fill="rgb(212,99,53)" fg:x="3983" fg:w="1"/><text x="69.7250%" y="159.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (124 samples, 2.16%)</title><rect x="67.3469%" y="181" width="2.1629%" height="15" fill="rgb(249,111,54)" fg:x="3861" fg:w="124"/><text x="67.5969%" y="191.50">n..</text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (120 samples, 2.09%)</title><rect x="67.4167%" y="165" width="2.0931%" height="15" fill="rgb(249,55,30)" fg:x="3865" fg:w="120"/><text x="67.6667%" y="175.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="69.4924%" y="149" width="0.0174%" height="15" fill="rgb(237,47,42)" fg:x="3984" fg:w="1"/><text x="69.7424%" y="159.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="69.5099%" y="181" width="0.0174%" height="15" fill="rgb(211,20,18)" fg:x="3985" fg:w="1"/><text x="69.7599%" y="191.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="69.5273%" y="181" width="0.0174%" height="15" fill="rgb(231,203,46)" fg:x="3986" fg:w="1"/><text x="69.7773%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="69.5273%" y="165" width="0.0174%" height="15" fill="rgb(237,142,3)" fg:x="3986" fg:w="1"/><text x="69.7773%" y="175.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (141 samples, 2.46%)</title><rect x="67.1202%" y="197" width="2.4594%" height="15" fill="rgb(241,107,1)" fg:x="3848" fg:w="141"/><text x="67.3702%" y="207.50">no..</text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::len (2 samples, 0.03%)</title><rect x="69.5447%" y="181" width="0.0349%" height="15" fill="rgb(229,83,13)" fg:x="3987" fg:w="2"/><text x="69.7947%" y="191.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (144 samples, 2.51%)</title><rect x="67.0853%" y="229" width="2.5118%" height="15" fill="rgb(241,91,40)" fg:x="3846" fg:w="144"/><text x="67.3353%" y="239.50">no..</text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (143 samples, 2.49%)</title><rect x="67.1027%" y="213" width="2.4943%" height="15" fill="rgb(225,3,45)" fg:x="3847" fg:w="143"/><text x="67.3527%" y="223.50">no..</text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="69.5796%" y="197" width="0.0174%" height="15" fill="rgb(244,223,14)" fg:x="3989" fg:w="1"/><text x="69.8296%" y="207.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_str (224 samples, 3.91%)</title><rect x="65.7073%" y="325" width="3.9072%" height="15" fill="rgb(224,124,37)" fg:x="3767" fg:w="224"/><text x="65.9573%" y="335.50">nori..</text></g><g><title>nori-clone-benchmark`serde::de::Visitor::visit_borrowed_str (153 samples, 2.67%)</title><rect x="66.9458%" y="309" width="2.6688%" height="15" fill="rgb(251,171,30)" fg:x="3838" fg:w="153"/><text x="67.1958%" y="319.50">no..</text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (148 samples, 2.58%)</title><rect x="67.0330%" y="293" width="2.5815%" height="15" fill="rgb(236,46,54)" fg:x="3843" fg:w="148"/><text x="67.2830%" y="303.50">no..</text></g><g><title>nori-clone-benchmark`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (147 samples, 2.56%)</title><rect x="67.0504%" y="277" width="2.5641%" height="15" fill="rgb(245,213,5)" fg:x="3844" fg:w="147"/><text x="67.3004%" y="287.50">no..</text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (145 samples, 2.53%)</title><rect x="67.0853%" y="261" width="2.5292%" height="15" fill="rgb(230,144,27)" fg:x="3846" fg:w="145"/><text x="67.3353%" y="271.50">no..</text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec (145 samples, 2.53%)</title><rect x="67.0853%" y="245" width="2.5292%" height="15" fill="rgb(220,86,6)" fg:x="3846" fg:w="145"/><text x="67.3353%" y="255.50">no..</text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="69.5971%" y="229" width="0.0174%" height="15" fill="rgb(240,20,13)" fg:x="3990" fg:w="1"/><text x="69.8471%" y="239.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="69.6145%" y="325" width="0.0174%" height="15" fill="rgb(217,89,34)" fg:x="3991" fg:w="1"/><text x="69.8645%" y="335.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (236 samples, 4.12%)</title><rect x="65.5329%" y="357" width="4.1165%" height="15" fill="rgb(229,13,5)" fg:x="3757" fg:w="236"/><text x="65.7829%" y="367.50">nori..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_string (231 samples, 4.03%)</title><rect x="65.6201%" y="341" width="4.0293%" height="15" fill="rgb(244,67,35)" fg:x="3762" fg:w="231"/><text x="65.8701%" y="351.50">nori..</text></g><g><title>nori-clone-benchmark`serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="69.6320%" y="325" width="0.0174%" height="15" fill="rgb(221,40,2)" fg:x="3992" fg:w="1"/><text x="69.8820%" y="335.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (273 samples, 4.76%)</title><rect x="64.9049%" y="373" width="4.7619%" height="15" fill="rgb(237,157,21)" fg:x="3721" fg:w="273"/><text x="65.1549%" y="383.50">nori-c..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (1 samples, 0.02%)</title><rect x="69.6494%" y="357" width="0.0174%" height="15" fill="rgb(222,94,11)" fg:x="3993" fg:w="1"/><text x="69.8994%" y="367.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::_::&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (324 samples, 5.65%)</title><rect x="64.0502%" y="421" width="5.6515%" height="15" fill="rgb(249,113,6)" fg:x="3672" fg:w="324"/><text x="64.3002%" y="431.50">nori-cl..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (300 samples, 5.23%)</title><rect x="64.4689%" y="405" width="5.2329%" height="15" fill="rgb(238,137,36)" fg:x="3696" fg:w="300"/><text x="64.7189%" y="415.50">nori-c..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (291 samples, 5.08%)</title><rect x="64.6259%" y="389" width="5.0759%" height="15" fill="rgb(210,102,26)" fg:x="3705" fg:w="291"/><text x="64.8759%" y="399.50">nori-c..</text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="69.6668%" y="373" width="0.0349%" height="15" fill="rgb(218,30,30)" fg:x="3994" fg:w="2"/><text x="69.9168%" y="383.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_tuple (328 samples, 5.72%)</title><rect x="64.0328%" y="437" width="5.7213%" height="15" fill="rgb(214,67,26)" fg:x="3671" fg:w="328"/><text x="64.2828%" y="447.50">nori-cl..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (3 samples, 0.05%)</title><rect x="69.7017%" y="421" width="0.0523%" height="15" fill="rgb(251,9,53)" fg:x="3996" fg:w="3"/><text x="69.9517%" y="431.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (384 samples, 6.70%)</title><rect x="63.0734%" y="485" width="6.6981%" height="15" fill="rgb(228,204,25)" fg:x="3616" fg:w="384"/><text x="63.3234%" y="495.50">nori-clon..</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;::deserialize (343 samples, 5.98%)</title><rect x="63.7886%" y="469" width="5.9829%" height="15" fill="rgb(207,153,8)" fg:x="3657" fg:w="343"/><text x="64.0386%" y="479.50">nori-clo..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (335 samples, 5.84%)</title><rect x="63.9281%" y="453" width="5.8434%" height="15" fill="rgb(242,9,16)" fg:x="3665" fg:w="335"/><text x="64.1781%" y="463.50">nori-cl..</text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.02%)</title><rect x="69.7541%" y="437" width="0.0174%" height="15" fill="rgb(217,211,10)" fg:x="3999" fg:w="1"/><text x="70.0041%" y="447.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.30%)</title><rect x="69.7715%" y="485" width="0.2965%" height="15" fill="rgb(219,228,52)" fg:x="4000" fg:w="17"/><text x="70.0215%" y="495.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (756 samples, 13.19%)</title><rect x="56.8987%" y="533" width="13.1868%" height="15" fill="rgb(231,92,29)" fg:x="3262" fg:w="756"/><text x="57.1487%" y="543.50">nori-clone-benchmark..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (449 samples, 7.83%)</title><rect x="62.2536%" y="517" width="7.8319%" height="15" fill="rgb(232,8,23)" fg:x="3569" fg:w="449"/><text x="62.5036%" y="527.50">nori-clone-..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (438 samples, 7.64%)</title><rect x="62.4455%" y="501" width="7.6400%" height="15" fill="rgb(216,211,34)" fg:x="3580" fg:w="438"/><text x="62.6955%" y="511.50">nori-clone..</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;::deserialize (1 samples, 0.02%)</title><rect x="70.0680%" y="485" width="0.0174%" height="15" fill="rgb(236,151,0)" fg:x="4017" fg:w="1"/><text x="70.3180%" y="495.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.05%)</title><rect x="70.0855%" y="533" width="0.0523%" height="15" fill="rgb(209,168,3)" fg:x="4018" fg:w="3"/><text x="70.3355%" y="543.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="70.1378%" y="533" width="0.0174%" height="15" fill="rgb(208,129,28)" fg:x="4021" fg:w="1"/><text x="70.3878%" y="543.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.03%)</title><rect x="70.1552%" y="533" width="0.0349%" height="15" fill="rgb(229,78,22)" fg:x="4022" fg:w="2"/><text x="70.4052%" y="543.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map (7 samples, 0.12%)</title><rect x="70.1901%" y="533" width="0.1221%" height="15" fill="rgb(228,187,13)" fg:x="4024" fg:w="7"/><text x="70.4401%" y="543.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_usize::_{{closure}} (2 samples, 0.03%)</title><rect x="70.2773%" y="517" width="0.0349%" height="15" fill="rgb(240,119,24)" fg:x="4029" fg:w="2"/><text x="70.5273%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="70.6262%" y="517" width="0.0174%" height="15" fill="rgb(209,194,42)" fg:x="4049" fg:w="1"/><text x="70.8762%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.07%)</title><rect x="70.6436%" y="517" width="0.0698%" height="15" fill="rgb(247,200,46)" fg:x="4050" fg:w="4"/><text x="70.8936%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (7 samples, 0.12%)</title><rect x="70.7134%" y="517" width="0.1221%" height="15" fill="rgb(218,76,16)" fg:x="4054" fg:w="7"/><text x="70.9634%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (4 samples, 0.07%)</title><rect x="70.9576%" y="485" width="0.0698%" height="15" fill="rgb(225,21,48)" fg:x="4068" fg:w="4"/><text x="71.2076%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (3 samples, 0.05%)</title><rect x="70.9751%" y="469" width="0.0523%" height="15" fill="rgb(239,223,50)" fg:x="4069" fg:w="3"/><text x="71.2251%" y="479.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (2 samples, 0.03%)</title><rect x="71.0274%" y="485" width="0.0349%" height="15" fill="rgb(244,45,21)" fg:x="4072" fg:w="2"/><text x="71.2774%" y="495.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.19%)</title><rect x="70.8878%" y="501" width="0.1919%" height="15" fill="rgb(232,33,43)" fg:x="4064" fg:w="11"/><text x="71.1378%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="71.0623%" y="485" width="0.0174%" height="15" fill="rgb(209,8,3)" fg:x="4074" fg:w="1"/><text x="71.3123%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.03%)</title><rect x="71.0797%" y="501" width="0.0349%" height="15" fill="rgb(214,25,53)" fg:x="4075" fg:w="2"/><text x="71.3297%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.30%)</title><rect x="70.8355%" y="517" width="0.2965%" height="15" fill="rgb(254,186,54)" fg:x="4061" fg:w="17"/><text x="71.0855%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="71.1146%" y="501" width="0.0174%" height="15" fill="rgb(208,174,49)" fg:x="4077" fg:w="1"/><text x="71.3646%" y="511.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u64 (51 samples, 0.89%)</title><rect x="70.3122%" y="533" width="0.8896%" height="15" fill="rgb(233,191,51)" fg:x="4031" fg:w="51"/><text x="70.5622%" y="543.50"></text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (4 samples, 0.07%)</title><rect x="71.1320%" y="517" width="0.0698%" height="15" fill="rgb(222,134,10)" fg:x="4078" fg:w="4"/><text x="71.3820%" y="527.50"></text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (1 samples, 0.02%)</title><rect x="71.2018%" y="533" width="0.0174%" height="15" fill="rgb(230,226,20)" fg:x="4082" fg:w="1"/><text x="71.4518%" y="543.50"></text></g><g><title>nori-clone-benchmark`serde::__private::size_hint::cautious (2 samples, 0.03%)</title><rect x="71.2193%" y="533" width="0.0349%" height="15" fill="rgb(251,111,25)" fg:x="4083" fg:w="2"/><text x="71.4693%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (834 samples, 14.55%)</title><rect x="56.7242%" y="549" width="14.5474%" height="15" fill="rgb(224,40,46)" fg:x="3252" fg:w="834"/><text x="56.9742%" y="559.50">nori-clone-benchmark`&lt;..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="71.2541%" y="533" width="0.0174%" height="15" fill="rgb(236,108,47)" fg:x="4085" fg:w="1"/><text x="71.5041%" y="543.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (843 samples, 14.70%)</title><rect x="56.6021%" y="565" width="14.7043%" height="15" fill="rgb(234,93,0)" fg:x="3245" fg:w="843"/><text x="56.8521%" y="575.50">nori-clone-benchmark`s..</text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.03%)</title><rect x="71.2716%" y="549" width="0.0349%" height="15" fill="rgb(224,213,32)" fg:x="4086" fg:w="2"/><text x="71.5216%" y="559.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.07%)</title><rect x="71.6379%" y="533" width="0.0698%" height="15" fill="rgb(251,11,48)" fg:x="4107" fg:w="4"/><text x="71.8879%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (1 samples, 0.02%)</title><rect x="71.7077%" y="533" width="0.0174%" height="15" fill="rgb(236,173,5)" fg:x="4111" fg:w="1"/><text x="71.9577%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for i32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_i32 (6 samples, 0.10%)</title><rect x="71.7251%" y="533" width="0.1047%" height="15" fill="rgb(230,95,12)" fg:x="4112" fg:w="6"/><text x="71.9751%" y="543.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="71.8298%" y="533" width="0.0174%" height="15" fill="rgb(232,209,1)" fg:x="4118" fg:w="1"/><text x="72.0798%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="72.1961%" y="517" width="0.0349%" height="15" fill="rgb(232,6,1)" fg:x="4139" fg:w="2"/><text x="72.4461%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (7 samples, 0.12%)</title><rect x="72.2309%" y="517" width="0.1221%" height="15" fill="rgb(210,224,50)" fg:x="4141" fg:w="7"/><text x="72.4809%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.05%)</title><rect x="72.5100%" y="485" width="0.0523%" height="15" fill="rgb(228,127,35)" fg:x="4157" fg:w="3"/><text x="72.7600%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="72.5624%" y="485" width="0.0174%" height="15" fill="rgb(245,102,45)" fg:x="4160" fg:w="1"/><text x="72.8124%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (2 samples, 0.03%)</title><rect x="72.5972%" y="469" width="0.0349%" height="15" fill="rgb(214,1,49)" fg:x="4162" fg:w="2"/><text x="72.8472%" y="479.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (4 samples, 0.07%)</title><rect x="72.5798%" y="485" width="0.0698%" height="15" fill="rgb(226,163,40)" fg:x="4161" fg:w="4"/><text x="72.8298%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="72.6321%" y="469" width="0.0174%" height="15" fill="rgb(239,212,28)" fg:x="4164" fg:w="1"/><text x="72.8821%" y="479.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.26%)</title><rect x="72.4054%" y="501" width="0.2616%" height="15" fill="rgb(220,20,13)" fg:x="4151" fg:w="15"/><text x="72.6554%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (1 samples, 0.02%)</title><rect x="72.6496%" y="485" width="0.0174%" height="15" fill="rgb(210,164,35)" fg:x="4165" fg:w="1"/><text x="72.8996%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.03%)</title><rect x="72.6670%" y="501" width="0.0349%" height="15" fill="rgb(248,109,41)" fg:x="4166" fg:w="2"/><text x="72.9170%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.03%)</title><rect x="72.7019%" y="501" width="0.0349%" height="15" fill="rgb(238,23,50)" fg:x="4168" fg:w="2"/><text x="72.9519%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (24 samples, 0.42%)</title><rect x="72.3530%" y="517" width="0.4186%" height="15" fill="rgb(211,48,49)" fg:x="4148" fg:w="24"/><text x="72.6030%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (2 samples, 0.03%)</title><rect x="72.7368%" y="501" width="0.0349%" height="15" fill="rgb(223,36,21)" fg:x="4170" fg:w="2"/><text x="72.9868%" y="511.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u32 (55 samples, 0.96%)</title><rect x="71.8472%" y="533" width="0.9594%" height="15" fill="rgb(207,123,46)" fg:x="4119" fg:w="55"/><text x="72.0972%" y="543.50"></text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (2 samples, 0.03%)</title><rect x="72.7717%" y="517" width="0.0349%" height="15" fill="rgb(240,218,32)" fg:x="4172" fg:w="2"/><text x="73.0217%" y="527.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::de_zig_zag_i32 (2 samples, 0.03%)</title><rect x="72.8066%" y="533" width="0.0349%" height="15" fill="rgb(252,5,43)" fg:x="4174" fg:w="2"/><text x="73.0566%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_i32 (83 samples, 1.45%)</title><rect x="71.4286%" y="549" width="1.4478%" height="15" fill="rgb(252,84,19)" fg:x="4095" fg:w="83"/><text x="71.6786%" y="559.50"></text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (2 samples, 0.03%)</title><rect x="72.8414%" y="533" width="0.0349%" height="15" fill="rgb(243,152,39)" fg:x="4176" fg:w="2"/><text x="73.0914%" y="543.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for i32&gt;::deserialize (91 samples, 1.59%)</title><rect x="71.3065%" y="565" width="1.5873%" height="15" fill="rgb(234,160,15)" fg:x="4088" fg:w="91"/><text x="71.5565%" y="575.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::de_zig_zag_i32 (1 samples, 0.02%)</title><rect x="72.8763%" y="549" width="0.0174%" height="15" fill="rgb(237,34,20)" fg:x="4178" fg:w="1"/><text x="73.1263%" y="559.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="73.2775%" y="533" width="0.0174%" height="15" fill="rgb(229,97,13)" fg:x="4201" fg:w="1"/><text x="73.5275%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.26%)</title><rect x="73.2950%" y="533" width="0.2616%" height="15" fill="rgb(234,71,50)" fg:x="4202" fg:w="15"/><text x="73.5450%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (1 samples, 0.02%)</title><rect x="73.5566%" y="533" width="0.0174%" height="15" fill="rgb(253,155,4)" fg:x="4217" fg:w="1"/><text x="73.8066%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u16&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u16 (15 samples, 0.26%)</title><rect x="73.5740%" y="533" width="0.2616%" height="15" fill="rgb(222,185,37)" fg:x="4218" fg:w="15"/><text x="73.8240%" y="543.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="73.8357%" y="533" width="0.0174%" height="15" fill="rgb(251,177,13)" fg:x="4233" fg:w="1"/><text x="74.0857%" y="543.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="74.6555%" y="517" width="0.0174%" height="15" fill="rgb(250,179,40)" fg:x="4280" fg:w="1"/><text x="74.9055%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.05%)</title><rect x="74.6729%" y="517" width="0.0523%" height="15" fill="rgb(242,44,2)" fg:x="4281" fg:w="3"/><text x="74.9229%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.17%)</title><rect x="74.7253%" y="517" width="0.1744%" height="15" fill="rgb(216,177,13)" fg:x="4284" fg:w="10"/><text x="74.9753%" y="527.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (22 samples, 0.38%)</title><rect x="74.8997%" y="517" width="0.3837%" height="15" fill="rgb(216,106,43)" fg:x="4294" fg:w="22"/><text x="75.1497%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.03%)</title><rect x="75.5974%" y="485" width="0.0349%" height="15" fill="rgb(216,183,2)" fg:x="4334" fg:w="2"/><text x="75.8474%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (13 samples, 0.23%)</title><rect x="75.6323%" y="485" width="0.2268%" height="15" fill="rgb(249,75,3)" fg:x="4336" fg:w="13"/><text x="75.8823%" y="495.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (8 samples, 0.14%)</title><rect x="75.7195%" y="469" width="0.1395%" height="15" fill="rgb(219,67,39)" fg:x="4341" fg:w="8"/><text x="75.9695%" y="479.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (1 samples, 0.02%)</title><rect x="75.8591%" y="485" width="0.0174%" height="15" fill="rgb(253,228,2)" fg:x="4349" fg:w="1"/><text x="76.1091%" y="495.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (28 samples, 0.49%)</title><rect x="75.4230%" y="501" width="0.4884%" height="15" fill="rgb(235,138,27)" fg:x="4324" fg:w="28"/><text x="75.6730%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (2 samples, 0.03%)</title><rect x="75.8765%" y="485" width="0.0349%" height="15" fill="rgb(236,97,51)" fg:x="4350" fg:w="2"/><text x="76.1265%" y="495.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.07%)</title><rect x="75.9114%" y="501" width="0.0698%" height="15" fill="rgb(240,80,30)" fg:x="4352" fg:w="4"/><text x="76.1614%" y="511.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (43 samples, 0.75%)</title><rect x="75.2834%" y="517" width="0.7500%" height="15" fill="rgb(230,178,19)" fg:x="4316" fg:w="43"/><text x="75.5334%" y="527.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (3 samples, 0.05%)</title><rect x="75.9812%" y="501" width="0.0523%" height="15" fill="rgb(210,190,27)" fg:x="4356" fg:w="3"/><text x="76.2312%" y="511.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u16 (186 samples, 3.24%)</title><rect x="73.0159%" y="549" width="3.2444%" height="15" fill="rgb(222,107,31)" fg:x="4186" fg:w="186"/><text x="73.2659%" y="559.50">nor..</text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u16 (138 samples, 2.41%)</title><rect x="73.8531%" y="533" width="2.4071%" height="15" fill="rgb(216,127,34)" fg:x="4234" fg:w="138"/><text x="74.1031%" y="543.50">no..</text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (13 samples, 0.23%)</title><rect x="76.0335%" y="517" width="0.2268%" height="15" fill="rgb(234,116,52)" fg:x="4359" fg:w="13"/><text x="76.2835%" y="527.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u16&gt;::deserialize (196 samples, 3.42%)</title><rect x="72.8938%" y="565" width="3.4188%" height="15" fill="rgb(222,124,15)" fg:x="4179" fg:w="196"/><text x="73.1438%" y="575.50">nor..</text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u16 (3 samples, 0.05%)</title><rect x="76.2602%" y="549" width="0.0523%" height="15" fill="rgb(231,179,28)" fg:x="4372" fg:w="3"/><text x="76.5102%" y="559.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,176 samples, 20.51%)</title><rect x="55.8172%" y="581" width="20.5128%" height="15" fill="rgb(226,93,45)" fg:x="3200" fg:w="1176"/><text x="56.0672%" y="591.50">nori-clone-benchmark`&lt;core::mark..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (1 samples, 0.02%)</title><rect x="76.3126%" y="565" width="0.0174%" height="15" fill="rgb(215,8,51)" fg:x="4375" fg:w="1"/><text x="76.5626%" y="575.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.45%)</title><rect x="76.3300%" y="581" width="0.4535%" height="15" fill="rgb(223,106,5)" fg:x="4376" fg:w="26"/><text x="76.5800%" y="591.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::_::&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::Morpheme&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,343 samples, 23.43%)</title><rect x="53.3752%" y="629" width="23.4258%" height="15" fill="rgb(250,191,5)" fg:x="3060" fg:w="1343"/><text x="53.6252%" y="639.50">nori-clone-benchmark`&lt;nori_clone::tok..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1,287 samples, 22.45%)</title><rect x="54.3520%" y="613" width="22.4490%" height="15" fill="rgb(242,132,44)" fg:x="3116" fg:w="1287"/><text x="54.6020%" y="623.50">nori-clone-benchmark`serde::de::SeqA..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,270 samples, 22.15%)</title><rect x="54.6485%" y="597" width="22.1525%" height="15" fill="rgb(251,152,29)" fg:x="3133" fg:w="1270"/><text x="54.8985%" y="607.50">nori-clone-benchmark`&lt;postcard::de:..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="76.7835%" y="581" width="0.0174%" height="15" fill="rgb(218,179,5)" fg:x="4402" fg:w="1"/><text x="77.0335%" y="591.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_tuple (1,348 samples, 23.51%)</title><rect x="53.3054%" y="645" width="23.5130%" height="15" fill="rgb(227,67,19)" fg:x="3056" fg:w="1348"/><text x="53.5554%" y="655.50">nori-clone-benchmark`&lt;&amp;mut postcard::..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="76.8010%" y="629" width="0.0174%" height="15" fill="rgb(233,119,31)" fg:x="4403" fg:w="1"/><text x="77.0510%" y="639.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,378 samples, 24.04%)</title><rect x="52.7996%" y="693" width="24.0363%" height="15" fill="rgb(241,120,22)" fg:x="3027" fg:w="1378"/><text x="53.0496%" y="703.50">nori-clone-benchmark`&lt;core::marker::Ph..</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::Morpheme&gt;::deserialize (1,370 samples, 23.90%)</title><rect x="52.9391%" y="677" width="23.8967%" height="15" fill="rgb(224,102,30)" fg:x="3035" fg:w="1370"/><text x="53.1891%" y="687.50">nori-clone-benchmark`nori_clone::token..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,362 samples, 23.76%)</title><rect x="53.0787%" y="661" width="23.7572%" height="15" fill="rgb(210,164,37)" fg:x="3043" fg:w="1362"/><text x="53.3287%" y="671.50">nori-clone-benchmark`&lt;&amp;mut postcard::d..</text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.02%)</title><rect x="76.8184%" y="645" width="0.0174%" height="15" fill="rgb(226,191,16)" fg:x="4404" fg:w="1"/><text x="77.0684%" y="655.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.19%)</title><rect x="76.8359%" y="693" width="0.1919%" height="15" fill="rgb(214,40,45)" fg:x="4405" fg:w="11"/><text x="77.0859%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.10%)</title><rect x="76.9231%" y="677" width="0.1047%" height="15" fill="rgb(244,29,26)" fg:x="4410" fg:w="6"/><text x="77.1731%" y="687.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,665 samples, 29.04%)</title><rect x="48.0202%" y="741" width="29.0424%" height="15" fill="rgb(216,16,5)" fg:x="2753" fg:w="1665"/><text x="48.2702%" y="751.50">nori-clone-benchmark`&lt;serde::de::impls::&lt;impl s..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1,431 samples, 24.96%)</title><rect x="52.1019%" y="725" width="24.9608%" height="15" fill="rgb(249,76,35)" fg:x="2987" fg:w="1431"/><text x="52.3519%" y="735.50">nori-clone-benchmark`serde::de::SeqAcces..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,421 samples, 24.79%)</title><rect x="52.2763%" y="709" width="24.7863%" height="15" fill="rgb(207,11,44)" fg:x="2997" fg:w="1421"/><text x="52.5263%" y="719.50">nori-clone-benchmark`&lt;postcard::de::dese..</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::Morpheme&gt;::deserialize (2 samples, 0.03%)</title><rect x="77.0277%" y="693" width="0.0349%" height="15" fill="rgb(228,190,49)" fg:x="4416" fg:w="2"/><text x="77.2777%" y="703.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="77.0626%" y="741" width="0.0174%" height="15" fill="rgb(214,173,12)" fg:x="4418" fg:w="1"/><text x="77.3126%" y="751.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="77.0801%" y="741" width="0.0174%" height="15" fill="rgb(218,26,35)" fg:x="4419" fg:w="1"/><text x="77.3301%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;core::option::Option&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt;&gt; (1 samples, 0.02%)</title><rect x="77.0975%" y="741" width="0.0174%" height="15" fill="rgb(220,200,19)" fg:x="4420" fg:w="1"/><text x="77.3475%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::map (2 samples, 0.03%)</title><rect x="77.1149%" y="741" width="0.0349%" height="15" fill="rgb(239,95,49)" fg:x="4421" fg:w="2"/><text x="77.3649%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (9 samples, 0.16%)</title><rect x="77.2545%" y="725" width="0.1570%" height="15" fill="rgb(235,85,53)" fg:x="4429" fg:w="9"/><text x="77.5045%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="77.5336%" y="693" width="0.0174%" height="15" fill="rgb(233,133,31)" fg:x="4445" fg:w="1"/><text x="77.7836%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.02%)</title><rect x="77.5510%" y="693" width="0.0174%" height="15" fill="rgb(218,25,20)" fg:x="4446" fg:w="1"/><text x="77.8010%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.03%)</title><rect x="77.5685%" y="693" width="0.0349%" height="15" fill="rgb(252,210,38)" fg:x="4447" fg:w="2"/><text x="77.8185%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (1 samples, 0.02%)</title><rect x="77.6033%" y="693" width="0.0174%" height="15" fill="rgb(242,134,21)" fg:x="4449" fg:w="1"/><text x="77.8533%" y="703.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.21%)</title><rect x="77.4289%" y="709" width="0.2093%" height="15" fill="rgb(213,28,48)" fg:x="4439" fg:w="12"/><text x="77.6789%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (1 samples, 0.02%)</title><rect x="77.6208%" y="693" width="0.0174%" height="15" fill="rgb(250,196,2)" fg:x="4450" fg:w="1"/><text x="77.8708%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.24%)</title><rect x="77.4115%" y="725" width="0.2442%" height="15" fill="rgb(227,5,17)" fg:x="4438" fg:w="14"/><text x="77.6615%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="77.6382%" y="709" width="0.0174%" height="15" fill="rgb(221,226,24)" fg:x="4451" fg:w="1"/><text x="77.8882%" y="719.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u64 (32 samples, 0.56%)</title><rect x="77.1498%" y="741" width="0.5582%" height="15" fill="rgb(211,5,48)" fg:x="4423" fg:w="32"/><text x="77.3998%" y="751.50"></text></g><g><title>nori-clone-benchmark`postcard::varint::varint_max (3 samples, 0.05%)</title><rect x="77.6557%" y="725" width="0.0523%" height="15" fill="rgb(219,150,6)" fg:x="4452" fg:w="3"/><text x="77.9057%" y="735.50"></text></g><g><title>nori-clone-benchmark`serde::__private::size_hint::cautious (2 samples, 0.03%)</title><rect x="77.7080%" y="741" width="0.0349%" height="15" fill="rgb(251,46,16)" fg:x="4455" fg:w="2"/><text x="77.9580%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,714 samples, 29.90%)</title><rect x="47.9156%" y="757" width="29.8971%" height="15" fill="rgb(220,204,40)" fg:x="2747" fg:w="1714"/><text x="48.1656%" y="767.50">nori-clone-benchmark`&lt;&amp;mut postcard::de::deseria..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (4 samples, 0.07%)</title><rect x="77.7429%" y="741" width="0.0698%" height="15" fill="rgb(211,85,2)" fg:x="4457" fg:w="4"/><text x="77.9929%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.03%)</title><rect x="77.8127%" y="757" width="0.0349%" height="15" fill="rgb(229,17,7)" fg:x="4461" fg:w="2"/><text x="78.0627%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,735 samples, 30.26%)</title><rect x="47.6016%" y="789" width="30.2634%" height="15" fill="rgb(239,72,28)" fg:x="2729" fg:w="1735"/><text x="47.8516%" y="799.50">nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1,723 samples, 30.05%)</title><rect x="47.8109%" y="773" width="30.0541%" height="15" fill="rgb(230,47,54)" fg:x="2741" fg:w="1723"/><text x="48.0609%" y="783.50">nori-clone-benchmark`serde::de::impls::_&lt;impl se..</text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u64 (1 samples, 0.02%)</title><rect x="77.8475%" y="757" width="0.0174%" height="15" fill="rgb(214,50,8)" fg:x="4463" fg:w="1"/><text x="78.0975%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.09%)</title><rect x="77.8650%" y="789" width="0.0872%" height="15" fill="rgb(216,198,43)" fg:x="4464" fg:w="5"/><text x="78.1150%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,815 samples, 31.66%)</title><rect x="46.3283%" y="837" width="31.6588%" height="15" fill="rgb(234,20,35)" fg:x="2656" fg:w="1815"/><text x="46.5783%" y="847.50">nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1,766 samples, 30.80%)</title><rect x="47.1830%" y="821" width="30.8041%" height="15" fill="rgb(254,45,19)" fg:x="2705" fg:w="1766"/><text x="47.4330%" y="831.50">nori-clone-benchmark`serde::de::SeqAccess::next_el..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,756 samples, 30.63%)</title><rect x="47.3574%" y="805" width="30.6297%" height="15" fill="rgb(219,14,44)" fg:x="2715" fg:w="1756"/><text x="47.6074%" y="815.50">nori-clone-benchmark`&lt;postcard::de::deserializer:..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.03%)</title><rect x="77.9522%" y="789" width="0.0349%" height="15" fill="rgb(217,220,26)" fg:x="4469" fg:w="2"/><text x="78.2022%" y="799.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::TokenDictionary&gt;::deserialize (1,816 samples, 31.68%)</title><rect x="46.3283%" y="981" width="31.6763%" height="15" fill="rgb(213,158,28)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="991.50">nori-clone-benchmark`nori_clone::tokenizer::diction..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,816 samples, 31.68%)</title><rect x="46.3283%" y="965" width="31.6763%" height="15" fill="rgb(252,51,52)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="975.50">nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializ..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_tuple (1,816 samples, 31.68%)</title><rect x="46.3283%" y="949" width="31.6763%" height="15" fill="rgb(246,89,16)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="959.50">nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializ..</text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::_::&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::TokenDictionary&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1,816 samples, 31.68%)</title><rect x="46.3283%" y="933" width="31.6763%" height="15" fill="rgb(216,158,49)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="943.50">nori-clone-benchmark`&lt;nori_clone::tokenizer::dictio..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1,816 samples, 31.68%)</title><rect x="46.3283%" y="917" width="31.6763%" height="15" fill="rgb(236,107,19)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="927.50">nori-clone-benchmark`serde::de::SeqAccess::next_ele..</text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,816 samples, 31.68%)</title><rect x="46.3283%" y="901" width="31.6763%" height="15" fill="rgb(228,185,30)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="911.50">nori-clone-benchmark`&lt;postcard::de::deserializer::S..</text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,816 samples, 31.68%)</title><rect x="46.3283%" y="885" width="31.6763%" height="15" fill="rgb(246,134,8)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="895.50">nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; ..</text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1,816 samples, 31.68%)</title><rect x="46.3283%" y="869" width="31.6763%" height="15" fill="rgb(214,143,50)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="879.50">nori-clone-benchmark`serde::de::impls::_&lt;impl serde..</text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,816 samples, 31.68%)</title><rect x="46.3283%" y="853" width="31.6763%" height="15" fill="rgb(228,75,8)" fg:x="2656" fg:w="1816"/><text x="46.5783%" y="863.50">nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializ..</text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="77.9871%" y="837" width="0.0174%" height="15" fill="rgb(207,175,4)" fg:x="4471" fg:w="1"/><text x="78.2371%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::flavors::Slice as postcard::de::flavors::Flavor&gt;::pop (1 samples, 0.02%)</title><rect x="78.0394%" y="725" width="0.0174%" height="15" fill="rgb(205,108,24)" fg:x="4474" fg:w="1"/><text x="78.2894%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u32 (1 samples, 0.02%)</title><rect x="78.0569%" y="725" width="0.0174%" height="15" fill="rgb(244,120,49)" fg:x="4475" fg:w="1"/><text x="78.3069%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::MapAccess&lt;F&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.10%)</title><rect x="78.0045%" y="789" width="0.1047%" height="15" fill="rgb(223,47,38)" fg:x="4472" fg:w="6"/><text x="78.2545%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.10%)</title><rect x="78.0045%" y="773" width="0.1047%" height="15" fill="rgb(229,179,11)" fg:x="4472" fg:w="6"/><text x="78.2545%" y="783.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for u32&gt;::deserialize (6 samples, 0.10%)</title><rect x="78.0045%" y="757" width="0.1047%" height="15" fill="rgb(231,122,1)" fg:x="4472" fg:w="6"/><text x="78.2545%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_u32 (5 samples, 0.09%)</title><rect x="78.0220%" y="741" width="0.0872%" height="15" fill="rgb(245,119,9)" fg:x="4473" fg:w="5"/><text x="78.2720%" y="751.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u32 (2 samples, 0.03%)</title><rect x="78.0743%" y="725" width="0.0349%" height="15" fill="rgb(241,163,25)" fg:x="4476" fg:w="2"/><text x="78.3243%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.03%)</title><rect x="78.0743%" y="709" width="0.0349%" height="15" fill="rgb(217,214,3)" fg:x="4476" fg:w="2"/><text x="78.3243%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.03%)</title><rect x="78.0743%" y="693" width="0.0349%" height="15" fill="rgb(240,86,28)" fg:x="4476" fg:w="2"/><text x="78.3243%" y="703.50"></text></g><g><title>nori-clone-benchmark`serde::de::MapAccess::next_entry (7 samples, 0.12%)</title><rect x="78.0045%" y="821" width="0.1221%" height="15" fill="rgb(215,47,9)" fg:x="4472" fg:w="7"/><text x="78.2545%" y="831.50"></text></g><g><title>nori-clone-benchmark`serde::de::MapAccess::next_entry_seed (7 samples, 0.12%)</title><rect x="78.0045%" y="805" width="0.1221%" height="15" fill="rgb(252,25,45)" fg:x="4472" fg:w="7"/><text x="78.2545%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::MapAccess&lt;F&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="78.1092%" y="789" width="0.0174%" height="15" fill="rgb(251,164,9)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1092%" y="773" width="0.0174%" height="15" fill="rgb(233,194,0)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="783.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::Morpheme&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1092%" y="757" width="0.0174%" height="15" fill="rgb(249,111,24)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="78.1092%" y="741" width="0.0174%" height="15" fill="rgb(250,223,3)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_tuple (1 samples, 0.02%)</title><rect x="78.1092%" y="725" width="0.0174%" height="15" fill="rgb(236,178,37)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::_::&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::Morpheme&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="78.1092%" y="709" width="0.0174%" height="15" fill="rgb(241,158,50)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="719.50"></text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="78.1092%" y="693" width="0.0174%" height="15" fill="rgb(213,121,41)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="703.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="78.1092%" y="677" width="0.0174%" height="15" fill="rgb(240,92,3)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="687.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1092%" y="661" width="0.0174%" height="15" fill="rgb(205,123,3)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="671.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1092%" y="645" width="0.0174%" height="15" fill="rgb(205,97,47)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="655.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="78.1092%" y="629" width="0.0174%" height="15" fill="rgb(247,152,14)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="639.50"></text></g><g><title>nori-clone-benchmark`postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u64 (1 samples, 0.02%)</title><rect x="78.1092%" y="613" width="0.0174%" height="15" fill="rgb(248,195,53)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="623.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="78.1092%" y="597" width="0.0174%" height="15" fill="rgb(226,201,16)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="607.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="78.1092%" y="581" width="0.0174%" height="15" fill="rgb(205,98,0)" fg:x="4478" fg:w="1"/><text x="78.3592%" y="591.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="78.1266%" y="757" width="0.0174%" height="15" fill="rgb(214,191,48)" fg:x="4479" fg:w="1"/><text x="78.3766%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="78.1266%" y="741" width="0.0174%" height="15" fill="rgb(237,112,39)" fg:x="4479" fg:w="1"/><text x="78.3766%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="78.1266%" y="725" width="0.0174%" height="15" fill="rgb(247,203,27)" fg:x="4479" fg:w="1"/><text x="78.3766%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="78.1266%" y="709" width="0.0174%" height="15" fill="rgb(235,124,28)" fg:x="4479" fg:w="1"/><text x="78.3766%" y="719.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_insert_hash (4 samples, 0.07%)</title><rect x="78.1266%" y="789" width="0.0698%" height="15" fill="rgb(208,207,46)" fg:x="4479" fg:w="4"/><text x="78.3766%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (4 samples, 0.07%)</title><rect x="78.1266%" y="773" width="0.0698%" height="15" fill="rgb(234,176,4)" fg:x="4479" fg:w="4"/><text x="78.3766%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.05%)</title><rect x="78.1441%" y="757" width="0.0523%" height="15" fill="rgb(230,133,28)" fg:x="4480" fg:w="3"/><text x="78.3941%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.05%)</title><rect x="78.1441%" y="741" width="0.0523%" height="15" fill="rgb(211,137,40)" fg:x="4480" fg:w="3"/><text x="78.3941%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::hash::Hasher::write_u32 (3 samples, 0.05%)</title><rect x="78.1441%" y="725" width="0.0523%" height="15" fill="rgb(254,35,13)" fg:x="4480" fg:w="3"/><text x="78.3941%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="78.1441%" y="709" width="0.0523%" height="15" fill="rgb(225,49,51)" fg:x="4480" fg:w="3"/><text x="78.3941%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="78.1441%" y="693" width="0.0523%" height="15" fill="rgb(251,10,15)" fg:x="4480" fg:w="3"/><text x="78.3941%" y="703.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="78.1441%" y="677" width="0.0523%" height="15" fill="rgb(228,207,15)" fg:x="4480" fg:w="3"/><text x="78.3941%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::hash::sip::u8to64_le (2 samples, 0.03%)</title><rect x="78.1615%" y="661" width="0.0349%" height="15" fill="rgb(241,99,19)" fg:x="4481" fg:w="2"/><text x="78.4115%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="78.1790%" y="645" width="0.0174%" height="15" fill="rgb(207,104,49)" fg:x="4482" fg:w="1"/><text x="78.4290%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="78.1790%" y="629" width="0.0174%" height="15" fill="rgb(234,99,18)" fg:x="4482" fg:w="1"/><text x="78.4290%" y="639.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="78.1964%" y="789" width="0.0174%" height="15" fill="rgb(213,191,49)" fg:x="4483" fg:w="1"/><text x="78.4464%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="78.2138%" y="757" width="0.0174%" height="15" fill="rgb(210,226,19)" fg:x="4484" fg:w="1"/><text x="78.4638%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="78.2487%" y="741" width="0.0174%" height="15" fill="rgb(229,97,18)" fg:x="4486" fg:w="1"/><text x="78.4987%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.03%)</title><rect x="78.2662%" y="741" width="0.0349%" height="15" fill="rgb(211,167,15)" fg:x="4487" fg:w="2"/><text x="78.5162%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="78.3011%" y="741" width="0.0174%" height="15" fill="rgb(210,169,34)" fg:x="4489" fg:w="1"/><text x="78.5511%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="78.3185%" y="741" width="0.0174%" height="15" fill="rgb(241,121,31)" fg:x="4490" fg:w="1"/><text x="78.5685%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="78.3359%" y="725" width="0.0174%" height="15" fill="rgb(232,40,11)" fg:x="4491" fg:w="1"/><text x="78.5859%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.02%)</title><rect x="78.3359%" y="709" width="0.0174%" height="15" fill="rgb(205,86,26)" fg:x="4491" fg:w="1"/><text x="78.5859%" y="719.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_byte (4 samples, 0.07%)</title><rect x="78.3359%" y="741" width="0.0698%" height="15" fill="rgb(231,126,28)" fg:x="4491" fg:w="4"/><text x="78.5859%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.05%)</title><rect x="78.3534%" y="725" width="0.0523%" height="15" fill="rgb(219,221,18)" fg:x="4492" fg:w="3"/><text x="78.6034%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.05%)</title><rect x="78.3534%" y="709" width="0.0523%" height="15" fill="rgb(211,40,0)" fg:x="4492" fg:w="3"/><text x="78.6034%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="78.4057%" y="709" width="0.0174%" height="15" fill="rgb(239,85,43)" fg:x="4495" fg:w="1"/><text x="78.6557%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="78.4232%" y="709" width="0.0174%" height="15" fill="rgb(231,55,21)" fg:x="4496" fg:w="1"/><text x="78.6732%" y="719.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.26%)</title><rect x="78.2138%" y="789" width="0.2616%" height="15" fill="rgb(225,184,43)" fg:x="4484" fg:w="15"/><text x="78.4638%" y="799.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.26%)</title><rect x="78.2138%" y="773" width="0.2616%" height="15" fill="rgb(251,158,41)" fg:x="4484" fg:w="15"/><text x="78.4638%" y="783.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.24%)</title><rect x="78.2313%" y="757" width="0.2442%" height="15" fill="rgb(234,159,37)" fg:x="4485" fg:w="14"/><text x="78.4813%" y="767.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_empty (4 samples, 0.07%)</title><rect x="78.4057%" y="741" width="0.0698%" height="15" fill="rgb(216,204,22)" fg:x="4495" fg:w="4"/><text x="78.6557%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_byte (4 samples, 0.07%)</title><rect x="78.4057%" y="725" width="0.0698%" height="15" fill="rgb(214,17,3)" fg:x="4495" fg:w="4"/><text x="78.6557%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="78.4406%" y="709" width="0.0349%" height="15" fill="rgb(212,111,17)" fg:x="4497" fg:w="2"/><text x="78.6906%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="78.4406%" y="693" width="0.0349%" height="15" fill="rgb(221,157,24)" fg:x="4497" fg:w="2"/><text x="78.6906%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="78.5104%" y="741" width="0.0174%" height="15" fill="rgb(252,16,13)" fg:x="4501" fg:w="1"/><text x="78.7604%" y="751.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="78.5104%" y="725" width="0.0174%" height="15" fill="rgb(221,62,2)" fg:x="4501" fg:w="1"/><text x="78.7604%" y="735.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="78.5453%" y="725" width="0.0174%" height="15" fill="rgb(247,87,22)" fg:x="4503" fg:w="1"/><text x="78.7953%" y="735.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="78.5802%" y="629" width="0.0174%" height="15" fill="rgb(215,73,9)" fg:x="4505" fg:w="1"/><text x="78.8302%" y="639.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.05%)</title><rect x="78.5802%" y="677" width="0.0523%" height="15" fill="rgb(207,175,33)" fg:x="4505" fg:w="3"/><text x="78.8302%" y="687.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.05%)</title><rect x="78.5802%" y="661" width="0.0523%" height="15" fill="rgb(243,129,54)" fg:x="4505" fg:w="3"/><text x="78.8302%" y="671.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.05%)</title><rect x="78.5802%" y="645" width="0.0523%" height="15" fill="rgb(227,119,45)" fg:x="4505" fg:w="3"/><text x="78.8302%" y="655.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.03%)</title><rect x="78.5976%" y="629" width="0.0349%" height="15" fill="rgb(205,109,36)" fg:x="4506" fg:w="2"/><text x="78.8476%" y="639.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="78.6325%" y="677" width="0.0174%" height="15" fill="rgb(205,6,39)" fg:x="4508" fg:w="1"/><text x="78.8825%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="78.6325%" y="661" width="0.0174%" height="15" fill="rgb(221,32,16)" fg:x="4508" fg:w="1"/><text x="78.8825%" y="671.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (8 samples, 0.14%)</title><rect x="78.5278%" y="741" width="0.1395%" height="15" fill="rgb(228,144,50)" fg:x="4502" fg:w="8"/><text x="78.7778%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hasher::_{{closure}} (6 samples, 0.10%)</title><rect x="78.5627%" y="725" width="0.1047%" height="15" fill="rgb(229,201,53)" fg:x="4504" fg:w="6"/><text x="78.8127%" y="735.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hash (6 samples, 0.10%)</title><rect x="78.5627%" y="709" width="0.1047%" height="15" fill="rgb(249,153,27)" fg:x="4504" fg:w="6"/><text x="78.8127%" y="719.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (6 samples, 0.10%)</title><rect x="78.5627%" y="693" width="0.1047%" height="15" fill="rgb(227,106,25)" fg:x="4504" fg:w="6"/><text x="78.8127%" y="703.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="78.6499%" y="677" width="0.0174%" height="15" fill="rgb(230,65,29)" fg:x="4509" fg:w="1"/><text x="78.8999%" y="687.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.02%)</title><rect x="78.6499%" y="661" width="0.0174%" height="15" fill="rgb(221,57,46)" fg:x="4509" fg:w="1"/><text x="78.8999%" y="671.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl u32&gt;::to_ne_bytes (1 samples, 0.02%)</title><rect x="78.6499%" y="645" width="0.0174%" height="15" fill="rgb(229,161,17)" fg:x="4509" fg:w="1"/><text x="78.8999%" y="655.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="78.6674%" y="709" width="0.0174%" height="15" fill="rgb(222,213,11)" fg:x="4510" fg:w="1"/><text x="78.9174%" y="719.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.02%)</title><rect x="78.6848%" y="709" width="0.0174%" height="15" fill="rgb(235,35,13)" fg:x="4511" fg:w="1"/><text x="78.9348%" y="719.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.24%)</title><rect x="78.4929%" y="773" width="0.2442%" height="15" fill="rgb(233,158,34)" fg:x="4500" fg:w="14"/><text x="78.7429%" y="783.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.24%)</title><rect x="78.4929%" y="757" width="0.2442%" height="15" fill="rgb(215,151,48)" fg:x="4500" fg:w="14"/><text x="78.7429%" y="767.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.07%)</title><rect x="78.6674%" y="741" width="0.0698%" height="15" fill="rgb(229,84,14)" fg:x="4510" fg:w="4"/><text x="78.9174%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.07%)</title><rect x="78.6674%" y="725" width="0.0698%" height="15" fill="rgb(229,68,14)" fg:x="4510" fg:w="4"/><text x="78.9174%" y="735.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::load (2 samples, 0.03%)</title><rect x="78.7023%" y="709" width="0.0349%" height="15" fill="rgb(243,106,26)" fg:x="4512" fg:w="2"/><text x="78.9523%" y="719.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.02%)</title><rect x="78.7371%" y="757" width="0.0174%" height="15" fill="rgb(206,45,38)" fg:x="4514" fg:w="1"/><text x="78.9871%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="78.7371%" y="741" width="0.0174%" height="15" fill="rgb(226,6,15)" fg:x="4514" fg:w="1"/><text x="78.9871%" y="751.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::system::SystemDictionary::load_from_bytes (3,879 samples, 67.66%)</title><rect x="11.1111%" y="1013" width="67.6609%" height="15" fill="rgb(232,22,54)" fg:x="637" fg:w="3879"/><text x="11.3611%" y="1023.50">nori-clone-benchmark`nori_clone::tokenizer::dictionary::system::SystemDictionary::load_from_bytes</text></g><g><title>nori-clone-benchmark`postcard::de::from_bytes (3,255 samples, 56.78%)</title><rect x="21.9955%" y="997" width="56.7766%" height="15" fill="rgb(229,222,32)" fg:x="1261" fg:w="3255"/><text x="22.2455%" y="1007.50">nori-clone-benchmark`postcard::de::from_bytes</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::_::_&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::UnknownTokenDictionary&gt;::deserialize (44 samples, 0.77%)</title><rect x="78.0045%" y="981" width="0.7675%" height="15" fill="rgb(228,62,29)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_struct (44 samples, 0.77%)</title><rect x="78.0045%" y="965" width="0.7675%" height="15" fill="rgb(251,103,34)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_tuple (44 samples, 0.77%)</title><rect x="78.0045%" y="949" width="0.7675%" height="15" fill="rgb(233,12,30)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::_::&lt;impl serde::de::Deserialize for nori_clone::tokenizer::dictionary::model::UnknownTokenDictionary&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (44 samples, 0.77%)</title><rect x="78.0045%" y="933" width="0.7675%" height="15" fill="rgb(238,52,0)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="943.50"></text></g><g><title>nori-clone-benchmark`serde::de::SeqAccess::next_element (44 samples, 0.77%)</title><rect x="78.0045%" y="917" width="0.7675%" height="15" fill="rgb(223,98,5)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;postcard::de::deserializer::SeqAccess&lt;F&gt; as serde::de::SeqAccess&gt;::next_element_seed (44 samples, 0.77%)</title><rect x="78.0045%" y="901" width="0.7675%" height="15" fill="rgb(228,75,37)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (44 samples, 0.77%)</title><rect x="78.0045%" y="885" width="0.7675%" height="15" fill="rgb(205,115,49)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="895.50"></text></g><g><title>nori-clone-benchmark`serde::de::impls::_&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (44 samples, 0.77%)</title><rect x="78.0045%" y="869" width="0.7675%" height="15" fill="rgb(250,154,43)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut postcard::de::deserializer::Deserializer&lt;F&gt; as serde::de::Deserializer&gt;::deserialize_map (44 samples, 0.77%)</title><rect x="78.0045%" y="853" width="0.7675%" height="15" fill="rgb(226,43,29)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (44 samples, 0.77%)</title><rect x="78.0045%" y="837" width="0.7675%" height="15" fill="rgb(249,228,39)" fg:x="4472" fg:w="44"/><text x="78.2545%" y="847.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (37 samples, 0.65%)</title><rect x="78.1266%" y="821" width="0.6454%" height="15" fill="rgb(216,79,43)" fg:x="4479" fg:w="37"/><text x="78.3766%" y="831.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.65%)</title><rect x="78.1266%" y="805" width="0.6454%" height="15" fill="rgb(228,95,12)" fg:x="4479" fg:w="37"/><text x="78.3766%" y="815.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 0.30%)</title><rect x="78.4755%" y="789" width="0.2965%" height="15" fill="rgb(249,221,15)" fg:x="4499" fg:w="17"/><text x="78.7255%" y="799.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.03%)</title><rect x="78.7371%" y="773" width="0.0349%" height="15" fill="rgb(233,34,13)" fg:x="4514" fg:w="2"/><text x="78.9871%" y="783.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="78.7546%" y="757" width="0.0174%" height="15" fill="rgb(214,103,39)" fg:x="4515" fg:w="1"/><text x="79.0046%" y="767.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::system::SystemDictionary::load_from_input_directory (3,925 samples, 68.46%)</title><rect x="11.1111%" y="1029" width="68.4633%" height="15" fill="rgb(251,126,39)" fg:x="637" fg:w="3925"/><text x="11.3611%" y="1039.50">nori-clone-benchmark`nori_clone::tokenizer::dictionary::system::SystemDictionary::load_from_input_directory</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::system::SystemDictionary::read_file (46 samples, 0.80%)</title><rect x="78.7720%" y="1013" width="0.8024%" height="15" fill="rgb(214,216,36)" fg:x="4516" fg:w="46"/><text x="79.0220%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_to_end (46 samples, 0.80%)</title><rect x="78.7720%" y="997" width="0.8024%" height="15" fill="rgb(220,221,8)" fg:x="4516" fg:w="46"/><text x="79.0220%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;std::fs::File as std::io::Read&gt;::read_to_end (46 samples, 0.80%)</title><rect x="78.7720%" y="981" width="0.8024%" height="15" fill="rgb(240,216,3)" fg:x="4516" fg:w="46"/><text x="79.0220%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`read (46 samples, 0.80%)</title><rect x="78.7720%" y="965" width="0.8024%" height="15" fill="rgb(232,218,17)" fg:x="4516" fg:w="46"/><text x="79.0220%" y="975.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::user::UserDictionary::load_from_bytes (1 samples, 0.02%)</title><rect x="79.5744%" y="1013" width="0.0174%" height="15" fill="rgb(229,163,45)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="1023.50"></text></g><g><title>nori-clone-benchmark`regex::re_unicode::Regex::replace_all (1 samples, 0.02%)</title><rect x="79.5744%" y="997" width="0.0174%" height="15" fill="rgb(231,110,42)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="1007.50"></text></g><g><title>nori-clone-benchmark`regex::re_unicode::Regex::replacen (1 samples, 0.02%)</title><rect x="79.5744%" y="981" width="0.0174%" height="15" fill="rgb(208,170,48)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (1 samples, 0.02%)</title><rect x="79.5744%" y="965" width="0.0174%" height="15" fill="rgb(239,116,25)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.02%)</title><rect x="79.5744%" y="949" width="0.0174%" height="15" fill="rgb(219,200,50)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (1 samples, 0.02%)</title><rect x="79.5744%" y="933" width="0.0174%" height="15" fill="rgb(245,200,0)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="79.5744%" y="917" width="0.0174%" height="15" fill="rgb(245,119,33)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="79.5744%" y="901" width="0.0174%" height="15" fill="rgb(231,125,12)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="79.5744%" y="885" width="0.0174%" height="15" fill="rgb(216,96,41)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="895.50"></text></g><g><title>nori-clone-benchmark`regex::dfa::Fsm::cached_state (1 samples, 0.02%)</title><rect x="79.5744%" y="869" width="0.0174%" height="15" fill="rgb(248,43,45)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="879.50"></text></g><g><title>nori-clone-benchmark`regex::dfa::Fsm::add_state (1 samples, 0.02%)</title><rect x="79.5744%" y="853" width="0.0174%" height="15" fill="rgb(217,222,7)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="863.50"></text></g><g><title>nori-clone-benchmark`regex::dfa::StateMap::insert (1 samples, 0.02%)</title><rect x="79.5744%" y="837" width="0.0174%" height="15" fill="rgb(233,28,6)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="847.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.02%)</title><rect x="79.5744%" y="821" width="0.0174%" height="15" fill="rgb(231,218,15)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="831.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="79.5744%" y="805" width="0.0174%" height="15" fill="rgb(226,171,48)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="815.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="79.5744%" y="789" width="0.0174%" height="15" fill="rgb(235,201,9)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="799.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="79.5744%" y="773" width="0.0174%" height="15" fill="rgb(217,80,15)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="79.5744%" y="757" width="0.0174%" height="15" fill="rgb(219,152,8)" fg:x="4562" fg:w="1"/><text x="79.8244%" y="767.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::user::UserDictionary::load_from_input_directory (2 samples, 0.03%)</title><rect x="79.5744%" y="1029" width="0.0349%" height="15" fill="rgb(243,107,38)" fg:x="4562" fg:w="2"/><text x="79.8244%" y="1039.50"></text></g><g><title>nori-clone-benchmark`std::fs::read_dir (1 samples, 0.02%)</title><rect x="79.5918%" y="1013" width="0.0174%" height="15" fill="rgb(231,17,5)" fg:x="4563" fg:w="1"/><text x="79.8418%" y="1023.50"></text></g><g><title>nori-clone-benchmark`std::sys::unix::fs::readdir (1 samples, 0.02%)</title><rect x="79.5918%" y="997" width="0.0174%" height="15" fill="rgb(209,25,54)" fg:x="4563" fg:w="1"/><text x="79.8418%" y="1007.50"></text></g><g><title>libsystem_c.dylib`__opendir2$INODE64 (1 samples, 0.02%)</title><rect x="79.5918%" y="981" width="0.0174%" height="15" fill="rgb(219,0,2)" fg:x="4563" fg:w="1"/><text x="79.8418%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.02%)</title><rect x="79.5918%" y="965" width="0.0174%" height="15" fill="rgb(246,9,5)" fg:x="4563" fg:w="1"/><text x="79.8418%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="79.8360%" y="1013" width="0.0174%" height="15" fill="rgb(226,159,4)" fg:x="4577" fg:w="1"/><text x="80.0860%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="79.8535%" y="1013" width="0.0174%" height="15" fill="rgb(219,175,34)" fg:x="4578" fg:w="1"/><text x="80.1035%" y="1023.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.05%)</title><rect x="79.9756%" y="981" width="0.0523%" height="15" fill="rgb(236,10,46)" fg:x="4585" fg:w="3"/><text x="80.2256%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="80.0279%" y="981" width="0.0174%" height="15" fill="rgb(240,211,16)" fg:x="4588" fg:w="1"/><text x="80.2779%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="80.0454%" y="981" width="0.0174%" height="15" fill="rgb(205,3,43)" fg:x="4589" fg:w="1"/><text x="80.2954%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="80.0628%" y="981" width="0.0174%" height="15" fill="rgb(245,7,22)" fg:x="4590" fg:w="1"/><text x="80.3128%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="80.0628%" y="965" width="0.0174%" height="15" fill="rgb(239,132,32)" fg:x="4590" fg:w="1"/><text x="80.3128%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.12%)</title><rect x="79.9756%" y="997" width="0.1221%" height="15" fill="rgb(228,202,34)" fg:x="4585" fg:w="7"/><text x="80.2256%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="80.0802%" y="981" width="0.0174%" height="15" fill="rgb(254,200,22)" fg:x="4591" fg:w="1"/><text x="80.3302%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (2 samples, 0.03%)</title><rect x="80.1151%" y="981" width="0.0349%" height="15" fill="rgb(219,10,39)" fg:x="4593" fg:w="2"/><text x="80.3651%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.30%)</title><rect x="79.8709%" y="1013" width="0.2965%" height="15" fill="rgb(226,210,39)" fg:x="4579" fg:w="17"/><text x="80.1209%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (4 samples, 0.07%)</title><rect x="80.0977%" y="997" width="0.0698%" height="15" fill="rgb(208,219,16)" fg:x="4592" fg:w="4"/><text x="80.3477%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="80.1500%" y="981" width="0.0174%" height="15" fill="rgb(216,158,51)" fg:x="4595" fg:w="1"/><text x="80.4000%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="80.1500%" y="965" width="0.0174%" height="15" fill="rgb(233,14,44)" fg:x="4595" fg:w="1"/><text x="80.4000%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="80.1675%" y="1013" width="0.0174%" height="15" fill="rgb(237,97,39)" fg:x="4596" fg:w="1"/><text x="80.4175%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="80.3244%" y="949" width="0.0349%" height="15" fill="rgb(218,198,43)" fg:x="4605" fg:w="2"/><text x="80.5744%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.10%)</title><rect x="80.3070%" y="965" width="0.1047%" height="15" fill="rgb(231,104,20)" fg:x="4604" fg:w="6"/><text x="80.5570%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.05%)</title><rect x="80.3593%" y="949" width="0.0523%" height="15" fill="rgb(254,36,13)" fg:x="4607" fg:w="3"/><text x="80.6093%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (3 samples, 0.05%)</title><rect x="80.4117%" y="965" width="0.0523%" height="15" fill="rgb(248,14,50)" fg:x="4610" fg:w="3"/><text x="80.6617%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="80.5861%" y="949" width="0.0174%" height="15" fill="rgb(217,107,29)" fg:x="4620" fg:w="1"/><text x="80.8361%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (9 samples, 0.16%)</title><rect x="80.4640%" y="965" width="0.1570%" height="15" fill="rgb(251,169,33)" fg:x="4613" fg:w="9"/><text x="80.7140%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="80.6035%" y="949" width="0.0174%" height="15" fill="rgb(217,108,32)" fg:x="4621" fg:w="1"/><text x="80.8535%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (21 samples, 0.37%)</title><rect x="80.2896%" y="981" width="0.3663%" height="15" fill="rgb(219,66,42)" fg:x="4603" fg:w="21"/><text x="80.5396%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="80.6210%" y="965" width="0.0349%" height="15" fill="rgb(206,180,7)" fg:x="4622" fg:w="2"/><text x="80.8710%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (2 samples, 0.03%)</title><rect x="80.6559%" y="965" width="0.0349%" height="15" fill="rgb(208,226,31)" fg:x="4624" fg:w="2"/><text x="80.9059%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.47%)</title><rect x="80.2372%" y="997" width="0.4710%" height="15" fill="rgb(218,26,49)" fg:x="4600" fg:w="27"/><text x="80.4872%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (3 samples, 0.05%)</title><rect x="80.6559%" y="981" width="0.0523%" height="15" fill="rgb(233,197,48)" fg:x="4624" fg:w="3"/><text x="80.9059%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="80.6907%" y="965" width="0.0174%" height="15" fill="rgb(252,181,51)" fg:x="4626" fg:w="1"/><text x="80.9407%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="80.6907%" y="949" width="0.0174%" height="15" fill="rgb(253,90,19)" fg:x="4626" fg:w="1"/><text x="80.9407%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="80.7082%" y="997" width="0.0174%" height="15" fill="rgb(215,171,30)" fg:x="4627" fg:w="1"/><text x="80.9582%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (35 samples, 0.61%)</title><rect x="80.1849%" y="1013" width="0.6105%" height="15" fill="rgb(214,222,9)" fg:x="4597" fg:w="35"/><text x="80.4349%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.07%)</title><rect x="80.7256%" y="997" width="0.0698%" height="15" fill="rgb(223,3,22)" fg:x="4628" fg:w="4"/><text x="80.9756%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="80.7780%" y="981" width="0.0174%" height="15" fill="rgb(225,196,46)" fg:x="4631" fg:w="1"/><text x="81.0280%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="81.0396%" y="965" width="0.0349%" height="15" fill="rgb(209,110,37)" fg:x="4646" fg:w="2"/><text x="81.2896%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="81.0570%" y="949" width="0.0174%" height="15" fill="rgb(249,89,12)" fg:x="4647" fg:w="1"/><text x="81.3070%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="81.0745%" y="965" width="0.0349%" height="15" fill="rgb(226,27,33)" fg:x="4648" fg:w="2"/><text x="81.3245%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.23%)</title><rect x="80.9873%" y="981" width="0.2268%" height="15" fill="rgb(213,82,22)" fg:x="4643" fg:w="13"/><text x="81.2373%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (6 samples, 0.10%)</title><rect x="81.1094%" y="965" width="0.1047%" height="15" fill="rgb(248,140,0)" fg:x="4650" fg:w="6"/><text x="81.3594%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.05%)</title><rect x="81.1617%" y="949" width="0.0523%" height="15" fill="rgb(228,106,3)" fg:x="4653" fg:w="3"/><text x="81.4117%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="81.2140%" y="981" width="0.0174%" height="15" fill="rgb(209,23,37)" fg:x="4656" fg:w="1"/><text x="81.4640%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (2 samples, 0.03%)</title><rect x="81.2315%" y="981" width="0.0349%" height="15" fill="rgb(241,93,50)" fg:x="4657" fg:w="2"/><text x="81.4815%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="81.2838%" y="965" width="0.0349%" height="15" fill="rgb(253,46,43)" fg:x="4660" fg:w="2"/><text x="81.5338%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (28 samples, 0.49%)</title><rect x="80.8652%" y="997" width="0.4884%" height="15" fill="rgb(226,206,43)" fg:x="4636" fg:w="28"/><text x="81.1152%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts_mut (5 samples, 0.09%)</title><rect x="81.2664%" y="981" width="0.0872%" height="15" fill="rgb(217,54,7)" fg:x="4659" fg:w="5"/><text x="81.5164%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (2 samples, 0.03%)</title><rect x="81.3187%" y="965" width="0.0349%" height="15" fill="rgb(223,5,52)" fg:x="4662" fg:w="2"/><text x="81.5687%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="81.3361%" y="949" width="0.0174%" height="15" fill="rgb(206,52,46)" fg:x="4663" fg:w="1"/><text x="81.5861%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="81.3536%" y="997" width="0.0349%" height="15" fill="rgb(253,136,11)" fg:x="4664" fg:w="2"/><text x="81.6036%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="81.3885%" y="997" width="0.0349%" height="15" fill="rgb(208,106,33)" fg:x="4666" fg:w="2"/><text x="81.6385%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.12%)</title><rect x="81.4233%" y="997" width="0.1221%" height="15" fill="rgb(206,54,4)" fg:x="4668" fg:w="7"/><text x="81.6733%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.09%)</title><rect x="81.4582%" y="981" width="0.0872%" height="15" fill="rgb(213,3,15)" fg:x="4670" fg:w="5"/><text x="81.7082%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (45 samples, 0.78%)</title><rect x="80.7954%" y="1013" width="0.7849%" height="15" fill="rgb(252,211,39)" fg:x="4632" fg:w="45"/><text x="81.0454%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="81.5454%" y="997" width="0.0349%" height="15" fill="rgb(223,6,36)" fg:x="4675" fg:w="2"/><text x="81.7954%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="81.5803%" y="1013" width="0.0174%" height="15" fill="rgb(252,169,45)" fg:x="4677" fg:w="1"/><text x="81.8303%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="81.6152%" y="981" width="0.0349%" height="15" fill="rgb(212,48,26)" fg:x="4679" fg:w="2"/><text x="81.8652%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="81.6327%" y="965" width="0.0174%" height="15" fill="rgb(251,102,48)" fg:x="4680" fg:w="1"/><text x="81.8827%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="81.6675%" y="933" width="0.0174%" height="15" fill="rgb(243,208,16)" fg:x="4682" fg:w="1"/><text x="81.9175%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="81.6850%" y="933" width="0.0174%" height="15" fill="rgb(219,96,24)" fg:x="4683" fg:w="1"/><text x="81.9350%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="81.6850%" y="917" width="0.0174%" height="15" fill="rgb(219,33,29)" fg:x="4683" fg:w="1"/><text x="81.9350%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="81.6850%" y="901" width="0.0174%" height="15" fill="rgb(223,176,5)" fg:x="4683" fg:w="1"/><text x="81.9350%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="81.7024%" y="917" width="0.0174%" height="15" fill="rgb(228,140,14)" fg:x="4684" fg:w="1"/><text x="81.9524%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="81.7024%" y="901" width="0.0174%" height="15" fill="rgb(217,179,31)" fg:x="4684" fg:w="1"/><text x="81.9524%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (2 samples, 0.03%)</title><rect x="81.7024%" y="933" width="0.0349%" height="15" fill="rgb(230,9,30)" fg:x="4684" fg:w="2"/><text x="81.9524%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="81.7199%" y="917" width="0.0174%" height="15" fill="rgb(230,136,20)" fg:x="4685" fg:w="1"/><text x="81.9699%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="81.7199%" y="901" width="0.0174%" height="15" fill="rgb(215,210,22)" fg:x="4685" fg:w="1"/><text x="81.9699%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="81.7373%" y="869" width="0.0174%" height="15" fill="rgb(218,43,5)" fg:x="4686" fg:w="1"/><text x="81.9873%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="81.7548%" y="853" width="0.0523%" height="15" fill="rgb(216,11,5)" fg:x="4687" fg:w="3"/><text x="82.0048%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.05%)</title><rect x="81.7548%" y="837" width="0.0523%" height="15" fill="rgb(209,82,29)" fg:x="4687" fg:w="3"/><text x="82.0048%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.05%)</title><rect x="81.7548%" y="821" width="0.0523%" height="15" fill="rgb(244,115,12)" fg:x="4687" fg:w="3"/><text x="82.0048%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="81.7548%" y="805" width="0.0523%" height="15" fill="rgb(222,82,18)" fg:x="4687" fg:w="3"/><text x="82.0048%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="81.7548%" y="789" width="0.0523%" height="15" fill="rgb(249,227,8)" fg:x="4687" fg:w="3"/><text x="82.0048%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.09%)</title><rect x="81.7373%" y="885" width="0.0872%" height="15" fill="rgb(253,141,45)" fg:x="4686" fg:w="5"/><text x="81.9873%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (4 samples, 0.07%)</title><rect x="81.7548%" y="869" width="0.0698%" height="15" fill="rgb(234,184,4)" fg:x="4687" fg:w="4"/><text x="82.0048%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="81.8071%" y="853" width="0.0174%" height="15" fill="rgb(218,194,23)" fg:x="4690" fg:w="1"/><text x="82.0571%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="81.8245%" y="885" width="0.0174%" height="15" fill="rgb(235,66,41)" fg:x="4691" fg:w="1"/><text x="82.0745%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="81.8245%" y="869" width="0.0174%" height="15" fill="rgb(245,217,1)" fg:x="4691" fg:w="1"/><text x="82.0745%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.12%)</title><rect x="81.7373%" y="933" width="0.1221%" height="15" fill="rgb(229,91,1)" fg:x="4686" fg:w="7"/><text x="81.9873%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.12%)</title><rect x="81.7373%" y="917" width="0.1221%" height="15" fill="rgb(207,101,30)" fg:x="4686" fg:w="7"/><text x="81.9873%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.12%)</title><rect x="81.7373%" y="901" width="0.1221%" height="15" fill="rgb(223,82,49)" fg:x="4686" fg:w="7"/><text x="81.9873%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="81.8420%" y="885" width="0.0174%" height="15" fill="rgb(218,167,17)" fg:x="4692" fg:w="1"/><text x="82.0920%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.28%)</title><rect x="81.6501%" y="949" width="0.2791%" height="15" fill="rgb(208,103,14)" fg:x="4681" fg:w="16"/><text x="81.9001%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.07%)</title><rect x="81.8594%" y="933" width="0.0698%" height="15" fill="rgb(238,20,8)" fg:x="4693" fg:w="4"/><text x="82.1094%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (4 samples, 0.07%)</title><rect x="81.8594%" y="917" width="0.0698%" height="15" fill="rgb(218,80,54)" fg:x="4693" fg:w="4"/><text x="82.1094%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.07%)</title><rect x="81.8594%" y="901" width="0.0698%" height="15" fill="rgb(240,144,17)" fg:x="4693" fg:w="4"/><text x="82.1094%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::Morpheme as core::clone::Clone&gt;::clone (20 samples, 0.35%)</title><rect x="81.5978%" y="1013" width="0.3489%" height="15" fill="rgb(245,27,50)" fg:x="4678" fg:w="20"/><text x="81.8478%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.33%)</title><rect x="81.6152%" y="997" width="0.3314%" height="15" fill="rgb(251,51,7)" fg:x="4679" fg:w="19"/><text x="81.8652%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (17 samples, 0.30%)</title><rect x="81.6501%" y="981" width="0.2965%" height="15" fill="rgb(245,217,29)" fg:x="4681" fg:w="17"/><text x="81.9001%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (17 samples, 0.30%)</title><rect x="81.6501%" y="965" width="0.2965%" height="15" fill="rgb(221,176,29)" fg:x="4681" fg:w="17"/><text x="81.9001%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="81.9292%" y="949" width="0.0174%" height="15" fill="rgb(212,180,24)" fg:x="4697" fg:w="1"/><text x="82.1792%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="81.9641%" y="805" width="0.0174%" height="15" fill="rgb(254,24,2)" fg:x="4699" fg:w="1"/><text x="82.2141%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="81.9641%" y="789" width="0.0174%" height="15" fill="rgb(230,100,2)" fg:x="4699" fg:w="1"/><text x="82.2141%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="81.9641%" y="901" width="0.0349%" height="15" fill="rgb(219,142,25)" fg:x="4699" fg:w="2"/><text x="82.2141%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="81.9641%" y="885" width="0.0349%" height="15" fill="rgb(240,73,43)" fg:x="4699" fg:w="2"/><text x="82.2141%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="81.9641%" y="869" width="0.0349%" height="15" fill="rgb(214,114,15)" fg:x="4699" fg:w="2"/><text x="82.2141%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="81.9641%" y="853" width="0.0349%" height="15" fill="rgb(207,130,4)" fg:x="4699" fg:w="2"/><text x="82.2141%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="81.9641%" y="837" width="0.0349%" height="15" fill="rgb(221,25,40)" fg:x="4699" fg:w="2"/><text x="82.2141%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="81.9641%" y="821" width="0.0349%" height="15" fill="rgb(241,184,7)" fg:x="4699" fg:w="2"/><text x="82.2141%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="81.9815%" y="805" width="0.0174%" height="15" fill="rgb(235,159,4)" fg:x="4700" fg:w="1"/><text x="82.2315%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="81.9815%" y="789" width="0.0174%" height="15" fill="rgb(214,87,48)" fg:x="4700" fg:w="1"/><text x="82.2315%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (3 samples, 0.05%)</title><rect x="81.9641%" y="933" width="0.0523%" height="15" fill="rgb(246,198,24)" fg:x="4699" fg:w="3"/><text x="82.2141%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (3 samples, 0.05%)</title><rect x="81.9641%" y="917" width="0.0523%" height="15" fill="rgb(209,66,40)" fg:x="4699" fg:w="3"/><text x="82.2141%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="81.9990%" y="901" width="0.0174%" height="15" fill="rgb(233,147,39)" fg:x="4701" fg:w="1"/><text x="82.2490%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;str as alloc::string::ToString&gt;::to_string (5 samples, 0.09%)</title><rect x="81.9466%" y="1013" width="0.0872%" height="15" fill="rgb(231,145,52)" fg:x="4698" fg:w="5"/><text x="82.1966%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.07%)</title><rect x="81.9641%" y="997" width="0.0698%" height="15" fill="rgb(206,20,26)" fg:x="4699" fg:w="4"/><text x="82.2141%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.07%)</title><rect x="81.9641%" y="981" width="0.0698%" height="15" fill="rgb(238,220,4)" fg:x="4699" fg:w="4"/><text x="82.2141%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.07%)</title><rect x="81.9641%" y="965" width="0.0698%" height="15" fill="rgb(252,195,42)" fg:x="4699" fg:w="4"/><text x="82.2141%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec (4 samples, 0.07%)</title><rect x="81.9641%" y="949" width="0.0698%" height="15" fill="rgb(209,10,6)" fg:x="4699" fg:w="4"/><text x="82.2141%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="82.0164%" y="933" width="0.0174%" height="15" fill="rgb(229,3,52)" fg:x="4702" fg:w="1"/><text x="82.2664%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.02%)</title><rect x="82.0338%" y="1013" width="0.0174%" height="15" fill="rgb(253,49,37)" fg:x="4703" fg:w="1"/><text x="82.2838%" y="1023.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="82.0338%" y="997" width="0.0174%" height="15" fill="rgb(240,103,49)" fg:x="4703" fg:w="1"/><text x="82.2838%" y="1007.50"></text></g><g><title>nori-clone-benchmark`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="82.0687%" y="997" width="0.0174%" height="15" fill="rgb(250,182,30)" fg:x="4705" fg:w="1"/><text x="82.3187%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="82.0862%" y="917" width="0.0174%" height="15" fill="rgb(248,8,30)" fg:x="4706" fg:w="1"/><text x="82.3362%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="82.0862%" y="901" width="0.0174%" height="15" fill="rgb(237,120,30)" fg:x="4706" fg:w="1"/><text x="82.3362%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="82.0862%" y="885" width="0.0174%" height="15" fill="rgb(221,146,34)" fg:x="4706" fg:w="1"/><text x="82.3362%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="82.0862%" y="869" width="0.0174%" height="15" fill="rgb(242,55,13)" fg:x="4706" fg:w="1"/><text x="82.3362%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.02%)</title><rect x="82.0862%" y="853" width="0.0174%" height="15" fill="rgb(242,112,31)" fg:x="4706" fg:w="1"/><text x="82.3362%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="82.0862%" y="997" width="0.0349%" height="15" fill="rgb(249,192,27)" fg:x="4706" fg:w="2"/><text x="82.3362%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="82.0862%" y="981" width="0.0349%" height="15" fill="rgb(208,204,44)" fg:x="4706" fg:w="2"/><text x="82.3362%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="82.0862%" y="965" width="0.0349%" height="15" fill="rgb(208,93,54)" fg:x="4706" fg:w="2"/><text x="82.3362%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.03%)</title><rect x="82.0862%" y="949" width="0.0349%" height="15" fill="rgb(242,1,31)" fg:x="4706" fg:w="2"/><text x="82.3362%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::grow_impl (2 samples, 0.03%)</title><rect x="82.0862%" y="933" width="0.0349%" height="15" fill="rgb(241,83,25)" fg:x="4706" fg:w="2"/><text x="82.3362%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="82.1036%" y="917" width="0.0174%" height="15" fill="rgb(205,169,50)" fg:x="4707" fg:w="1"/><text x="82.3536%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="82.1036%" y="901" width="0.0174%" height="15" fill="rgb(239,186,37)" fg:x="4707" fg:w="1"/><text x="82.3536%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.09%)</title><rect x="82.0513%" y="1013" width="0.0872%" height="15" fill="rgb(205,221,10)" fg:x="4704" fg:w="5"/><text x="82.3013%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="82.1211%" y="997" width="0.0174%" height="15" fill="rgb(218,196,15)" fg:x="4708" fg:w="1"/><text x="82.3711%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="82.1211%" y="981" width="0.0174%" height="15" fill="rgb(218,196,35)" fg:x="4708" fg:w="1"/><text x="82.3711%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="82.2257%" y="981" width="0.0174%" height="15" fill="rgb(233,63,24)" fg:x="4714" fg:w="1"/><text x="82.4757%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (1 samples, 0.02%)</title><rect x="82.2432%" y="981" width="0.0174%" height="15" fill="rgb(225,8,4)" fg:x="4715" fg:w="1"/><text x="82.4932%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="82.2432%" y="965" width="0.0174%" height="15" fill="rgb(234,105,35)" fg:x="4715" fg:w="1"/><text x="82.4932%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.14%)</title><rect x="82.1385%" y="1013" width="0.1395%" height="15" fill="rgb(236,21,32)" fg:x="4709" fg:w="8"/><text x="82.3885%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.09%)</title><rect x="82.1908%" y="997" width="0.0872%" height="15" fill="rgb(228,109,6)" fg:x="4712" fg:w="5"/><text x="82.4408%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="82.2606%" y="981" width="0.0174%" height="15" fill="rgb(229,215,31)" fg:x="4716" fg:w="1"/><text x="82.5106%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.03%)</title><rect x="82.3129%" y="885" width="0.0349%" height="15" fill="rgb(221,52,54)" fg:x="4719" fg:w="2"/><text x="82.5629%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.03%)</title><rect x="82.3129%" y="869" width="0.0349%" height="15" fill="rgb(252,129,43)" fg:x="4719" fg:w="2"/><text x="82.5629%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.02%)</title><rect x="82.3304%" y="853" width="0.0174%" height="15" fill="rgb(248,183,27)" fg:x="4720" fg:w="1"/><text x="82.5804%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="82.3478%" y="885" width="0.0174%" height="15" fill="rgb(250,0,22)" fg:x="4721" fg:w="1"/><text x="82.5978%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="82.3478%" y="869" width="0.0174%" height="15" fill="rgb(213,166,10)" fg:x="4721" fg:w="1"/><text x="82.5978%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="82.3478%" y="853" width="0.0174%" height="15" fill="rgb(207,163,36)" fg:x="4721" fg:w="1"/><text x="82.5978%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt; as alloc::vec::spec_extend::SpecExtend&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::tokenize::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="82.3653%" y="869" width="0.0174%" height="15" fill="rgb(208,122,22)" fg:x="4722" fg:w="1"/><text x="82.6153%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::collect (7 samples, 0.12%)</title><rect x="82.2780%" y="1013" width="0.1221%" height="15" fill="rgb(207,104,49)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.12%)</title><rect x="82.2780%" y="997" width="0.1221%" height="15" fill="rgb(248,211,50)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.12%)</title><rect x="82.2780%" y="981" width="0.1221%" height="15" fill="rgb(217,13,45)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.12%)</title><rect x="82.2780%" y="965" width="0.1221%" height="15" fill="rgb(211,216,49)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.12%)</title><rect x="82.2780%" y="949" width="0.1221%" height="15" fill="rgb(221,58,53)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::for_each (7 samples, 0.12%)</title><rect x="82.2780%" y="933" width="0.1221%" height="15" fill="rgb(220,112,41)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.12%)</title><rect x="82.2780%" y="917" width="0.1221%" height="15" fill="rgb(236,38,28)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::fold (7 samples, 0.12%)</title><rect x="82.2780%" y="901" width="0.1221%" height="15" fill="rgb(227,195,22)" fg:x="4717" fg:w="7"/><text x="82.5280%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;usize,alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;,(),nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::tokenize::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;,&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt; as alloc::vec::spec_extend::SpecExtend&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::tokenize::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (2 samples, 0.03%)</title><rect x="82.3653%" y="885" width="0.0349%" height="15" fill="rgb(214,55,33)" fg:x="4722" fg:w="2"/><text x="82.6153%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;,&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt; as alloc::vec::spec_extend::SpecExtend&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::tokenize::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="82.3827%" y="869" width="0.0174%" height="15" fill="rgb(248,80,13)" fg:x="4723" fg:w="1"/><text x="82.6327%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.02%)</title><rect x="82.3827%" y="853" width="0.0174%" height="15" fill="rgb(238,52,6)" fg:x="4723" fg:w="1"/><text x="82.6327%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="82.4001%" y="933" width="0.0174%" height="15" fill="rgb(224,198,47)" fg:x="4724" fg:w="1"/><text x="82.6501%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="82.4001%" y="917" width="0.0174%" height="15" fill="rgb(233,171,20)" fg:x="4724" fg:w="1"/><text x="82.6501%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (1 samples, 0.02%)</title><rect x="82.4525%" y="885" width="0.0174%" height="15" fill="rgb(241,30,25)" fg:x="4727" fg:w="1"/><text x="82.7025%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="82.5048%" y="837" width="0.0174%" height="15" fill="rgb(207,171,38)" fg:x="4730" fg:w="1"/><text x="82.7548%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="82.5222%" y="837" width="0.0174%" height="15" fill="rgb(234,70,1)" fg:x="4731" fg:w="1"/><text x="82.7722%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.05%)</title><rect x="82.5048%" y="853" width="0.0523%" height="15" fill="rgb(232,178,18)" fg:x="4730" fg:w="3"/><text x="82.7548%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="82.5397%" y="837" width="0.0174%" height="15" fill="rgb(241,78,40)" fg:x="4732" fg:w="1"/><text x="82.7897%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="82.6095%" y="789" width="0.0872%" height="15" fill="rgb(222,35,25)" fg:x="4736" fg:w="5"/><text x="82.8595%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.07%)</title><rect x="82.6269%" y="773" width="0.0698%" height="15" fill="rgb(207,92,16)" fg:x="4737" fg:w="4"/><text x="82.8769%" y="783.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.07%)</title><rect x="82.6269%" y="757" width="0.0698%" height="15" fill="rgb(216,59,51)" fg:x="4737" fg:w="4"/><text x="82.8769%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="82.6967%" y="773" width="0.0174%" height="15" fill="rgb(213,80,28)" fg:x="4741" fg:w="1"/><text x="82.9467%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="82.7316%" y="725" width="0.0349%" height="15" fill="rgb(220,93,7)" fg:x="4743" fg:w="2"/><text x="82.9816%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.03%)</title><rect x="82.7316%" y="709" width="0.0349%" height="15" fill="rgb(225,24,44)" fg:x="4743" fg:w="2"/><text x="82.9816%" y="719.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="82.7316%" y="757" width="0.0523%" height="15" fill="rgb(243,74,40)" fg:x="4743" fg:w="3"/><text x="82.9816%" y="767.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="82.7316%" y="741" width="0.0523%" height="15" fill="rgb(228,39,7)" fg:x="4743" fg:w="3"/><text x="82.9816%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="82.7664%" y="725" width="0.0174%" height="15" fill="rgb(227,79,8)" fg:x="4745" fg:w="1"/><text x="83.0164%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (5 samples, 0.09%)</title><rect x="82.8188%" y="741" width="0.0872%" height="15" fill="rgb(236,58,11)" fg:x="4748" fg:w="5"/><text x="83.0688%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="82.8885%" y="725" width="0.0174%" height="15" fill="rgb(249,63,35)" fg:x="4752" fg:w="1"/><text x="83.1385%" y="735.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.14%)</title><rect x="82.7839%" y="757" width="0.1395%" height="15" fill="rgb(252,114,16)" fg:x="4746" fg:w="8"/><text x="83.0339%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="82.9060%" y="741" width="0.0174%" height="15" fill="rgb(254,151,24)" fg:x="4753" fg:w="1"/><text x="83.1560%" y="751.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="82.9060%" y="725" width="0.0174%" height="15" fill="rgb(253,54,39)" fg:x="4753" fg:w="1"/><text x="83.1560%" y="735.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[nori_clone::tokenizer::dictionary::model::MorphemeExpression]&gt; (22 samples, 0.38%)</title><rect x="82.5571%" y="853" width="0.3837%" height="15" fill="rgb(243,25,45)" fg:x="4733" fg:w="22"/><text x="82.8071%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt; (20 samples, 0.35%)</title><rect x="82.5920%" y="837" width="0.3489%" height="15" fill="rgb(234,134,9)" fg:x="4735" fg:w="20"/><text x="82.8420%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::string::String&gt; (20 samples, 0.35%)</title><rect x="82.5920%" y="821" width="0.3489%" height="15" fill="rgb(227,166,31)" fg:x="4735" fg:w="20"/><text x="82.8420%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.33%)</title><rect x="82.6095%" y="805" width="0.3314%" height="15" fill="rgb(245,143,41)" fg:x="4736" fg:w="19"/><text x="82.8595%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.24%)</title><rect x="82.6967%" y="789" width="0.2442%" height="15" fill="rgb(238,181,32)" fg:x="4741" fg:w="14"/><text x="82.9467%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.23%)</title><rect x="82.7141%" y="773" width="0.2268%" height="15" fill="rgb(224,113,18)" fg:x="4742" fg:w="13"/><text x="82.9641%" y="783.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="82.9234%" y="757" width="0.0174%" height="15" fill="rgb(240,229,28)" fg:x="4754" fg:w="1"/><text x="83.1734%" y="767.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.49%)</title><rect x="82.4699%" y="869" width="0.4884%" height="15" fill="rgb(250,185,3)" fg:x="4728" fg:w="28"/><text x="82.7199%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt; (1 samples, 0.02%)</title><rect x="82.9409%" y="853" width="0.0174%" height="15" fill="rgb(212,59,25)" fg:x="4755" fg:w="1"/><text x="83.1909%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="82.9758%" y="821" width="0.0174%" height="15" fill="rgb(221,87,20)" fg:x="4757" fg:w="1"/><text x="83.2258%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.05%)</title><rect x="83.0281%" y="805" width="0.0523%" height="15" fill="rgb(213,74,28)" fg:x="4760" fg:w="3"/><text x="83.2781%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.03%)</title><rect x="83.0455%" y="789" width="0.0349%" height="15" fill="rgb(224,132,34)" fg:x="4761" fg:w="2"/><text x="83.2955%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.16%)</title><rect x="82.9583%" y="837" width="0.1570%" height="15" fill="rgb(222,101,24)" fg:x="4756" fg:w="9"/><text x="83.2083%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (7 samples, 0.12%)</title><rect x="82.9932%" y="821" width="0.1221%" height="15" fill="rgb(254,142,4)" fg:x="4758" fg:w="7"/><text x="83.2432%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="83.0804%" y="805" width="0.0349%" height="15" fill="rgb(230,229,49)" fg:x="4763" fg:w="2"/><text x="83.3304%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="83.1327%" y="805" width="0.0174%" height="15" fill="rgb(238,70,47)" fg:x="4766" fg:w="1"/><text x="83.3827%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (2 samples, 0.03%)</title><rect x="83.1327%" y="821" width="0.0349%" height="15" fill="rgb(231,160,17)" fg:x="4766" fg:w="2"/><text x="83.3827%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="83.1502%" y="805" width="0.0174%" height="15" fill="rgb(218,68,53)" fg:x="4767" fg:w="1"/><text x="83.4002%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;&gt; (14 samples, 0.24%)</title><rect x="82.9583%" y="869" width="0.2442%" height="15" fill="rgb(236,111,10)" fg:x="4756" fg:w="14"/><text x="83.2083%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.24%)</title><rect x="82.9583%" y="853" width="0.2442%" height="15" fill="rgb(224,34,41)" fg:x="4756" fg:w="14"/><text x="83.2083%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.09%)</title><rect x="83.1153%" y="837" width="0.0872%" height="15" fill="rgb(241,118,19)" fg:x="4765" fg:w="5"/><text x="83.3653%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (2 samples, 0.03%)</title><rect x="83.1676%" y="821" width="0.0349%" height="15" fill="rgb(238,129,25)" fg:x="4768" fg:w="2"/><text x="83.4176%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="83.1851%" y="805" width="0.0174%" height="15" fill="rgb(238,22,31)" fg:x="4769" fg:w="1"/><text x="83.4351%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression&gt;&gt; (43 samples, 0.75%)</title><rect x="82.4699%" y="885" width="0.7500%" height="15" fill="rgb(222,174,48)" fg:x="4728" fg:w="43"/><text x="82.7199%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="83.2025%" y="869" width="0.0174%" height="15" fill="rgb(206,152,40)" fg:x="4770" fg:w="1"/><text x="83.4525%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.12%)</title><rect x="83.2548%" y="837" width="0.1221%" height="15" fill="rgb(218,99,54)" fg:x="4773" fg:w="7"/><text x="83.5048%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="83.3595%" y="821" width="0.0174%" height="15" fill="rgb(220,174,26)" fg:x="4779" fg:w="1"/><text x="83.6095%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="83.3769%" y="837" width="0.0174%" height="15" fill="rgb(245,116,9)" fg:x="4780" fg:w="1"/><text x="83.6269%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.16%)</title><rect x="83.2548%" y="853" width="0.1570%" height="15" fill="rgb(209,72,35)" fg:x="4773" fg:w="9"/><text x="83.5048%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="83.3944%" y="837" width="0.0174%" height="15" fill="rgb(226,126,21)" fg:x="4781" fg:w="1"/><text x="83.6444%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.23%)</title><rect x="83.2200%" y="869" width="0.2268%" height="15" fill="rgb(227,192,1)" fg:x="4771" fg:w="13"/><text x="83.4700%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.03%)</title><rect x="83.4118%" y="853" width="0.0349%" height="15" fill="rgb(237,180,29)" fg:x="4782" fg:w="2"/><text x="83.6618%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.14%)</title><rect x="83.4816%" y="805" width="0.1395%" height="15" fill="rgb(230,197,35)" fg:x="4786" fg:w="8"/><text x="83.7316%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.12%)</title><rect x="83.4990%" y="789" width="0.1221%" height="15" fill="rgb(246,193,31)" fg:x="4787" fg:w="7"/><text x="83.7490%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.09%)</title><rect x="83.6211%" y="805" width="0.0872%" height="15" fill="rgb(241,36,4)" fg:x="4794" fg:w="5"/><text x="83.8711%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.03%)</title><rect x="83.6735%" y="789" width="0.0349%" height="15" fill="rgb(241,130,17)" fg:x="4797" fg:w="2"/><text x="83.9235%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="83.6735%" y="773" width="0.0349%" height="15" fill="rgb(206,137,32)" fg:x="4797" fg:w="2"/><text x="83.9235%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="83.7084%" y="805" width="0.0174%" height="15" fill="rgb(237,228,51)" fg:x="4799" fg:w="1"/><text x="83.9584%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.30%)</title><rect x="83.4642%" y="837" width="0.2965%" height="15" fill="rgb(243,6,42)" fg:x="4785" fg:w="17"/><text x="83.7142%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (17 samples, 0.30%)</title><rect x="83.4642%" y="821" width="0.2965%" height="15" fill="rgb(251,74,28)" fg:x="4785" fg:w="17"/><text x="83.7142%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::get (2 samples, 0.03%)</title><rect x="83.7258%" y="805" width="0.0349%" height="15" fill="rgb(218,20,49)" fg:x="4800" fg:w="2"/><text x="83.9758%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.03%)</title><rect x="83.8305%" y="821" width="0.0349%" height="15" fill="rgb(238,28,14)" fg:x="4806" fg:w="2"/><text x="84.0805%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="83.8479%" y="805" width="0.0174%" height="15" fill="rgb(229,40,46)" fg:x="4807" fg:w="1"/><text x="84.0979%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="83.8653%" y="821" width="0.0349%" height="15" fill="rgb(244,195,20)" fg:x="4808" fg:w="2"/><text x="84.1153%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.03%)</title><rect x="83.9351%" y="805" width="0.0349%" height="15" fill="rgb(253,56,35)" fg:x="4812" fg:w="2"/><text x="84.1851%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::new_unchecked (1 samples, 0.02%)</title><rect x="83.9526%" y="789" width="0.0174%" height="15" fill="rgb(210,149,44)" fg:x="4813" fg:w="1"/><text x="84.2026%" y="799.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::new_unchecked (1 samples, 0.02%)</title><rect x="83.9700%" y="805" width="0.0174%" height="15" fill="rgb(240,135,12)" fg:x="4814" fg:w="1"/><text x="84.2200%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (7 samples, 0.12%)</title><rect x="83.9002%" y="821" width="0.1221%" height="15" fill="rgb(251,24,50)" fg:x="4810" fg:w="7"/><text x="84.1502%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (2 samples, 0.03%)</title><rect x="83.9874%" y="805" width="0.0349%" height="15" fill="rgb(243,200,47)" fg:x="4815" fg:w="2"/><text x="84.2374%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.03%)</title><rect x="84.0223%" y="805" width="0.0349%" height="15" fill="rgb(224,166,26)" fg:x="4817" fg:w="2"/><text x="84.2723%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="84.0398%" y="789" width="0.0174%" height="15" fill="rgb(233,0,47)" fg:x="4818" fg:w="1"/><text x="84.2898%" y="799.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.31%)</title><rect x="83.7607%" y="837" width="0.3140%" height="15" fill="rgb(253,80,5)" fg:x="4802" fg:w="18"/><text x="84.0107%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.05%)</title><rect x="84.0223%" y="821" width="0.0523%" height="15" fill="rgb(214,133,25)" fg:x="4817" fg:w="3"/><text x="84.2723%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="84.0572%" y="805" width="0.0174%" height="15" fill="rgb(209,27,14)" fg:x="4819" fg:w="1"/><text x="84.3072%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[nori_clone::tokenizer::nori_tokenizer::ACNode]&gt; (96 samples, 1.67%)</title><rect x="82.4176%" y="933" width="1.6745%" height="15" fill="rgb(219,102,51)" fg:x="4725" fg:w="96"/><text x="82.6676%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt; (94 samples, 1.64%)</title><rect x="82.4525%" y="917" width="1.6396%" height="15" fill="rgb(237,18,16)" fg:x="4727" fg:w="94"/><text x="82.7025%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;nori_clone::tokenizer::dictionary::model::Morpheme&gt; (94 samples, 1.64%)</title><rect x="82.4525%" y="901" width="1.6396%" height="15" fill="rgb(241,85,17)" fg:x="4727" fg:w="94"/><text x="82.7025%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (50 samples, 0.87%)</title><rect x="83.2200%" y="885" width="0.8721%" height="15" fill="rgb(236,90,42)" fg:x="4771" fg:w="50"/><text x="83.4700%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::dictionary::model::POSTag&gt;&gt; (37 samples, 0.65%)</title><rect x="83.4467%" y="869" width="0.6454%" height="15" fill="rgb(249,57,21)" fg:x="4784" fg:w="37"/><text x="83.6967%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.65%)</title><rect x="83.4467%" y="853" width="0.6454%" height="15" fill="rgb(243,12,36)" fg:x="4784" fg:w="37"/><text x="83.6967%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="84.0747%" y="837" width="0.0174%" height="15" fill="rgb(253,128,47)" fg:x="4820" fg:w="1"/><text x="84.3247%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 1.71%)</title><rect x="82.4001%" y="949" width="1.7094%" height="15" fill="rgb(207,33,20)" fg:x="4724" fg:w="98"/><text x="82.6501%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="84.0921%" y="933" width="0.0174%" height="15" fill="rgb(233,215,35)" fg:x="4821" fg:w="1"/><text x="84.3421%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="84.1095%" y="885" width="0.0174%" height="15" fill="rgb(249,188,52)" fg:x="4822" fg:w="1"/><text x="84.3595%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="84.1095%" y="869" width="0.0174%" height="15" fill="rgb(225,12,32)" fg:x="4822" fg:w="1"/><text x="84.3595%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="84.1270%" y="885" width="0.0174%" height="15" fill="rgb(247,98,14)" fg:x="4823" fg:w="1"/><text x="84.3770%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="84.1270%" y="869" width="0.0174%" height="15" fill="rgb(247,219,48)" fg:x="4823" fg:w="1"/><text x="84.3770%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="84.1095%" y="917" width="0.0872%" height="15" fill="rgb(253,60,48)" fg:x="4822" fg:w="5"/><text x="84.3595%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="84.1095%" y="901" width="0.0872%" height="15" fill="rgb(245,15,52)" fg:x="4822" fg:w="5"/><text x="84.3595%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.05%)</title><rect x="84.1444%" y="885" width="0.0523%" height="15" fill="rgb(220,133,28)" fg:x="4824" fg:w="3"/><text x="84.3944%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="84.1619%" y="869" width="0.0349%" height="15" fill="rgb(217,180,4)" fg:x="4825" fg:w="2"/><text x="84.4119%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="84.1619%" y="853" width="0.0349%" height="15" fill="rgb(251,24,1)" fg:x="4825" fg:w="2"/><text x="84.4119%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="84.1968%" y="901" width="0.0174%" height="15" fill="rgb(212,185,49)" fg:x="4827" fg:w="1"/><text x="84.4468%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="84.1968%" y="885" width="0.0174%" height="15" fill="rgb(215,175,22)" fg:x="4827" fg:w="1"/><text x="84.4468%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="84.1968%" y="917" width="0.0349%" height="15" fill="rgb(250,205,14)" fg:x="4827" fg:w="2"/><text x="84.4468%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="84.2142%" y="901" width="0.0174%" height="15" fill="rgb(225,211,22)" fg:x="4828" fg:w="1"/><text x="84.4642%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="84.2142%" y="885" width="0.0174%" height="15" fill="rgb(251,179,42)" fg:x="4828" fg:w="1"/><text x="84.4642%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="84.2142%" y="869" width="0.0174%" height="15" fill="rgb(208,216,51)" fg:x="4828" fg:w="1"/><text x="84.4642%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 1.85%)</title><rect x="82.4001%" y="997" width="1.8489%" height="15" fill="rgb(235,36,11)" fg:x="4724" fg:w="106"/><text x="82.6501%" y="1007.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;]&gt; (106 samples, 1.85%)</title><rect x="82.4001%" y="981" width="1.8489%" height="15" fill="rgb(213,189,28)" fg:x="4724" fg:w="106"/><text x="82.6501%" y="991.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt; (106 samples, 1.85%)</title><rect x="82.4001%" y="965" width="1.8489%" height="15" fill="rgb(227,203,42)" fg:x="4724" fg:w="106"/><text x="82.6501%" y="975.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt; (8 samples, 0.14%)</title><rect x="84.1095%" y="949" width="0.1395%" height="15" fill="rgb(244,72,36)" fg:x="4822" fg:w="8"/><text x="84.3595%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="84.1095%" y="933" width="0.1395%" height="15" fill="rgb(213,53,17)" fg:x="4822" fg:w="8"/><text x="84.3595%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="84.2316%" y="917" width="0.0174%" height="15" fill="rgb(207,167,3)" fg:x="4829" fg:w="1"/><text x="84.4816%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt;&gt; (107 samples, 1.87%)</title><rect x="82.4001%" y="1013" width="1.8664%" height="15" fill="rgb(216,98,30)" fg:x="4724" fg:w="107"/><text x="82.6501%" y="1023.50">n..</text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;nori_clone::tokenizer::nori_tokenizer::ACNode&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="84.2491%" y="997" width="0.0174%" height="15" fill="rgb(236,123,15)" fg:x="4830" fg:w="1"/><text x="84.4991%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="84.2491%" y="981" width="0.0174%" height="15" fill="rgb(248,81,50)" fg:x="4830" fg:w="1"/><text x="84.4991%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="84.2491%" y="965" width="0.0174%" height="15" fill="rgb(214,120,4)" fg:x="4830" fg:w="1"/><text x="84.4991%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="84.2491%" y="949" width="0.0174%" height="15" fill="rgb(208,179,34)" fg:x="4830" fg:w="1"/><text x="84.4991%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.05%)</title><rect x="84.2840%" y="997" width="0.0523%" height="15" fill="rgb(227,140,7)" fg:x="4832" fg:w="3"/><text x="84.5340%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="84.3189%" y="981" width="0.0174%" height="15" fill="rgb(214,22,6)" fg:x="4834" fg:w="1"/><text x="84.5689%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get (5 samples, 0.09%)</title><rect x="84.2665%" y="1013" width="0.0872%" height="15" fill="rgb(207,137,27)" fg:x="4831" fg:w="5"/><text x="84.5165%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="84.3363%" y="997" width="0.0174%" height="15" fill="rgb(210,8,46)" fg:x="4835" fg:w="1"/><text x="84.5863%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.07%)</title><rect x="84.3537%" y="1013" width="0.0698%" height="15" fill="rgb(240,16,54)" fg:x="4836" fg:w="4"/><text x="84.6037%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="84.4235%" y="1013" width="0.0174%" height="15" fill="rgb(211,209,29)" fg:x="4840" fg:w="1"/><text x="84.6735%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.02%)</title><rect x="84.4410%" y="1013" width="0.0174%" height="15" fill="rgb(226,228,24)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="1023.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="84.4410%" y="997" width="0.0174%" height="15" fill="rgb(222,84,9)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.02%)</title><rect x="84.4410%" y="981" width="0.0174%" height="15" fill="rgb(234,203,30)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::_&lt;impl str&gt;::is_char_boundary (1 samples, 0.02%)</title><rect x="84.4410%" y="965" width="0.0174%" height="15" fill="rgb(238,109,14)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="84.4410%" y="949" width="0.0174%" height="15" fill="rgb(233,206,34)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="84.4410%" y="933" width="0.0174%" height="15" fill="rgb(220,167,47)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="84.4410%" y="917" width="0.0174%" height="15" fill="rgb(238,105,10)" fg:x="4841" fg:w="1"/><text x="84.6910%" y="927.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::ConnectionCost::get_cost (1 samples, 0.02%)</title><rect x="84.4584%" y="1013" width="0.0174%" height="15" fill="rgb(213,227,17)" fg:x="4842" fg:w="1"/><text x="84.7084%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="84.4758%" y="949" width="0.0174%" height="15" fill="rgb(217,132,38)" fg:x="4843" fg:w="1"/><text x="84.7258%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="84.4758%" y="933" width="0.0174%" height="15" fill="rgb(242,146,4)" fg:x="4843" fg:w="1"/><text x="84.7258%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="84.4758%" y="917" width="0.0174%" height="15" fill="rgb(212,61,9)" fg:x="4843" fg:w="1"/><text x="84.7258%" y="927.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::count_space_before_word (2 samples, 0.03%)</title><rect x="84.4758%" y="1013" width="0.0349%" height="15" fill="rgb(247,126,22)" fg:x="4843" fg:w="2"/><text x="84.7258%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="84.4758%" y="997" width="0.0349%" height="15" fill="rgb(220,196,2)" fg:x="4843" fg:w="2"/><text x="84.7258%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.03%)</title><rect x="84.4758%" y="981" width="0.0349%" height="15" fill="rgb(208,46,4)" fg:x="4843" fg:w="2"/><text x="84.7258%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::validations::next_code_point_reverse (2 samples, 0.03%)</title><rect x="84.4758%" y="965" width="0.0349%" height="15" fill="rgb(252,104,46)" fg:x="4843" fg:w="2"/><text x="84.7258%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="84.4933%" y="949" width="0.0174%" height="15" fill="rgb(237,152,48)" fg:x="4844" fg:w="1"/><text x="84.7433%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.07%)</title><rect x="85.1736%" y="997" width="0.0698%" height="15" fill="rgb(221,59,37)" fg:x="4883" fg:w="4"/><text x="85.4236%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.44%)</title><rect x="85.2433%" y="997" width="0.4361%" height="15" fill="rgb(209,202,51)" fg:x="4887" fg:w="25"/><text x="85.4933%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.44%)</title><rect x="85.2433%" y="981" width="0.4361%" height="15" fill="rgb(228,81,30)" fg:x="4887" fg:w="25"/><text x="85.4933%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (25 samples, 0.44%)</title><rect x="85.2433%" y="965" width="0.4361%" height="15" fill="rgb(227,42,39)" fg:x="4887" fg:w="25"/><text x="85.4933%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (25 samples, 0.44%)</title><rect x="85.2433%" y="949" width="0.4361%" height="15" fill="rgb(221,26,2)" fg:x="4887" fg:w="25"/><text x="85.4933%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (1 samples, 0.02%)</title><rect x="85.6968%" y="981" width="0.0174%" height="15" fill="rgb(254,61,31)" fg:x="4913" fg:w="1"/><text x="85.9468%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (1 samples, 0.02%)</title><rect x="85.8364%" y="965" width="0.0174%" height="15" fill="rgb(222,173,38)" fg:x="4921" fg:w="1"/><text x="86.0864%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.19%)</title><rect x="85.6794%" y="997" width="0.1919%" height="15" fill="rgb(218,50,12)" fg:x="4912" fg:w="11"/><text x="85.9294%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.16%)</title><rect x="85.7143%" y="981" width="0.1570%" height="15" fill="rgb(223,88,40)" fg:x="4914" fg:w="9"/><text x="85.9643%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;str as core::convert::AsRef&lt;str&gt;&gt;::as_ref (1 samples, 0.02%)</title><rect x="85.8538%" y="965" width="0.0174%" height="15" fill="rgb(237,54,19)" fg:x="4922" fg:w="1"/><text x="86.1038%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="85.8887%" y="965" width="0.0174%" height="15" fill="rgb(251,129,25)" fg:x="4924" fg:w="1"/><text x="86.1387%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="85.8887%" y="949" width="0.0174%" height="15" fill="rgb(238,97,19)" fg:x="4924" fg:w="1"/><text x="86.1387%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="85.8887%" y="933" width="0.0174%" height="15" fill="rgb(240,169,18)" fg:x="4924" fg:w="1"/><text x="86.1387%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.03%)</title><rect x="85.9062%" y="965" width="0.0349%" height="15" fill="rgb(230,187,49)" fg:x="4925" fg:w="2"/><text x="86.1562%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="85.9236%" y="949" width="0.0174%" height="15" fill="rgb(209,44,26)" fg:x="4926" fg:w="1"/><text x="86.1736%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.09%)</title><rect x="85.8713%" y="997" width="0.0872%" height="15" fill="rgb(244,0,6)" fg:x="4923" fg:w="5"/><text x="86.1213%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.07%)</title><rect x="85.8887%" y="981" width="0.0698%" height="15" fill="rgb(248,18,21)" fg:x="4924" fg:w="4"/><text x="86.1387%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="85.9410%" y="965" width="0.0174%" height="15" fill="rgb(245,180,19)" fg:x="4927" fg:w="1"/><text x="86.1910%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.05%)</title><rect x="85.9585%" y="997" width="0.0523%" height="15" fill="rgb(252,118,36)" fg:x="4928" fg:w="3"/><text x="86.2085%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="85.9934%" y="981" width="0.0174%" height="15" fill="rgb(210,224,19)" fg:x="4930" fg:w="1"/><text x="86.2434%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="85.9934%" y="965" width="0.0174%" height="15" fill="rgb(218,30,24)" fg:x="4930" fg:w="1"/><text x="86.2434%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="85.9934%" y="949" width="0.0174%" height="15" fill="rgb(219,75,50)" fg:x="4930" fg:w="1"/><text x="86.2434%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="86.0108%" y="997" width="0.0174%" height="15" fill="rgb(234,72,50)" fg:x="4931" fg:w="1"/><text x="86.2608%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (2 samples, 0.03%)</title><rect x="86.1155%" y="981" width="0.0349%" height="15" fill="rgb(219,100,48)" fg:x="4937" fg:w="2"/><text x="86.3655%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="86.1329%" y="965" width="0.0174%" height="15" fill="rgb(253,5,41)" fg:x="4938" fg:w="1"/><text x="86.3829%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.05%)</title><rect x="86.1504%" y="981" width="0.0523%" height="15" fill="rgb(247,181,11)" fg:x="4939" fg:w="3"/><text x="86.4004%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="86.1678%" y="965" width="0.0349%" height="15" fill="rgb(222,223,25)" fg:x="4940" fg:w="2"/><text x="86.4178%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.19%)</title><rect x="86.0283%" y="997" width="0.1919%" height="15" fill="rgb(214,198,28)" fg:x="4932" fg:w="11"/><text x="86.2783%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="86.2027%" y="981" width="0.0174%" height="15" fill="rgb(230,46,43)" fg:x="4942" fg:w="1"/><text x="86.4527%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="86.4992%" y="981" width="0.0174%" height="15" fill="rgb(233,65,53)" fg:x="4959" fg:w="1"/><text x="86.7492%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="86.5864%" y="949" width="0.0174%" height="15" fill="rgb(221,121,27)" fg:x="4964" fg:w="1"/><text x="86.8364%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="86.6213%" y="933" width="0.0174%" height="15" fill="rgb(247,70,47)" fg:x="4966" fg:w="1"/><text x="86.8713%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="86.6213%" y="917" width="0.0174%" height="15" fill="rgb(228,85,35)" fg:x="4966" fg:w="1"/><text x="86.8713%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.10%)</title><rect x="86.6039%" y="949" width="0.1047%" height="15" fill="rgb(209,50,18)" fg:x="4965" fg:w="6"/><text x="86.8539%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (4 samples, 0.07%)</title><rect x="86.6388%" y="933" width="0.0698%" height="15" fill="rgb(250,19,35)" fg:x="4967" fg:w="4"/><text x="86.8888%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="86.6911%" y="917" width="0.0174%" height="15" fill="rgb(253,107,29)" fg:x="4970" fg:w="1"/><text x="86.9411%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="86.7260%" y="933" width="0.0174%" height="15" fill="rgb(252,179,29)" fg:x="4972" fg:w="1"/><text x="86.9760%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.19%)</title><rect x="86.5864%" y="965" width="0.1919%" height="15" fill="rgb(238,194,6)" fg:x="4964" fg:w="11"/><text x="86.8364%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (4 samples, 0.07%)</title><rect x="86.7085%" y="949" width="0.0698%" height="15" fill="rgb(238,164,29)" fg:x="4971" fg:w="4"/><text x="86.9585%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (2 samples, 0.03%)</title><rect x="86.7434%" y="933" width="0.0349%" height="15" fill="rgb(224,25,9)" fg:x="4973" fg:w="2"/><text x="86.9934%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (2 samples, 0.03%)</title><rect x="86.7434%" y="917" width="0.0349%" height="15" fill="rgb(244,153,23)" fg:x="4973" fg:w="2"/><text x="86.9934%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="86.7783%" y="949" width="0.0174%" height="15" fill="rgb(212,203,14)" fg:x="4975" fg:w="1"/><text x="87.0283%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="87.0051%" y="917" width="0.0174%" height="15" fill="rgb(220,164,20)" fg:x="4988" fg:w="1"/><text x="87.2551%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="87.0225%" y="917" width="0.0174%" height="15" fill="rgb(222,203,48)" fg:x="4989" fg:w="1"/><text x="87.2725%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.0399%" y="917" width="0.0174%" height="15" fill="rgb(215,159,22)" fg:x="4990" fg:w="1"/><text x="87.2899%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="87.1272%" y="885" width="0.0349%" height="15" fill="rgb(216,183,47)" fg:x="4995" fg:w="2"/><text x="87.3772%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="87.1969%" y="869" width="0.0174%" height="15" fill="rgb(229,195,25)" fg:x="4999" fg:w="1"/><text x="87.4469%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="87.1969%" y="853" width="0.0174%" height="15" fill="rgb(224,132,51)" fg:x="4999" fg:w="1"/><text x="87.4469%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.10%)</title><rect x="87.1620%" y="885" width="0.1047%" height="15" fill="rgb(240,63,7)" fg:x="4997" fg:w="6"/><text x="87.4120%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.05%)</title><rect x="87.2144%" y="869" width="0.0523%" height="15" fill="rgb(249,182,41)" fg:x="5000" fg:w="3"/><text x="87.4644%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="87.2493%" y="853" width="0.0174%" height="15" fill="rgb(243,47,26)" fg:x="5002" fg:w="1"/><text x="87.4993%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.23%)</title><rect x="87.0574%" y="917" width="0.2268%" height="15" fill="rgb(233,48,2)" fg:x="4991" fg:w="13"/><text x="87.3074%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.19%)</title><rect x="87.0923%" y="901" width="0.1919%" height="15" fill="rgb(244,165,34)" fg:x="4993" fg:w="11"/><text x="87.3423%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="87.2667%" y="885" width="0.0174%" height="15" fill="rgb(207,89,7)" fg:x="5003" fg:w="1"/><text x="87.5167%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="87.3539%" y="837" width="0.0174%" height="15" fill="rgb(244,117,36)" fg:x="5008" fg:w="1"/><text x="87.6039%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.07%)</title><rect x="87.3190%" y="885" width="0.0698%" height="15" fill="rgb(226,144,34)" fg:x="5006" fg:w="4"/><text x="87.5690%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.07%)</title><rect x="87.3190%" y="869" width="0.0698%" height="15" fill="rgb(213,23,19)" fg:x="5006" fg:w="4"/><text x="87.5690%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.07%)</title><rect x="87.3190%" y="853" width="0.0698%" height="15" fill="rgb(217,75,12)" fg:x="5006" fg:w="4"/><text x="87.5690%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="87.3714%" y="837" width="0.0174%" height="15" fill="rgb(224,159,17)" fg:x="5009" fg:w="1"/><text x="87.6214%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.09%)</title><rect x="87.3190%" y="901" width="0.0872%" height="15" fill="rgb(217,118,1)" fg:x="5006" fg:w="5"/><text x="87.5690%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="87.3888%" y="885" width="0.0174%" height="15" fill="rgb(232,180,48)" fg:x="5010" fg:w="1"/><text x="87.6388%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::MorphemeExpression as core::clone::Clone&gt;::clone (21 samples, 0.37%)</title><rect x="87.2841%" y="917" width="0.3663%" height="15" fill="rgb(230,27,33)" fg:x="5004" fg:w="21"/><text x="87.5341%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::POSTag as core::clone::Clone&gt;::clone (14 samples, 0.24%)</title><rect x="87.4062%" y="901" width="0.2442%" height="15" fill="rgb(205,31,21)" fg:x="5011" fg:w="14"/><text x="87.6562%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="87.6504%" y="917" width="0.0174%" height="15" fill="rgb(253,59,4)" fg:x="5025" fg:w="1"/><text x="87.9004%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="87.7028%" y="901" width="0.0174%" height="15" fill="rgb(224,201,9)" fg:x="5028" fg:w="1"/><text x="87.9528%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="87.7202%" y="901" width="0.0174%" height="15" fill="rgb(229,206,30)" fg:x="5029" fg:w="1"/><text x="87.9702%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.09%)</title><rect x="87.6679%" y="917" width="0.0872%" height="15" fill="rgb(212,67,47)" fg:x="5026" fg:w="5"/><text x="87.9179%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="87.7377%" y="901" width="0.0174%" height="15" fill="rgb(211,96,50)" fg:x="5030" fg:w="1"/><text x="87.9877%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="87.7377%" y="885" width="0.0174%" height="15" fill="rgb(252,114,18)" fg:x="5030" fg:w="1"/><text x="87.9877%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="87.7551%" y="917" width="0.0174%" height="15" fill="rgb(223,58,37)" fg:x="5031" fg:w="1"/><text x="88.0051%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="87.7725%" y="901" width="0.0174%" height="15" fill="rgb(237,70,4)" fg:x="5032" fg:w="1"/><text x="88.0225%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.07%)</title><rect x="87.7900%" y="901" width="0.0698%" height="15" fill="rgb(244,85,46)" fg:x="5033" fg:w="4"/><text x="88.0400%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.05%)</title><rect x="87.8074%" y="885" width="0.0523%" height="15" fill="rgb(223,39,52)" fg:x="5034" fg:w="3"/><text x="88.0574%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="87.8423%" y="869" width="0.0174%" height="15" fill="rgb(218,200,14)" fg:x="5036" fg:w="1"/><text x="88.0923%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (9 samples, 0.16%)</title><rect x="87.7725%" y="917" width="0.1570%" height="15" fill="rgb(208,171,16)" fg:x="5032" fg:w="9"/><text x="88.0225%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts_mut (4 samples, 0.07%)</title><rect x="87.8598%" y="901" width="0.0698%" height="15" fill="rgb(234,200,18)" fg:x="5037" fg:w="4"/><text x="88.1098%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (3 samples, 0.05%)</title><rect x="87.8772%" y="885" width="0.0523%" height="15" fill="rgb(228,45,11)" fg:x="5038" fg:w="3"/><text x="88.1272%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="87.9121%" y="869" width="0.0174%" height="15" fill="rgb(237,182,11)" fg:x="5040" fg:w="1"/><text x="88.1621%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="87.9644%" y="901" width="0.0174%" height="15" fill="rgb(241,175,49)" fg:x="5043" fg:w="1"/><text x="88.2144%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="88.3830%" y="837" width="0.0174%" height="15" fill="rgb(247,38,35)" fg:x="5067" fg:w="1"/><text x="88.6330%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.30%)</title><rect x="88.5924%" y="773" width="0.2965%" height="15" fill="rgb(228,39,49)" fg:x="5079" fg:w="17"/><text x="88.8424%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.49%)</title><rect x="88.4354%" y="821" width="0.4884%" height="15" fill="rgb(226,101,26)" fg:x="5070" fg:w="28"/><text x="88.6854%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.45%)</title><rect x="88.4703%" y="805" width="0.4535%" height="15" fill="rgb(206,141,19)" fg:x="5072" fg:w="26"/><text x="88.7203%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.44%)</title><rect x="88.4877%" y="789" width="0.4361%" height="15" fill="rgb(211,200,13)" fg:x="5073" fg:w="25"/><text x="88.7377%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.03%)</title><rect x="88.8889%" y="773" width="0.0349%" height="15" fill="rgb(241,121,6)" fg:x="5096" fg:w="2"/><text x="89.1389%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="88.9063%" y="757" width="0.0174%" height="15" fill="rgb(234,221,29)" fg:x="5097" fg:w="1"/><text x="89.1563%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="88.9238%" y="821" width="0.0174%" height="15" fill="rgb(229,136,5)" fg:x="5098" fg:w="1"/><text x="89.1738%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (32 samples, 0.56%)</title><rect x="88.4005%" y="837" width="0.5582%" height="15" fill="rgb(238,36,11)" fg:x="5068" fg:w="32"/><text x="88.6505%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::get (1 samples, 0.02%)</title><rect x="88.9412%" y="821" width="0.0174%" height="15" fill="rgb(251,55,41)" fg:x="5099" fg:w="1"/><text x="89.1912%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="88.9587%" y="837" width="0.0174%" height="15" fill="rgb(242,34,40)" fg:x="5100" fg:w="1"/><text x="89.2087%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="88.9587%" y="821" width="0.0174%" height="15" fill="rgb(215,42,17)" fg:x="5100" fg:w="1"/><text x="89.2087%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="88.9587%" y="805" width="0.0174%" height="15" fill="rgb(207,44,46)" fg:x="5100" fg:w="1"/><text x="89.2087%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="88.9935%" y="821" width="0.0174%" height="15" fill="rgb(211,206,28)" fg:x="5102" fg:w="1"/><text x="89.2435%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="89.0110%" y="821" width="0.0174%" height="15" fill="rgb(237,167,16)" fg:x="5103" fg:w="1"/><text x="89.2610%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (45 samples, 0.78%)</title><rect x="88.2958%" y="853" width="0.7849%" height="15" fill="rgb(233,66,6)" fg:x="5062" fg:w="45"/><text x="88.5458%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (6 samples, 0.10%)</title><rect x="88.9761%" y="837" width="0.1047%" height="15" fill="rgb(246,123,29)" fg:x="5101" fg:w="6"/><text x="89.2261%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts_mut (3 samples, 0.05%)</title><rect x="89.0284%" y="821" width="0.0523%" height="15" fill="rgb(209,62,40)" fg:x="5104" fg:w="3"/><text x="89.2784%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="89.0808%" y="853" width="0.0174%" height="15" fill="rgb(218,4,25)" fg:x="5107" fg:w="1"/><text x="89.3308%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.87%)</title><rect x="88.2609%" y="869" width="0.8721%" height="15" fill="rgb(253,91,49)" fg:x="5060" fg:w="50"/><text x="88.5109%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (2 samples, 0.03%)</title><rect x="89.0982%" y="853" width="0.0349%" height="15" fill="rgb(228,155,29)" fg:x="5108" fg:w="2"/><text x="89.3482%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="89.1331%" y="869" width="0.0174%" height="15" fill="rgb(243,57,37)" fg:x="5110" fg:w="1"/><text x="89.3831%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="89.1680%" y="837" width="0.0174%" height="15" fill="rgb(244,167,17)" fg:x="5112" fg:w="1"/><text x="89.4180%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::new_in (3 samples, 0.05%)</title><rect x="89.1505%" y="869" width="0.0523%" height="15" fill="rgb(207,181,38)" fg:x="5111" fg:w="3"/><text x="89.4005%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::dangling (3 samples, 0.05%)</title><rect x="89.1505%" y="853" width="0.0523%" height="15" fill="rgb(211,8,23)" fg:x="5111" fg:w="3"/><text x="89.4005%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="89.1854%" y="837" width="0.0174%" height="15" fill="rgb(235,11,44)" fg:x="5113" fg:w="1"/><text x="89.4354%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="89.2029%" y="869" width="0.0174%" height="15" fill="rgb(248,18,52)" fg:x="5114" fg:w="1"/><text x="89.4529%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="89.3773%" y="853" width="0.0174%" height="15" fill="rgb(208,4,7)" fg:x="5124" fg:w="1"/><text x="89.6273%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.03%)</title><rect x="89.3947%" y="853" width="0.0349%" height="15" fill="rgb(240,17,39)" fg:x="5125" fg:w="2"/><text x="89.6447%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_mul (6 samples, 0.10%)</title><rect x="89.4296%" y="853" width="0.1047%" height="15" fill="rgb(207,170,3)" fg:x="5127" fg:w="6"/><text x="89.6796%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (20 samples, 0.35%)</title><rect x="89.2203%" y="869" width="0.3489%" height="15" fill="rgb(236,100,52)" fg:x="5115" fg:w="20"/><text x="89.4703%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::ok_or (2 samples, 0.03%)</title><rect x="89.5343%" y="853" width="0.0349%" height="15" fill="rgb(246,78,51)" fg:x="5133" fg:w="2"/><text x="89.7843%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="89.5692%" y="869" width="0.0349%" height="15" fill="rgb(211,17,15)" fg:x="5135" fg:w="2"/><text x="89.8192%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.03%)</title><rect x="89.6040%" y="869" width="0.0349%" height="15" fill="rgb(209,59,46)" fg:x="5137" fg:w="2"/><text x="89.8540%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="89.6215%" y="853" width="0.0174%" height="15" fill="rgb(210,92,25)" fg:x="5138" fg:w="1"/><text x="89.8715%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (96 samples, 1.67%)</title><rect x="87.9993%" y="885" width="1.6745%" height="15" fill="rgb(238,174,52)" fg:x="5045" fg:w="96"/><text x="88.2493%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (2 samples, 0.03%)</title><rect x="89.6389%" y="869" width="0.0349%" height="15" fill="rgb(230,73,7)" fg:x="5139" fg:w="2"/><text x="89.8889%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="89.6738%" y="885" width="0.0174%" height="15" fill="rgb(243,124,40)" fg:x="5141" fg:w="1"/><text x="89.9238%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (103 samples, 1.80%)</title><rect x="87.9295%" y="917" width="1.7966%" height="15" fill="rgb(244,170,11)" fg:x="5041" fg:w="103"/><text x="88.1795%" y="927.50">n..</text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 1.74%)</title><rect x="87.9819%" y="901" width="1.7443%" height="15" fill="rgb(207,114,54)" fg:x="5044" fg:w="100"/><text x="88.2319%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.03%)</title><rect x="89.6913%" y="885" width="0.0349%" height="15" fill="rgb(205,42,20)" fg:x="5142" fg:w="2"/><text x="89.9413%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="89.7261%" y="917" width="0.0174%" height="15" fill="rgb(230,30,28)" fg:x="5144" fg:w="1"/><text x="89.9761%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::iter::adapters::take::Take&lt;I&gt;::new (1 samples, 0.02%)</title><rect x="89.7436%" y="917" width="0.0174%" height="15" fill="rgb(205,73,54)" fg:x="5145" fg:w="1"/><text x="89.9936%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.02%)</title><rect x="89.7610%" y="917" width="0.0174%" height="15" fill="rgb(254,227,23)" fg:x="5146" fg:w="1"/><text x="90.0110%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (1 samples, 0.02%)</title><rect x="89.7610%" y="901" width="0.0174%" height="15" fill="rgb(228,202,34)" fg:x="5146" fg:w="1"/><text x="90.0110%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::take (1 samples, 0.02%)</title><rect x="89.7785%" y="917" width="0.0174%" height="15" fill="rgb(222,225,37)" fg:x="5147" fg:w="1"/><text x="90.0285%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::mem::forget (1 samples, 0.02%)</title><rect x="89.7959%" y="917" width="0.0174%" height="15" fill="rgb(221,14,54)" fg:x="5148" fg:w="1"/><text x="90.0459%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.16%)</title><rect x="89.8134%" y="917" width="0.1570%" height="15" fill="rgb(254,102,2)" fg:x="5149" fg:w="9"/><text x="90.0634%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (9 samples, 0.16%)</title><rect x="89.8134%" y="901" width="0.1570%" height="15" fill="rgb(232,104,17)" fg:x="5149" fg:w="9"/><text x="90.0634%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.16%)</title><rect x="89.8134%" y="885" width="0.1570%" height="15" fill="rgb(250,220,14)" fg:x="5149" fg:w="9"/><text x="90.0634%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.02%)</title><rect x="89.9703%" y="917" width="0.0174%" height="15" fill="rgb(241,158,9)" fg:x="5158" fg:w="1"/><text x="90.2203%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.03%)</title><rect x="89.9878%" y="901" width="0.0349%" height="15" fill="rgb(246,9,43)" fg:x="5159" fg:w="2"/><text x="90.2378%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::iter (7 samples, 0.12%)</title><rect x="89.9878%" y="917" width="0.1221%" height="15" fill="rgb(206,73,33)" fg:x="5159" fg:w="7"/><text x="90.2378%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.09%)</title><rect x="90.0227%" y="901" width="0.0872%" height="15" fill="rgb(222,79,8)" fg:x="5161" fg:w="5"/><text x="90.2727%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (3 samples, 0.05%)</title><rect x="90.0576%" y="885" width="0.0523%" height="15" fill="rgb(234,8,54)" fg:x="5163" fg:w="3"/><text x="90.3076%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="90.0924%" y="869" width="0.0174%" height="15" fill="rgb(209,134,38)" fg:x="5165" fg:w="1"/><text x="90.3424%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (191 samples, 3.33%)</title><rect x="86.7957%" y="933" width="3.3316%" height="15" fill="rgb(230,127,29)" fg:x="4976" fg:w="191"/><text x="87.0457%" y="943.50">nor..</text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.02%)</title><rect x="90.1099%" y="917" width="0.0174%" height="15" fill="rgb(242,44,41)" fg:x="5166" fg:w="1"/><text x="90.3599%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="90.1273%" y="933" width="0.0349%" height="15" fill="rgb(222,56,43)" fg:x="5167" fg:w="2"/><text x="90.3773%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="90.1622%" y="933" width="0.0174%" height="15" fill="rgb(238,39,47)" fg:x="5169" fg:w="1"/><text x="90.4122%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::take (1 samples, 0.02%)</title><rect x="90.1797%" y="933" width="0.0174%" height="15" fill="rgb(226,79,43)" fg:x="5170" fg:w="1"/><text x="90.4297%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (197 samples, 3.44%)</title><rect x="86.7783%" y="965" width="3.4362%" height="15" fill="rgb(242,105,53)" fg:x="4975" fg:w="197"/><text x="87.0283%" y="975.50">nor..</text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (196 samples, 3.42%)</title><rect x="86.7957%" y="949" width="3.4188%" height="15" fill="rgb(251,132,46)" fg:x="4976" fg:w="196"/><text x="87.0457%" y="959.50">nor..</text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.02%)</title><rect x="90.1971%" y="933" width="0.0174%" height="15" fill="rgb(231,77,14)" fg:x="5171" fg:w="1"/><text x="90.4471%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (213 samples, 3.72%)</title><rect x="86.5167%" y="981" width="3.7153%" height="15" fill="rgb(240,135,9)" fg:x="4960" fg:w="213"/><text x="86.7667%" y="991.50">nori..</text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="90.2145%" y="965" width="0.0174%" height="15" fill="rgb(248,109,14)" fg:x="5172" fg:w="1"/><text x="90.4645%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::Morpheme as core::clone::Clone&gt;::clone (231 samples, 4.03%)</title><rect x="86.2201%" y="997" width="4.0293%" height="15" fill="rgb(227,146,52)" fg:x="4943" fg:w="231"/><text x="86.4701%" y="1007.50">nori..</text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="90.2320%" y="981" width="0.0174%" height="15" fill="rgb(232,54,3)" fg:x="5173" fg:w="1"/><text x="90.4820%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::POSType as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="90.2494%" y="997" width="0.0174%" height="15" fill="rgb(229,201,43)" fg:x="5174" fg:w="1"/><text x="90.4994%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="90.2669%" y="997" width="0.0174%" height="15" fill="rgb(252,161,33)" fg:x="5175" fg:w="1"/><text x="90.5169%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="90.2843%" y="997" width="0.0174%" height="15" fill="rgb(226,146,40)" fg:x="5176" fg:w="1"/><text x="90.5343%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.05%)</title><rect x="90.3018%" y="997" width="0.0523%" height="15" fill="rgb(219,47,25)" fg:x="5177" fg:w="3"/><text x="90.5518%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="90.4587%" y="949" width="0.0174%" height="15" fill="rgb(250,135,13)" fg:x="5186" fg:w="1"/><text x="90.7087%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="90.5285%" y="869" width="0.0174%" height="15" fill="rgb(219,229,18)" fg:x="5190" fg:w="1"/><text x="90.7785%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.07%)</title><rect x="90.5285%" y="885" width="0.0698%" height="15" fill="rgb(217,152,27)" fg:x="5190" fg:w="4"/><text x="90.7785%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.05%)</title><rect x="90.5460%" y="869" width="0.0523%" height="15" fill="rgb(225,71,47)" fg:x="5191" fg:w="3"/><text x="90.7960%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.05%)</title><rect x="90.5460%" y="853" width="0.0523%" height="15" fill="rgb(220,139,14)" fg:x="5191" fg:w="3"/><text x="90.7960%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="90.5808%" y="837" width="0.0174%" height="15" fill="rgb(247,54,32)" fg:x="5193" fg:w="1"/><text x="90.8308%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="90.5983%" y="885" width="0.0174%" height="15" fill="rgb(252,131,39)" fg:x="5194" fg:w="1"/><text x="90.8483%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="90.5983%" y="869" width="0.0174%" height="15" fill="rgb(210,108,39)" fg:x="5194" fg:w="1"/><text x="90.8483%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="90.5983%" y="853" width="0.0174%" height="15" fill="rgb(205,23,29)" fg:x="5194" fg:w="1"/><text x="90.8483%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (6 samples, 0.10%)</title><rect x="90.5285%" y="901" width="0.1047%" height="15" fill="rgb(246,139,46)" fg:x="5190" fg:w="6"/><text x="90.7785%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="90.6157%" y="885" width="0.0174%" height="15" fill="rgb(250,81,26)" fg:x="5195" fg:w="1"/><text x="90.8657%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.16%)</title><rect x="90.4936%" y="933" width="0.1570%" height="15" fill="rgb(214,104,7)" fg:x="5188" fg:w="9"/><text x="90.7436%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (8 samples, 0.14%)</title><rect x="90.5111%" y="917" width="0.1395%" height="15" fill="rgb(233,189,8)" fg:x="5189" fg:w="8"/><text x="90.7611%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="90.6332%" y="901" width="0.0174%" height="15" fill="rgb(228,141,17)" fg:x="5196" fg:w="1"/><text x="90.8832%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="90.6681%" y="901" width="0.0174%" height="15" fill="rgb(247,157,1)" fg:x="5198" fg:w="1"/><text x="90.9181%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="90.6855%" y="853" width="0.0174%" height="15" fill="rgb(249,225,5)" fg:x="5199" fg:w="1"/><text x="90.9355%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="90.7029%" y="853" width="0.0174%" height="15" fill="rgb(242,55,13)" fg:x="5200" fg:w="1"/><text x="90.9529%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="90.7378%" y="837" width="0.0174%" height="15" fill="rgb(230,49,50)" fg:x="5202" fg:w="1"/><text x="90.9878%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.07%)</title><rect x="90.7553%" y="837" width="0.0698%" height="15" fill="rgb(241,111,38)" fg:x="5203" fg:w="4"/><text x="91.0053%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="90.7902%" y="821" width="0.0349%" height="15" fill="rgb(252,155,4)" fg:x="5205" fg:w="2"/><text x="91.0402%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.02%)</title><rect x="90.8250%" y="837" width="0.0174%" height="15" fill="rgb(212,69,32)" fg:x="5207" fg:w="1"/><text x="91.0750%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="90.8250%" y="821" width="0.0174%" height="15" fill="rgb(243,107,47)" fg:x="5207" fg:w="1"/><text x="91.0750%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="90.8774%" y="805" width="0.0174%" height="15" fill="rgb(247,130,12)" fg:x="5210" fg:w="1"/><text x="91.1274%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.09%)</title><rect x="90.8425%" y="821" width="0.0872%" height="15" fill="rgb(233,74,16)" fg:x="5208" fg:w="5"/><text x="91.0925%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="90.8948%" y="805" width="0.0349%" height="15" fill="rgb(208,58,18)" fg:x="5211" fg:w="2"/><text x="91.1448%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="90.9123%" y="789" width="0.0174%" height="15" fill="rgb(242,225,1)" fg:x="5212" fg:w="1"/><text x="91.1623%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.10%)</title><rect x="90.8425%" y="837" width="0.1047%" height="15" fill="rgb(249,39,40)" fg:x="5208" fg:w="6"/><text x="91.0925%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="90.9297%" y="821" width="0.0174%" height="15" fill="rgb(207,72,44)" fg:x="5213" fg:w="1"/><text x="91.1797%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="90.9297%" y="805" width="0.0174%" height="15" fill="rgb(215,193,12)" fg:x="5213" fg:w="1"/><text x="91.1797%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.05%)</title><rect x="90.9471%" y="837" width="0.0523%" height="15" fill="rgb(248,41,39)" fg:x="5214" fg:w="3"/><text x="91.1971%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="90.9820%" y="821" width="0.0174%" height="15" fill="rgb(253,85,4)" fg:x="5216" fg:w="1"/><text x="91.2320%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (19 samples, 0.33%)</title><rect x="90.6855%" y="869" width="0.3314%" height="15" fill="rgb(243,70,31)" fg:x="5199" fg:w="19"/><text x="90.9355%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (17 samples, 0.30%)</title><rect x="90.7204%" y="853" width="0.2965%" height="15" fill="rgb(253,195,26)" fg:x="5201" fg:w="17"/><text x="90.9704%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.9995%" y="837" width="0.0174%" height="15" fill="rgb(243,42,11)" fg:x="5217" fg:w="1"/><text x="91.2495%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::realloc (20 samples, 0.35%)</title><rect x="90.6855%" y="901" width="0.3489%" height="15" fill="rgb(239,66,17)" fg:x="5199" fg:w="20"/><text x="90.9355%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.35%)</title><rect x="90.6855%" y="885" width="0.3489%" height="15" fill="rgb(217,132,21)" fg:x="5199" fg:w="20"/><text x="90.9355%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="91.0169%" y="869" width="0.0174%" height="15" fill="rgb(252,202,21)" fg:x="5218" fg:w="1"/><text x="91.2669%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="91.0169%" y="853" width="0.0174%" height="15" fill="rgb(233,98,36)" fg:x="5218" fg:w="1"/><text x="91.2669%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="91.0344%" y="901" width="0.0174%" height="15" fill="rgb(216,153,54)" fg:x="5219" fg:w="1"/><text x="91.2844%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="91.0518%" y="885" width="0.0174%" height="15" fill="rgb(250,99,7)" fg:x="5220" fg:w="1"/><text x="91.3018%" y="895.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::grow_impl (24 samples, 0.42%)</title><rect x="90.6681%" y="917" width="0.4186%" height="15" fill="rgb(207,56,50)" fg:x="5198" fg:w="24"/><text x="90.9181%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="91.0518%" y="901" width="0.0349%" height="15" fill="rgb(244,61,34)" fg:x="5220" fg:w="2"/><text x="91.3018%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="91.0692%" y="885" width="0.0174%" height="15" fill="rgb(241,50,38)" fg:x="5221" fg:w="1"/><text x="91.3192%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.45%)</title><rect x="90.6506%" y="933" width="0.4535%" height="15" fill="rgb(212,166,30)" fg:x="5197" fg:w="26"/><text x="90.9006%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="91.0867%" y="917" width="0.0174%" height="15" fill="rgb(249,127,32)" fg:x="5222" fg:w="1"/><text x="91.3367%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="91.1041%" y="933" width="0.0174%" height="15" fill="rgb(209,103,0)" fg:x="5223" fg:w="1"/><text x="91.3541%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::finish_grow (38 samples, 0.66%)</title><rect x="90.4762%" y="949" width="0.6628%" height="15" fill="rgb(238,209,51)" fg:x="5187" fg:w="38"/><text x="90.7262%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="91.1216%" y="933" width="0.0174%" height="15" fill="rgb(237,56,23)" fg:x="5224" fg:w="1"/><text x="91.3716%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="91.1216%" y="917" width="0.0174%" height="15" fill="rgb(215,153,46)" fg:x="5224" fg:w="1"/><text x="91.3716%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="91.1216%" y="901" width="0.0174%" height="15" fill="rgb(224,49,31)" fg:x="5224" fg:w="1"/><text x="91.3716%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="91.1390%" y="949" width="0.0174%" height="15" fill="rgb(250,18,42)" fg:x="5225" fg:w="1"/><text x="91.3890%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="91.1390%" y="933" width="0.0174%" height="15" fill="rgb(215,176,39)" fg:x="5225" fg:w="1"/><text x="91.3890%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.75%)</title><rect x="90.4239%" y="965" width="0.7500%" height="15" fill="rgb(223,77,29)" fg:x="5184" fg:w="43"/><text x="90.6739%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::cmp::max (1 samples, 0.02%)</title><rect x="91.1565%" y="949" width="0.0174%" height="15" fill="rgb(234,94,52)" fg:x="5226" fg:w="1"/><text x="91.4065%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="91.1565%" y="933" width="0.0174%" height="15" fill="rgb(220,154,50)" fg:x="5226" fg:w="1"/><text x="91.4065%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="91.1739%" y="965" width="0.0349%" height="15" fill="rgb(212,11,10)" fg:x="5227" fg:w="2"/><text x="91.4239%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (46 samples, 0.80%)</title><rect x="90.4239%" y="981" width="0.8024%" height="15" fill="rgb(205,166,19)" fg:x="5184" fg:w="46"/><text x="90.6739%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="91.2088%" y="965" width="0.0174%" height="15" fill="rgb(244,198,16)" fg:x="5229" fg:w="1"/><text x="91.4588%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="91.2437%" y="965" width="0.0174%" height="15" fill="rgb(219,69,12)" fg:x="5231" fg:w="1"/><text x="91.4937%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.09%)</title><rect x="91.2262%" y="981" width="0.0872%" height="15" fill="rgb(245,30,7)" fg:x="5230" fg:w="5"/><text x="91.4762%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.05%)</title><rect x="91.2611%" y="965" width="0.0523%" height="15" fill="rgb(218,221,48)" fg:x="5232" fg:w="3"/><text x="91.5111%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="91.2786%" y="949" width="0.0349%" height="15" fill="rgb(216,66,15)" fg:x="5233" fg:w="2"/><text x="91.5286%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (56 samples, 0.98%)</title><rect x="90.3541%" y="997" width="0.9768%" height="15" fill="rgb(226,122,50)" fg:x="5180" fg:w="56"/><text x="90.6041%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="91.3134%" y="981" width="0.0174%" height="15" fill="rgb(239,156,16)" fg:x="5235" fg:w="1"/><text x="91.5634%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="91.3134%" y="965" width="0.0174%" height="15" fill="rgb(224,27,38)" fg:x="5235" fg:w="1"/><text x="91.5634%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::iter::traits::iterator::Iterator::rev (2 samples, 0.03%)</title><rect x="91.3309%" y="997" width="0.0349%" height="15" fill="rgb(224,39,27)" fg:x="5236" fg:w="2"/><text x="91.5809%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;&amp;T&gt;::copied (3 samples, 0.05%)</title><rect x="91.3658%" y="997" width="0.0523%" height="15" fill="rgb(215,92,29)" fg:x="5238" fg:w="3"/><text x="91.6158%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="91.4181%" y="997" width="0.0349%" height="15" fill="rgb(207,159,16)" fg:x="5241" fg:w="2"/><text x="91.6681%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="91.4530%" y="997" width="0.0174%" height="15" fill="rgb(238,163,47)" fg:x="5243" fg:w="1"/><text x="91.7030%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="91.4704%" y="997" width="0.0174%" height="15" fill="rgb(219,91,49)" fg:x="5244" fg:w="1"/><text x="91.7204%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="91.4704%" y="981" width="0.0174%" height="15" fill="rgb(227,167,31)" fg:x="5244" fg:w="1"/><text x="91.7204%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="91.4704%" y="965" width="0.0174%" height="15" fill="rgb(234,80,54)" fg:x="5244" fg:w="1"/><text x="91.7204%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get_unchecked (5 samples, 0.09%)</title><rect x="91.4879%" y="997" width="0.0872%" height="15" fill="rgb(212,114,2)" fg:x="5245" fg:w="5"/><text x="91.7379%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.05%)</title><rect x="91.5228%" y="981" width="0.0523%" height="15" fill="rgb(234,50,24)" fg:x="5247" fg:w="3"/><text x="91.7728%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="91.5751%" y="997" width="0.0174%" height="15" fill="rgb(221,68,8)" fg:x="5250" fg:w="1"/><text x="91.8251%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="91.6274%" y="949" width="0.0174%" height="15" fill="rgb(254,180,31)" fg:x="5253" fg:w="1"/><text x="91.8774%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back::_{{closure}} (1 samples, 0.02%)</title><rect x="91.6274%" y="933" width="0.0174%" height="15" fill="rgb(247,130,50)" fg:x="5253" fg:w="1"/><text x="91.8774%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="91.7146%" y="917" width="0.0174%" height="15" fill="rgb(211,109,4)" fg:x="5258" fg:w="1"/><text x="91.9646%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="91.7146%" y="901" width="0.0174%" height="15" fill="rgb(238,50,21)" fg:x="5258" fg:w="1"/><text x="91.9646%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="91.7321%" y="917" width="0.0174%" height="15" fill="rgb(225,57,45)" fg:x="5259" fg:w="1"/><text x="91.9821%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="91.7495%" y="917" width="0.0174%" height="15" fill="rgb(209,196,50)" fg:x="5260" fg:w="1"/><text x="91.9995%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="91.7670%" y="917" width="0.0174%" height="15" fill="rgb(242,140,13)" fg:x="5261" fg:w="1"/><text x="92.0170%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (10 samples, 0.17%)</title><rect x="91.6274%" y="965" width="0.1744%" height="15" fill="rgb(217,111,7)" fg:x="5253" fg:w="10"/><text x="91.8774%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::str::validations::next_code_point_reverse (9 samples, 0.16%)</title><rect x="91.6449%" y="949" width="0.1570%" height="15" fill="rgb(253,193,51)" fg:x="5254" fg:w="9"/><text x="91.8949%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6 samples, 0.10%)</title><rect x="91.6972%" y="933" width="0.1047%" height="15" fill="rgb(252,70,29)" fg:x="5257" fg:w="6"/><text x="91.9472%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="91.7844%" y="917" width="0.0174%" height="15" fill="rgb(232,127,12)" fg:x="5262" fg:w="1"/><text x="92.0344%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.19%)</title><rect x="91.6274%" y="981" width="0.1919%" height="15" fill="rgb(211,180,21)" fg:x="5253" fg:w="11"/><text x="91.8774%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="91.8018%" y="965" width="0.0174%" height="15" fill="rgb(229,72,13)" fg:x="5263" fg:w="1"/><text x="92.0518%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::str::_&lt;impl str&gt;::chars (2 samples, 0.03%)</title><rect x="91.8193%" y="981" width="0.0349%" height="15" fill="rgb(240,211,49)" fg:x="5264" fg:w="2"/><text x="92.0693%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.02%)</title><rect x="91.8542%" y="981" width="0.0174%" height="15" fill="rgb(219,149,40)" fg:x="5266" fg:w="1"/><text x="92.1042%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="91.8542%" y="965" width="0.0174%" height="15" fill="rgb(210,127,46)" fg:x="5266" fg:w="1"/><text x="92.1042%" y="975.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::count_space_before_word (17 samples, 0.30%)</title><rect x="91.5925%" y="997" width="0.2965%" height="15" fill="rgb(220,106,7)" fg:x="5251" fg:w="17"/><text x="91.8425%" y="1007.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::is_whitespace (1 samples, 0.02%)</title><rect x="91.8716%" y="981" width="0.0174%" height="15" fill="rgb(249,31,22)" fg:x="5267" fg:w="1"/><text x="92.1216%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::char::methods::_&lt;impl char&gt;::is_whitespace (1 samples, 0.02%)</title><rect x="91.8716%" y="965" width="0.0174%" height="15" fill="rgb(253,1,49)" fg:x="5267" fg:w="1"/><text x="92.1216%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::unicode::unicode_data::white_space::lookup (1 samples, 0.02%)</title><rect x="91.8716%" y="949" width="0.0174%" height="15" fill="rgb(227,144,33)" fg:x="5267" fg:w="1"/><text x="92.1216%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="92.0460%" y="949" width="0.0174%" height="15" fill="rgb(249,163,44)" fg:x="5277" fg:w="1"/><text x="92.2960%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="92.0460%" y="933" width="0.0174%" height="15" fill="rgb(234,15,39)" fg:x="5277" fg:w="1"/><text x="92.2960%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.03%)</title><rect x="92.0460%" y="981" width="0.0349%" height="15" fill="rgb(207,66,16)" fg:x="5277" fg:w="2"/><text x="92.2960%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="92.0460%" y="965" width="0.0349%" height="15" fill="rgb(233,112,24)" fg:x="5277" fg:w="2"/><text x="92.2960%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="92.0635%" y="949" width="0.0174%" height="15" fill="rgb(230,90,22)" fg:x="5278" fg:w="1"/><text x="92.3135%" y="959.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::is_empty (9 samples, 0.16%)</title><rect x="92.0809%" y="981" width="0.1570%" height="15" fill="rgb(229,61,13)" fg:x="5279" fg:w="9"/><text x="92.3309%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::len (9 samples, 0.16%)</title><rect x="92.0809%" y="965" width="0.1570%" height="15" fill="rgb(225,57,24)" fg:x="5279" fg:w="9"/><text x="92.3309%" y="975.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::get_space_cost (21 samples, 0.37%)</title><rect x="91.8891%" y="997" width="0.3663%" height="15" fill="rgb(208,169,48)" fg:x="5268" fg:w="21"/><text x="92.1391%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="92.2379%" y="981" width="0.0174%" height="15" fill="rgb(244,218,51)" fg:x="5288" fg:w="1"/><text x="92.4879%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.07%)</title><rect x="92.2554%" y="917" width="0.0698%" height="15" fill="rgb(214,148,10)" fg:x="5289" fg:w="4"/><text x="92.5054%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.07%)</title><rect x="92.2554%" y="901" width="0.0698%" height="15" fill="rgb(225,174,27)" fg:x="5289" fg:w="4"/><text x="92.5054%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.07%)</title><rect x="92.2554%" y="885" width="0.0698%" height="15" fill="rgb(230,96,26)" fg:x="5289" fg:w="4"/><text x="92.5054%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.07%)</title><rect x="92.2554%" y="869" width="0.0698%" height="15" fill="rgb(232,10,30)" fg:x="5289" fg:w="4"/><text x="92.5054%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="92.3251%" y="901" width="0.0174%" height="15" fill="rgb(222,8,50)" fg:x="5293" fg:w="1"/><text x="92.5751%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.07%)</title><rect x="92.3251%" y="917" width="0.0698%" height="15" fill="rgb(213,81,27)" fg:x="5293" fg:w="4"/><text x="92.5751%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.05%)</title><rect x="92.3426%" y="901" width="0.0523%" height="15" fill="rgb(245,50,10)" fg:x="5294" fg:w="3"/><text x="92.5926%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="92.3426%" y="885" width="0.0523%" height="15" fill="rgb(216,100,18)" fg:x="5294" fg:w="3"/><text x="92.5926%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_insert_hash (11 samples, 0.19%)</title><rect x="92.2554%" y="949" width="0.1919%" height="15" fill="rgb(236,147,54)" fg:x="5289" fg:w="11"/><text x="92.5054%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (11 samples, 0.19%)</title><rect x="92.2554%" y="933" width="0.1919%" height="15" fill="rgb(205,143,26)" fg:x="5289" fg:w="11"/><text x="92.5054%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.05%)</title><rect x="92.3949%" y="917" width="0.0523%" height="15" fill="rgb(236,26,9)" fg:x="5297" fg:w="3"/><text x="92.6449%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.05%)</title><rect x="92.3949%" y="901" width="0.0523%" height="15" fill="rgb(221,165,53)" fg:x="5297" fg:w="3"/><text x="92.6449%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::hash::Hasher::write_usize (3 samples, 0.05%)</title><rect x="92.3949%" y="885" width="0.0523%" height="15" fill="rgb(214,110,17)" fg:x="5297" fg:w="3"/><text x="92.6449%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="92.3949%" y="869" width="0.0523%" height="15" fill="rgb(237,197,12)" fg:x="5297" fg:w="3"/><text x="92.6449%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="92.3949%" y="853" width="0.0523%" height="15" fill="rgb(205,84,17)" fg:x="5297" fg:w="3"/><text x="92.6449%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="92.3949%" y="837" width="0.0523%" height="15" fill="rgb(237,18,45)" fg:x="5297" fg:w="3"/><text x="92.6449%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="92.4298%" y="821" width="0.0174%" height="15" fill="rgb(221,87,14)" fg:x="5299" fg:w="1"/><text x="92.6798%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.07%)</title><rect x="92.4821%" y="901" width="0.0698%" height="15" fill="rgb(238,186,15)" fg:x="5302" fg:w="4"/><text x="92.7321%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.05%)</title><rect x="92.4996%" y="885" width="0.0523%" height="15" fill="rgb(208,115,11)" fg:x="5303" fg:w="3"/><text x="92.7496%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (2 samples, 0.03%)</title><rect x="92.5170%" y="869" width="0.0349%" height="15" fill="rgb(254,175,0)" fg:x="5304" fg:w="2"/><text x="92.7670%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="92.5519%" y="901" width="0.0174%" height="15" fill="rgb(227,24,42)" fg:x="5306" fg:w="1"/><text x="92.8019%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="92.5693%" y="901" width="0.0174%" height="15" fill="rgb(223,211,37)" fg:x="5307" fg:w="1"/><text x="92.8193%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="92.5693%" y="885" width="0.0174%" height="15" fill="rgb(235,49,27)" fg:x="5307" fg:w="1"/><text x="92.8193%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="92.5693%" y="869" width="0.0174%" height="15" fill="rgb(254,97,51)" fg:x="5307" fg:w="1"/><text x="92.8193%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="92.5868%" y="901" width="0.0174%" height="15" fill="rgb(249,51,40)" fg:x="5308" fg:w="1"/><text x="92.8368%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="92.5868%" y="885" width="0.0174%" height="15" fill="rgb(210,128,45)" fg:x="5308" fg:w="1"/><text x="92.8368%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.03%)</title><rect x="92.6042%" y="885" width="0.0349%" height="15" fill="rgb(224,137,50)" fg:x="5309" fg:w="2"/><text x="92.8542%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_byte (4 samples, 0.07%)</title><rect x="92.6042%" y="901" width="0.0698%" height="15" fill="rgb(242,15,9)" fg:x="5309" fg:w="4"/><text x="92.8542%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="92.6391%" y="885" width="0.0349%" height="15" fill="rgb(233,187,41)" fg:x="5311" fg:w="2"/><text x="92.8891%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="92.6391%" y="869" width="0.0349%" height="15" fill="rgb(227,2,29)" fg:x="5311" fg:w="2"/><text x="92.8891%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.26%)</title><rect x="92.4472%" y="949" width="0.2616%" height="15" fill="rgb(222,70,3)" fg:x="5300" fg:w="15"/><text x="92.6972%" y="959.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.26%)</title><rect x="92.4472%" y="933" width="0.2616%" height="15" fill="rgb(213,11,42)" fg:x="5300" fg:w="15"/><text x="92.6972%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.26%)</title><rect x="92.4472%" y="917" width="0.2616%" height="15" fill="rgb(225,150,9)" fg:x="5300" fg:w="15"/><text x="92.6972%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_empty (2 samples, 0.03%)</title><rect x="92.6740%" y="901" width="0.0349%" height="15" fill="rgb(230,162,45)" fg:x="5313" fg:w="2"/><text x="92.9240%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_byte (2 samples, 0.03%)</title><rect x="92.6740%" y="885" width="0.0349%" height="15" fill="rgb(222,14,52)" fg:x="5313" fg:w="2"/><text x="92.9240%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.02%)</title><rect x="92.7438%" y="933" width="0.0174%" height="15" fill="rgb(254,198,14)" fg:x="5317" fg:w="1"/><text x="92.9938%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="92.7612%" y="933" width="0.0174%" height="15" fill="rgb(220,217,30)" fg:x="5318" fg:w="1"/><text x="93.0112%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.02%)</title><rect x="92.7612%" y="917" width="0.0174%" height="15" fill="rgb(215,146,41)" fg:x="5318" fg:w="1"/><text x="93.0112%" y="927.50"></text></g><g><title>nori-clone-benchmark`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="92.7786%" y="901" width="0.0174%" height="15" fill="rgb(217,27,36)" fg:x="5319" fg:w="1"/><text x="93.0286%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="92.7961%" y="805" width="0.0174%" height="15" fill="rgb(219,218,39)" fg:x="5320" fg:w="1"/><text x="93.0461%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="92.7961%" y="789" width="0.0174%" height="15" fill="rgb(219,4,42)" fg:x="5320" fg:w="1"/><text x="93.0461%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="92.7961%" y="837" width="0.0349%" height="15" fill="rgb(249,119,36)" fg:x="5320" fg:w="2"/><text x="93.0461%" y="847.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="92.7961%" y="821" width="0.0349%" height="15" fill="rgb(209,23,33)" fg:x="5320" fg:w="2"/><text x="93.0461%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="92.8135%" y="805" width="0.0174%" height="15" fill="rgb(211,10,0)" fg:x="5321" fg:w="1"/><text x="93.0635%" y="815.50"></text></g><g><title>nori-clone-benchmark`core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.05%)</title><rect x="92.7961%" y="901" width="0.0523%" height="15" fill="rgb(208,99,37)" fg:x="5320" fg:w="3"/><text x="93.0461%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="92.7961%" y="885" width="0.0523%" height="15" fill="rgb(213,132,31)" fg:x="5320" fg:w="3"/><text x="93.0461%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (3 samples, 0.05%)</title><rect x="92.7961%" y="869" width="0.0523%" height="15" fill="rgb(243,129,40)" fg:x="5320" fg:w="3"/><text x="93.0461%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.05%)</title><rect x="92.7961%" y="853" width="0.0523%" height="15" fill="rgb(210,66,33)" fg:x="5320" fg:w="3"/><text x="93.0461%" y="863.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.02%)</title><rect x="92.8310%" y="837" width="0.0174%" height="15" fill="rgb(209,189,4)" fg:x="5322" fg:w="1"/><text x="93.0810%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="92.8310%" y="821" width="0.0174%" height="15" fill="rgb(214,107,37)" fg:x="5322" fg:w="1"/><text x="93.0810%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="92.8484%" y="901" width="0.0174%" height="15" fill="rgb(245,88,54)" fg:x="5323" fg:w="1"/><text x="93.0984%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="92.8659%" y="837" width="0.0174%" height="15" fill="rgb(205,146,20)" fg:x="5324" fg:w="1"/><text x="93.1159%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="92.8659%" y="821" width="0.0174%" height="15" fill="rgb(220,161,25)" fg:x="5324" fg:w="1"/><text x="93.1159%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="92.8659%" y="805" width="0.0174%" height="15" fill="rgb(215,152,15)" fg:x="5324" fg:w="1"/><text x="93.1159%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="92.8659%" y="789" width="0.0174%" height="15" fill="rgb(233,192,44)" fg:x="5324" fg:w="1"/><text x="93.1159%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="92.8833%" y="741" width="0.0174%" height="15" fill="rgb(240,170,46)" fg:x="5325" fg:w="1"/><text x="93.1333%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3 samples, 0.05%)</title><rect x="92.8659%" y="901" width="0.0523%" height="15" fill="rgb(207,104,33)" fg:x="5324" fg:w="3"/><text x="93.1159%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hasher::_{{closure}} (3 samples, 0.05%)</title><rect x="92.8659%" y="885" width="0.0523%" height="15" fill="rgb(219,21,39)" fg:x="5324" fg:w="3"/><text x="93.1159%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hash (3 samples, 0.05%)</title><rect x="92.8659%" y="869" width="0.0523%" height="15" fill="rgb(214,133,29)" fg:x="5324" fg:w="3"/><text x="93.1159%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (3 samples, 0.05%)</title><rect x="92.8659%" y="853" width="0.0523%" height="15" fill="rgb(226,93,6)" fg:x="5324" fg:w="3"/><text x="93.1159%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.03%)</title><rect x="92.8833%" y="837" width="0.0349%" height="15" fill="rgb(252,222,34)" fg:x="5325" fg:w="2"/><text x="93.1333%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.03%)</title><rect x="92.8833%" y="821" width="0.0349%" height="15" fill="rgb(252,92,48)" fg:x="5325" fg:w="2"/><text x="93.1333%" y="831.50"></text></g><g><title>nori-clone-benchmark`core::hash::Hasher::write_usize (2 samples, 0.03%)</title><rect x="92.8833%" y="805" width="0.0349%" height="15" fill="rgb(245,223,24)" fg:x="5325" fg:w="2"/><text x="93.1333%" y="815.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="92.8833%" y="789" width="0.0349%" height="15" fill="rgb(205,176,3)" fg:x="5325" fg:w="2"/><text x="93.1333%" y="799.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="92.8833%" y="773" width="0.0349%" height="15" fill="rgb(235,151,15)" fg:x="5325" fg:w="2"/><text x="93.1333%" y="783.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="92.8833%" y="757" width="0.0349%" height="15" fill="rgb(237,209,11)" fg:x="5325" fg:w="2"/><text x="93.1333%" y="767.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.02%)</title><rect x="92.9008%" y="741" width="0.0174%" height="15" fill="rgb(243,227,24)" fg:x="5326" fg:w="1"/><text x="93.1508%" y="751.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.03%)</title><rect x="92.9182%" y="901" width="0.0349%" height="15" fill="rgb(239,193,16)" fg:x="5327" fg:w="2"/><text x="93.1682%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="92.9356%" y="885" width="0.0174%" height="15" fill="rgb(231,27,9)" fg:x="5328" fg:w="1"/><text x="93.1856%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="92.9356%" y="869" width="0.0174%" height="15" fill="rgb(219,169,10)" fg:x="5328" fg:w="1"/><text x="93.1856%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.02%)</title><rect x="92.9356%" y="853" width="0.0174%" height="15" fill="rgb(244,229,43)" fg:x="5328" fg:w="1"/><text x="93.1856%" y="863.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.19%)</title><rect x="92.7786%" y="933" width="0.1919%" height="15" fill="rgb(254,38,20)" fg:x="5319" fg:w="11"/><text x="93.0286%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.19%)</title><rect x="92.7786%" y="917" width="0.1919%" height="15" fill="rgb(250,47,30)" fg:x="5319" fg:w="11"/><text x="93.0286%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="92.9531%" y="901" width="0.0174%" height="15" fill="rgb(224,124,36)" fg:x="5329" fg:w="1"/><text x="93.2031%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="92.9531%" y="885" width="0.0174%" height="15" fill="rgb(246,68,51)" fg:x="5329" fg:w="1"/><text x="93.2031%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="92.9531%" y="869" width="0.0174%" height="15" fill="rgb(253,43,49)" fg:x="5329" fg:w="1"/><text x="93.2031%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="92.9531%" y="853" width="0.0174%" height="15" fill="rgb(219,54,36)" fg:x="5329" fg:w="1"/><text x="93.2031%" y="863.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.05%)</title><rect x="92.9705%" y="933" width="0.0523%" height="15" fill="rgb(227,133,34)" fg:x="5330" fg:w="3"/><text x="93.2205%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="93.0054%" y="917" width="0.0174%" height="15" fill="rgb(247,227,15)" fg:x="5332" fg:w="1"/><text x="93.2554%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 0.80%)</title><rect x="92.2554%" y="965" width="0.8024%" height="15" fill="rgb(229,96,14)" fg:x="5289" fg:w="46"/><text x="92.5054%" y="975.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::insert (20 samples, 0.35%)</title><rect x="92.7089%" y="949" width="0.3489%" height="15" fill="rgb(220,79,17)" fg:x="5315" fg:w="20"/><text x="92.9589%" y="959.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.03%)</title><rect x="93.0229%" y="933" width="0.0349%" height="15" fill="rgb(205,131,53)" fg:x="5333" fg:w="2"/><text x="93.2729%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.03%)</title><rect x="93.0229%" y="917" width="0.0349%" height="15" fill="rgb(209,50,29)" fg:x="5333" fg:w="2"/><text x="93.2729%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="93.0403%" y="901" width="0.0174%" height="15" fill="rgb(245,86,46)" fg:x="5334" fg:w="1"/><text x="93.2903%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="93.0403%" y="885" width="0.0174%" height="15" fill="rgb(235,66,46)" fg:x="5334" fg:w="1"/><text x="93.2903%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.02%)</title><rect x="93.0403%" y="869" width="0.0174%" height="15" fill="rgb(232,148,31)" fg:x="5334" fg:w="1"/><text x="93.2903%" y="879.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::find_system_dictionary (491 samples, 8.56%)</title><rect x="84.5107%" y="1013" width="8.5645%" height="15" fill="rgb(217,149,8)" fg:x="4845" fg:w="491"/><text x="84.7607%" y="1023.50">nori-clone-b..</text></g><g><title>nori-clone-benchmark`std::collections::hash::set::HashSet&lt;T,S&gt;::insert (47 samples, 0.82%)</title><rect x="92.2554%" y="997" width="0.8198%" height="15" fill="rgb(209,183,11)" fg:x="5289" fg:w="47"/><text x="92.5054%" y="1007.50"></text></g><g><title>nori-clone-benchmark`hashbrown::set::HashSet&lt;T,S,A&gt;::insert (47 samples, 0.82%)</title><rect x="92.2554%" y="981" width="0.8198%" height="15" fill="rgb(208,55,20)" fg:x="5289" fg:w="47"/><text x="92.5054%" y="991.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="93.0577%" y="965" width="0.0174%" height="15" fill="rgb(218,39,14)" fg:x="5335" fg:w="1"/><text x="93.3077%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="93.0752%" y="933" width="0.0174%" height="15" fill="rgb(216,169,33)" fg:x="5336" fg:w="1"/><text x="93.3252%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="93.0752%" y="917" width="0.0174%" height="15" fill="rgb(233,80,24)" fg:x="5336" fg:w="1"/><text x="93.3252%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="93.0926%" y="933" width="0.0174%" height="15" fill="rgb(213,179,31)" fg:x="5337" fg:w="1"/><text x="93.3426%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="93.0926%" y="917" width="0.0174%" height="15" fill="rgb(209,19,5)" fg:x="5337" fg:w="1"/><text x="93.3426%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="93.0752%" y="997" width="0.0523%" height="15" fill="rgb(219,18,35)" fg:x="5336" fg:w="3"/><text x="93.3252%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="93.0752%" y="981" width="0.0523%" height="15" fill="rgb(209,169,16)" fg:x="5336" fg:w="3"/><text x="93.3252%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::validations::next_code_point (3 samples, 0.05%)</title><rect x="93.0752%" y="965" width="0.0523%" height="15" fill="rgb(245,90,51)" fg:x="5336" fg:w="3"/><text x="93.3252%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="93.0752%" y="949" width="0.0523%" height="15" fill="rgb(220,99,45)" fg:x="5336" fg:w="3"/><text x="93.3252%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="93.1101%" y="933" width="0.0174%" height="15" fill="rgb(249,89,25)" fg:x="5338" fg:w="1"/><text x="93.3601%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::Morpheme as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="93.1275%" y="997" width="0.0174%" height="15" fill="rgb(239,193,0)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="93.1275%" y="981" width="0.0174%" height="15" fill="rgb(231,126,1)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="93.1275%" y="965" width="0.0174%" height="15" fill="rgb(243,166,3)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="93.1275%" y="949" width="0.0174%" height="15" fill="rgb(223,22,34)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="93.1275%" y="933" width="0.0174%" height="15" fill="rgb(251,52,51)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="93.1275%" y="917" width="0.0174%" height="15" fill="rgb(221,165,28)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="927.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="93.1275%" y="901" width="0.0174%" height="15" fill="rgb(218,121,47)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="911.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="93.1275%" y="885" width="0.0174%" height="15" fill="rgb(209,120,9)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="93.1275%" y="869" width="0.0174%" height="15" fill="rgb(236,68,12)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="879.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="93.1275%" y="853" width="0.0174%" height="15" fill="rgb(225,194,26)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="863.50"></text></g><g><title>nori-clone-benchmark`alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="93.1275%" y="837" width="0.0174%" height="15" fill="rgb(231,84,39)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="93.1275%" y="821" width="0.0174%" height="15" fill="rgb(210,11,45)" fg:x="5339" fg:w="1"/><text x="93.3775%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.02%)</title><rect x="93.1450%" y="997" width="0.0174%" height="15" fill="rgb(224,54,52)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="1007.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="93.1450%" y="981" width="0.0174%" height="15" fill="rgb(238,102,14)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="991.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="93.1450%" y="965" width="0.0174%" height="15" fill="rgb(243,160,52)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="975.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="93.1450%" y="949" width="0.0174%" height="15" fill="rgb(216,114,19)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="959.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="93.1450%" y="933" width="0.0174%" height="15" fill="rgb(244,166,37)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="93.1450%" y="917" width="0.0174%" height="15" fill="rgb(246,29,44)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="93.1450%" y="901" width="0.0174%" height="15" fill="rgb(215,56,53)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::CharacterClass as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="93.1450%" y="885" width="0.0174%" height="15" fill="rgb(217,60,2)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (1 samples, 0.02%)</title><rect x="93.1450%" y="869" width="0.0174%" height="15" fill="rgb(207,26,24)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="93.1450%" y="853" width="0.0174%" height="15" fill="rgb(252,210,15)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.1450%" y="837" width="0.0174%" height="15" fill="rgb(253,209,26)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.1450%" y="821" width="0.0174%" height="15" fill="rgb(238,170,14)" fg:x="5340" fg:w="1"/><text x="93.3950%" y="831.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="93.1624%" y="997" width="0.0174%" height="15" fill="rgb(216,178,15)" fg:x="5341" fg:w="1"/><text x="93.4124%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="93.1624%" y="981" width="0.0174%" height="15" fill="rgb(250,197,2)" fg:x="5341" fg:w="1"/><text x="93.4124%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="93.1624%" y="965" width="0.0174%" height="15" fill="rgb(212,70,42)" fg:x="5341" fg:w="1"/><text x="93.4124%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::num::_&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="93.1624%" y="949" width="0.0174%" height="15" fill="rgb(227,213,9)" fg:x="5341" fg:w="1"/><text x="93.4124%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::addr (1 samples, 0.02%)</title><rect x="93.1798%" y="997" width="0.0174%" height="15" fill="rgb(245,99,25)" fg:x="5342" fg:w="1"/><text x="93.4298%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::str::_&lt;impl str&gt;::len (1 samples, 0.02%)</title><rect x="93.1973%" y="981" width="0.0174%" height="15" fill="rgb(250,82,29)" fg:x="5343" fg:w="1"/><text x="93.4473%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.03%)</title><rect x="93.1973%" y="997" width="0.0349%" height="15" fill="rgb(241,226,54)" fg:x="5343" fg:w="2"/><text x="93.4473%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="93.2147%" y="981" width="0.0174%" height="15" fill="rgb(221,99,41)" fg:x="5344" fg:w="1"/><text x="93.4647%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.02%)</title><rect x="93.2147%" y="965" width="0.0174%" height="15" fill="rgb(213,90,21)" fg:x="5344" fg:w="1"/><text x="93.4647%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="93.2147%" y="949" width="0.0174%" height="15" fill="rgb(205,208,24)" fg:x="5344" fg:w="1"/><text x="93.4647%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::metadata (1 samples, 0.02%)</title><rect x="93.2147%" y="933" width="0.0174%" height="15" fill="rgb(246,31,12)" fg:x="5344" fg:w="1"/><text x="93.4647%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.02%)</title><rect x="93.2322%" y="981" width="0.0174%" height="15" fill="rgb(213,154,6)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="991.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="93.2322%" y="965" width="0.0174%" height="15" fill="rgb(222,163,29)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="975.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="93.2322%" y="949" width="0.0174%" height="15" fill="rgb(227,201,8)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="959.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="93.2322%" y="933" width="0.0174%" height="15" fill="rgb(233,9,32)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="93.2322%" y="917" width="0.0174%" height="15" fill="rgb(217,54,24)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="93.2322%" y="901" width="0.0174%" height="15" fill="rgb(235,192,0)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.02%)</title><rect x="93.2322%" y="885" width="0.0174%" height="15" fill="rgb(235,45,9)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="93.2322%" y="869" width="0.0174%" height="15" fill="rgb(246,42,40)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.02%)</title><rect x="93.2322%" y="853" width="0.0174%" height="15" fill="rgb(248,111,24)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;nori_clone::tokenizer::dictionary::model::CharacterClass as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="93.2322%" y="837" width="0.0174%" height="15" fill="rgb(249,65,22)" fg:x="5345" fg:w="1"/><text x="93.4822%" y="847.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="93.2496%" y="901" width="0.0174%" height="15" fill="rgb(238,111,51)" fg:x="5346" fg:w="1"/><text x="93.4996%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="93.2496%" y="885" width="0.0174%" height="15" fill="rgb(250,118,22)" fg:x="5346" fg:w="1"/><text x="93.4996%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="93.2496%" y="869" width="0.0174%" height="15" fill="rgb(234,84,26)" fg:x="5346" fg:w="1"/><text x="93.4996%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="93.2496%" y="853" width="0.0174%" height="15" fill="rgb(243,172,12)" fg:x="5346" fg:w="1"/><text x="93.4996%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="93.2496%" y="837" width="0.0174%" height="15" fill="rgb(236,150,49)" fg:x="5346" fg:w="1"/><text x="93.4996%" y="847.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::UnknownTokenDictionary::get_char_def (4 samples, 0.07%)</title><rect x="93.2322%" y="997" width="0.0698%" height="15" fill="rgb(225,197,26)" fg:x="5345" fg:w="4"/><text x="93.4822%" y="1007.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::UnknownTokenDictionary::get_ch_cls_with_vec (3 samples, 0.05%)</title><rect x="93.2496%" y="981" width="0.0523%" height="15" fill="rgb(214,17,42)" fg:x="5346" fg:w="3"/><text x="93.4996%" y="991.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::UnknownTokenDictionary::get_ch_cls (3 samples, 0.05%)</title><rect x="93.2496%" y="965" width="0.0523%" height="15" fill="rgb(224,165,40)" fg:x="5346" fg:w="3"/><text x="93.4996%" y="975.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.05%)</title><rect x="93.2496%" y="949" width="0.0523%" height="15" fill="rgb(246,100,4)" fg:x="5346" fg:w="3"/><text x="93.4996%" y="959.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.05%)</title><rect x="93.2496%" y="933" width="0.0523%" height="15" fill="rgb(222,103,0)" fg:x="5346" fg:w="3"/><text x="93.4996%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.05%)</title><rect x="93.2496%" y="917" width="0.0523%" height="15" fill="rgb(227,189,26)" fg:x="5346" fg:w="3"/><text x="93.4996%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.03%)</title><rect x="93.2671%" y="901" width="0.0349%" height="15" fill="rgb(214,202,17)" fg:x="5347" fg:w="2"/><text x="93.5171%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="93.2845%" y="885" width="0.0174%" height="15" fill="rgb(229,111,3)" fg:x="5348" fg:w="1"/><text x="93.5345%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.02%)</title><rect x="93.2845%" y="869" width="0.0174%" height="15" fill="rgb(229,172,15)" fg:x="5348" fg:w="1"/><text x="93.5345%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="93.2845%" y="853" width="0.0174%" height="15" fill="rgb(230,224,35)" fg:x="5348" fg:w="1"/><text x="93.5345%" y="863.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::get_space_cost (1 samples, 0.02%)</title><rect x="93.3019%" y="997" width="0.0174%" height="15" fill="rgb(251,141,6)" fg:x="5349" fg:w="1"/><text x="93.5519%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.02%)</title><rect x="93.3019%" y="981" width="0.0174%" height="15" fill="rgb(225,208,6)" fg:x="5349" fg:w="1"/><text x="93.5519%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="93.3019%" y="965" width="0.0174%" height="15" fill="rgb(246,181,16)" fg:x="5349" fg:w="1"/><text x="93.5519%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;char as unicode_script::UnicodeScript&gt;::script (2 samples, 0.03%)</title><rect x="93.3194%" y="981" width="0.0349%" height="15" fill="rgb(227,129,36)" fg:x="5350" fg:w="2"/><text x="93.5694%" y="991.50"></text></g><g><title>nori-clone-benchmark`unicode_script::tables::tables_impl::get_script (1 samples, 0.02%)</title><rect x="93.3368%" y="965" width="0.0174%" height="15" fill="rgb(248,117,24)" fg:x="5351" fg:w="1"/><text x="93.5868%" y="975.50"></text></g><g><title>nori-clone-benchmark`unicode_script::tables::tables_impl::bsearch_range_value_table (1 samples, 0.02%)</title><rect x="93.3368%" y="949" width="0.0174%" height="15" fill="rgb(214,185,35)" fg:x="5351" fg:w="1"/><text x="93.5868%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::binary_search_by (1 samples, 0.02%)</title><rect x="93.3368%" y="933" width="0.0174%" height="15" fill="rgb(236,150,34)" fg:x="5351" fg:w="1"/><text x="93.5868%" y="943.50"></text></g><g><title>nori-clone-benchmark`unicode_script::tables::tables_impl::bsearch_range_value_table::_{{closure}} (1 samples, 0.02%)</title><rect x="93.3368%" y="917" width="0.0174%" height="15" fill="rgb(243,228,27)" fg:x="5351" fg:w="1"/><text x="93.5868%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.3543%" y="981" width="0.0174%" height="15" fill="rgb(245,77,44)" fg:x="5352" fg:w="1"/><text x="93.6043%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::mem::take (1 samples, 0.02%)</title><rect x="93.3543%" y="965" width="0.0174%" height="15" fill="rgb(235,214,42)" fg:x="5352" fg:w="1"/><text x="93.6043%" y="975.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::is_punctuation (15 samples, 0.26%)</title><rect x="93.3717%" y="981" width="0.2616%" height="15" fill="rgb(221,74,3)" fg:x="5353" fg:w="15"/><text x="93.6217%" y="991.50"></text></g><g><title>nori-clone-benchmark`unicode_general_category::category::get_general_category (14 samples, 0.24%)</title><rect x="93.3892%" y="965" width="0.2442%" height="15" fill="rgb(206,121,29)" fg:x="5354" fg:w="14"/><text x="93.6392%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.24%)</title><rect x="93.3892%" y="949" width="0.2442%" height="15" fill="rgb(249,131,53)" fg:x="5354" fg:w="14"/><text x="93.6392%" y="959.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::group_unknown_chars (19 samples, 0.33%)</title><rect x="93.3194%" y="997" width="0.3314%" height="15" fill="rgb(236,170,29)" fg:x="5350" fg:w="19"/><text x="93.5694%" y="1007.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::is_whitespace (1 samples, 0.02%)</title><rect x="93.6334%" y="981" width="0.0174%" height="15" fill="rgb(247,96,15)" fg:x="5368" fg:w="1"/><text x="93.8834%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::char::methods::_&lt;impl char&gt;::is_whitespace (1 samples, 0.02%)</title><rect x="93.6334%" y="965" width="0.0174%" height="15" fill="rgb(211,210,7)" fg:x="5368" fg:w="1"/><text x="93.8834%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::unicode::unicode_data::white_space::lookup (1 samples, 0.02%)</title><rect x="93.6334%" y="949" width="0.0174%" height="15" fill="rgb(240,88,50)" fg:x="5368" fg:w="1"/><text x="93.8834%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="93.6682%" y="853" width="0.0174%" height="15" fill="rgb(209,229,26)" fg:x="5370" fg:w="1"/><text x="93.9182%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.09%)</title><rect x="93.6508%" y="901" width="0.0872%" height="15" fill="rgb(210,68,23)" fg:x="5369" fg:w="5"/><text x="93.9008%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.09%)</title><rect x="93.6508%" y="885" width="0.0872%" height="15" fill="rgb(229,180,13)" fg:x="5369" fg:w="5"/><text x="93.9008%" y="895.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.09%)</title><rect x="93.6508%" y="869" width="0.0872%" height="15" fill="rgb(236,53,44)" fg:x="5369" fg:w="5"/><text x="93.9008%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.05%)</title><rect x="93.6857%" y="853" width="0.0523%" height="15" fill="rgb(244,214,29)" fg:x="5371" fg:w="3"/><text x="93.9357%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="93.7380%" y="901" width="0.0174%" height="15" fill="rgb(220,75,29)" fg:x="5374" fg:w="1"/><text x="93.9880%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="93.7380%" y="885" width="0.0174%" height="15" fill="rgb(214,183,37)" fg:x="5374" fg:w="1"/><text x="93.9880%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="93.7380%" y="869" width="0.0174%" height="15" fill="rgb(239,117,29)" fg:x="5374" fg:w="1"/><text x="93.9880%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="93.7380%" y="853" width="0.0174%" height="15" fill="rgb(237,171,35)" fg:x="5374" fg:w="1"/><text x="93.9880%" y="863.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::make_hash (8 samples, 0.14%)</title><rect x="93.6508%" y="933" width="0.1395%" height="15" fill="rgb(229,178,53)" fg:x="5369" fg:w="8"/><text x="93.9008%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::hash::BuildHasher::hash_one (8 samples, 0.14%)</title><rect x="93.6508%" y="917" width="0.1395%" height="15" fill="rgb(210,102,19)" fg:x="5369" fg:w="8"/><text x="93.9008%" y="927.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.03%)</title><rect x="93.7555%" y="901" width="0.0349%" height="15" fill="rgb(235,127,22)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.03%)</title><rect x="93.7555%" y="885" width="0.0349%" height="15" fill="rgb(244,31,31)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::hash::Hasher::write_usize (2 samples, 0.03%)</title><rect x="93.7555%" y="869" width="0.0349%" height="15" fill="rgb(231,43,21)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="879.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="93.7555%" y="853" width="0.0349%" height="15" fill="rgb(217,131,35)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="93.7555%" y="837" width="0.0349%" height="15" fill="rgb(221,149,4)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="93.7555%" y="821" width="0.0349%" height="15" fill="rgb(232,170,28)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="831.50"></text></g><g><title>nori-clone-benchmark`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.03%)</title><rect x="93.7555%" y="805" width="0.0349%" height="15" fill="rgb(238,56,10)" fg:x="5375" fg:w="2"/><text x="94.0055%" y="815.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="93.8078%" y="917" width="0.0174%" height="15" fill="rgb(235,196,14)" fg:x="5378" fg:w="1"/><text x="94.0578%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="93.8078%" y="901" width="0.0174%" height="15" fill="rgb(216,45,48)" fg:x="5378" fg:w="1"/><text x="94.0578%" y="911.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="93.8078%" y="885" width="0.0174%" height="15" fill="rgb(238,213,17)" fg:x="5378" fg:w="1"/><text x="94.0578%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="93.8252%" y="901" width="0.0174%" height="15" fill="rgb(212,13,2)" fg:x="5379" fg:w="1"/><text x="94.0752%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.02%)</title><rect x="93.8252%" y="885" width="0.0174%" height="15" fill="rgb(240,114,20)" fg:x="5379" fg:w="1"/><text x="94.0752%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="93.8252%" y="869" width="0.0174%" height="15" fill="rgb(228,41,40)" fg:x="5379" fg:w="1"/><text x="94.0752%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="93.8427%" y="901" width="0.0174%" height="15" fill="rgb(244,132,35)" fg:x="5380" fg:w="1"/><text x="94.0927%" y="911.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.8601%" y="885" width="0.0174%" height="15" fill="rgb(253,189,4)" fg:x="5381" fg:w="1"/><text x="94.1101%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="93.8601%" y="869" width="0.0174%" height="15" fill="rgb(224,37,19)" fg:x="5381" fg:w="1"/><text x="94.1101%" y="879.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.02%)</title><rect x="93.8601%" y="853" width="0.0174%" height="15" fill="rgb(235,223,18)" fg:x="5381" fg:w="1"/><text x="94.1101%" y="863.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="93.8776%" y="885" width="0.0174%" height="15" fill="rgb(235,163,25)" fg:x="5382" fg:w="1"/><text x="94.1276%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="93.8776%" y="869" width="0.0174%" height="15" fill="rgb(217,145,28)" fg:x="5382" fg:w="1"/><text x="94.1276%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="93.8776%" y="853" width="0.0174%" height="15" fill="rgb(223,223,32)" fg:x="5382" fg:w="1"/><text x="94.1276%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="93.8776%" y="837" width="0.0174%" height="15" fill="rgb(227,189,39)" fg:x="5382" fg:w="1"/><text x="94.1276%" y="847.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="93.9299%" y="869" width="0.0174%" height="15" fill="rgb(248,10,22)" fg:x="5385" fg:w="1"/><text x="94.1799%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.02%)</title><rect x="93.9299%" y="853" width="0.0174%" height="15" fill="rgb(248,46,39)" fg:x="5385" fg:w="1"/><text x="94.1799%" y="863.50"></text></g><g><title>nori-clone-benchmark`&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.02%)</title><rect x="93.9299%" y="837" width="0.0174%" height="15" fill="rgb(248,113,48)" fg:x="5385" fg:w="1"/><text x="94.1799%" y="847.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_byte (5 samples, 0.09%)</title><rect x="93.8950%" y="885" width="0.0872%" height="15" fill="rgb(245,16,25)" fg:x="5383" fg:w="5"/><text x="94.1450%" y="895.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="93.9473%" y="869" width="0.0349%" height="15" fill="rgb(249,152,16)" fg:x="5386" fg:w="2"/><text x="94.1973%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="93.9473%" y="853" width="0.0349%" height="15" fill="rgb(250,16,1)" fg:x="5386" fg:w="2"/><text x="94.1973%" y="863.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::find_unknown_words (53 samples, 0.92%)</title><rect x="93.0752%" y="1013" width="0.9245%" height="15" fill="rgb(249,138,3)" fg:x="5336" fg:w="53"/><text x="93.3252%" y="1023.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (20 samples, 0.35%)</title><rect x="93.6508%" y="997" width="0.3489%" height="15" fill="rgb(227,71,41)" fg:x="5369" fg:w="20"/><text x="93.9008%" y="1007.50"></text></g><g><title>nori-clone-benchmark`hashbrown::set::HashSet&lt;T,S,A&gt;::contains (20 samples, 0.35%)</title><rect x="93.6508%" y="981" width="0.3489%" height="15" fill="rgb(209,184,23)" fg:x="5369" fg:w="20"/><text x="93.9008%" y="991.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.35%)</title><rect x="93.6508%" y="965" width="0.3489%" height="15" fill="rgb(223,215,31)" fg:x="5369" fg:w="20"/><text x="93.9008%" y="975.50"></text></g><g><title>nori-clone-benchmark`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.35%)</title><rect x="93.6508%" y="949" width="0.3489%" height="15" fill="rgb(210,146,28)" fg:x="5369" fg:w="20"/><text x="93.9008%" y="959.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.21%)</title><rect x="93.7903%" y="933" width="0.2093%" height="15" fill="rgb(209,183,41)" fg:x="5377" fg:w="12"/><text x="94.0403%" y="943.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.17%)</title><rect x="93.8252%" y="917" width="0.1744%" height="15" fill="rgb(209,224,45)" fg:x="5379" fg:w="10"/><text x="94.0752%" y="927.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.14%)</title><rect x="93.8601%" y="901" width="0.1395%" height="15" fill="rgb(224,209,51)" fg:x="5381" fg:w="8"/><text x="94.1101%" y="911.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="93.9822%" y="885" width="0.0174%" height="15" fill="rgb(223,17,39)" fg:x="5388" fg:w="1"/><text x="94.2322%" y="895.50"></text></g><g><title>nori-clone-benchmark`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="93.9822%" y="869" width="0.0174%" height="15" fill="rgb(234,204,37)" fg:x="5388" fg:w="1"/><text x="94.2322%" y="879.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="93.9822%" y="853" width="0.0174%" height="15" fill="rgb(236,120,5)" fg:x="5388" fg:w="1"/><text x="94.2322%" y="863.50"></text></g><g><title>nori-clone-benchmark`core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="93.9822%" y="837" width="0.0174%" height="15" fill="rgb(248,97,27)" fg:x="5388" fg:w="1"/><text x="94.2322%" y="847.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="94.6799%" y="997" width="0.0523%" height="15" fill="rgb(240,66,17)" fg:x="5428" fg:w="3"/><text x="94.9299%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.03%)</title><rect x="94.7323%" y="997" width="0.0349%" height="15" fill="rgb(210,79,3)" fg:x="5431" fg:w="2"/><text x="94.9823%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.07%)</title><rect x="95.1334%" y="965" width="0.0698%" height="15" fill="rgb(214,176,27)" fg:x="5454" fg:w="4"/><text x="95.3834%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.02%)</title><rect x="95.2032%" y="965" width="0.0174%" height="15" fill="rgb(235,185,3)" fg:x="5458" fg:w="1"/><text x="95.4532%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="95.2207%" y="965" width="0.0174%" height="15" fill="rgb(227,24,12)" fg:x="5459" fg:w="1"/><text x="95.4707%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (10 samples, 0.17%)</title><rect x="95.2381%" y="965" width="0.1744%" height="15" fill="rgb(252,169,48)" fg:x="5460" fg:w="10"/><text x="95.4881%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (4 samples, 0.07%)</title><rect x="95.3428%" y="949" width="0.0698%" height="15" fill="rgb(212,65,1)" fg:x="5466" fg:w="4"/><text x="95.5928%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::read (2 samples, 0.03%)</title><rect x="95.4125%" y="965" width="0.0349%" height="15" fill="rgb(242,39,24)" fg:x="5470" fg:w="2"/><text x="95.6625%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (33 samples, 0.58%)</title><rect x="94.8892%" y="981" width="0.5756%" height="15" fill="rgb(249,32,23)" fg:x="5440" fg:w="33"/><text x="95.1392%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::ptr::write (1 samples, 0.02%)</title><rect x="95.4474%" y="965" width="0.0174%" height="15" fill="rgb(251,195,23)" fg:x="5472" fg:w="1"/><text x="95.6974%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.03%)</title><rect x="95.4649%" y="981" width="0.0349%" height="15" fill="rgb(236,174,8)" fg:x="5473" fg:w="2"/><text x="95.7149%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (44 samples, 0.77%)</title><rect x="94.7671%" y="997" width="0.7675%" height="15" fill="rgb(220,197,8)" fg:x="5433" fg:w="44"/><text x="95.0171%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::mem::replace (2 samples, 0.03%)</title><rect x="95.4997%" y="981" width="0.0349%" height="15" fill="rgb(240,108,37)" fg:x="5475" fg:w="2"/><text x="95.7497%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::unwrap_or (3 samples, 0.05%)</title><rect x="95.5346%" y="997" width="0.0523%" height="15" fill="rgb(232,176,24)" fg:x="5477" fg:w="3"/><text x="95.7846%" y="1007.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get (6 samples, 0.10%)</title><rect x="95.5870%" y="997" width="0.1047%" height="15" fill="rgb(243,35,29)" fg:x="5480" fg:w="6"/><text x="95.8370%" y="1007.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="98.0638%" y="965" width="0.0349%" height="15" fill="rgb(210,37,18)" fg:x="5622" fg:w="2"/><text x="98.3138%" y="975.50"></text></g><g><title>nori-clone-benchmark`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.09%)</title><rect x="98.1685%" y="949" width="0.0872%" height="15" fill="rgb(224,184,40)" fg:x="5628" fg:w="5"/><text x="98.4185%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.07%)</title><rect x="98.1859%" y="933" width="0.0698%" height="15" fill="rgb(236,39,29)" fg:x="5629" fg:w="4"/><text x="98.4359%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="98.2557%" y="949" width="0.0349%" height="15" fill="rgb(232,48,39)" fg:x="5633" fg:w="2"/><text x="98.5057%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.05%)</title><rect x="98.2906%" y="949" width="0.0523%" height="15" fill="rgb(236,34,42)" fg:x="5635" fg:w="3"/><text x="98.5406%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts_mut (4 samples, 0.07%)</title><rect x="98.4301%" y="933" width="0.0698%" height="15" fill="rgb(243,106,37)" fg:x="5643" fg:w="4"/><text x="98.6801%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (13 samples, 0.23%)</title><rect x="98.3429%" y="949" width="0.2268%" height="15" fill="rgb(218,96,6)" fg:x="5638" fg:w="13"/><text x="98.5929%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.07%)</title><rect x="98.4999%" y="933" width="0.0698%" height="15" fill="rgb(235,130,12)" fg:x="5647" fg:w="4"/><text x="98.7499%" y="943.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (29 samples, 0.51%)</title><rect x="98.0987%" y="965" width="0.5058%" height="15" fill="rgb(231,95,0)" fg:x="5624" fg:w="29"/><text x="98.3487%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="98.5697%" y="949" width="0.0349%" height="15" fill="rgb(228,12,23)" fg:x="5651" fg:w="2"/><text x="98.8197%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.05%)</title><rect x="98.6046%" y="965" width="0.0523%" height="15" fill="rgb(216,12,1)" fg:x="5653" fg:w="3"/><text x="98.8546%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (5 samples, 0.09%)</title><rect x="98.6569%" y="965" width="0.0872%" height="15" fill="rgb(219,59,3)" fg:x="5656" fg:w="5"/><text x="98.9069%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (3 samples, 0.05%)</title><rect x="98.8313%" y="949" width="0.0523%" height="15" fill="rgb(215,208,46)" fg:x="5666" fg:w="3"/><text x="99.0813%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (4 samples, 0.07%)</title><rect x="98.8837%" y="949" width="0.0698%" height="15" fill="rgb(254,224,29)" fg:x="5669" fg:w="4"/><text x="99.1337%" y="959.50"></text></g><g><title>nori-clone-benchmark`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (76 samples, 1.33%)</title><rect x="97.7848%" y="981" width="1.3257%" height="15" fill="rgb(232,14,29)" fg:x="5606" fg:w="76"/><text x="98.0348%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (21 samples, 0.37%)</title><rect x="98.7441%" y="965" width="0.3663%" height="15" fill="rgb(208,45,52)" fg:x="5661" fg:w="21"/><text x="98.9941%" y="975.50"></text></g><g><title>nori-clone-benchmark`core::ptr::slice_from_raw_parts (9 samples, 0.16%)</title><rect x="98.9534%" y="949" width="0.1570%" height="15" fill="rgb(234,191,28)" fg:x="5673" fg:w="9"/><text x="99.2034%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::metadata::from_raw_parts (3 samples, 0.05%)</title><rect x="99.0581%" y="933" width="0.0523%" height="15" fill="rgb(244,67,43)" fg:x="5679" fg:w="3"/><text x="99.3081%" y="943.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.09%)</title><rect x="99.1104%" y="981" width="0.0872%" height="15" fill="rgb(236,189,24)" fg:x="5682" fg:w="5"/><text x="99.3604%" y="991.50"></text></g><g><title>nori-clone-benchmark`alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.03%)</title><rect x="99.1976%" y="981" width="0.0349%" height="15" fill="rgb(239,214,33)" fg:x="5687" fg:w="2"/><text x="99.4476%" y="991.50"></text></g><g><title>nori-clone-benchmark`core::option::Option&lt;T&gt;::unwrap_or (5 samples, 0.09%)</title><rect x="99.2325%" y="981" width="0.0872%" height="15" fill="rgb(226,176,41)" fg:x="5689" fg:w="5"/><text x="99.4825%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (11 samples, 0.19%)</title><rect x="99.3895%" y="965" width="0.1919%" height="15" fill="rgb(248,47,8)" fg:x="5698" fg:w="11"/><text x="99.6395%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.12%)</title><rect x="99.4593%" y="949" width="0.1221%" height="15" fill="rgb(218,81,44)" fg:x="5702" fg:w="7"/><text x="99.7093%" y="959.50"></text></g><g><title>nori-clone-benchmark`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (2 samples, 0.03%)</title><rect x="99.5465%" y="933" width="0.0349%" height="15" fill="rgb(213,98,6)" fg:x="5707" fg:w="2"/><text x="99.7965%" y="943.50"></text></g><g><title>nori-clone-benchmark`core::slice::_&lt;impl [T]&gt;::get (16 samples, 0.28%)</title><rect x="99.3197%" y="981" width="0.2791%" height="15" fill="rgb(222,85,22)" fg:x="5694" fg:w="16"/><text x="99.5697%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="99.5814%" y="965" width="0.0174%" height="15" fill="rgb(239,46,39)" fg:x="5709" fg:w="1"/><text x="99.8314%" y="975.50"></text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::select_parent_node (325 samples, 5.67%)</title><rect x="93.9997%" y="1013" width="5.6689%" height="15" fill="rgb(237,12,29)" fg:x="5389" fg:w="325"/><text x="94.2497%" y="1023.50">nori-cl..</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::dictionary::model::ConnectionCost::get_cost (228 samples, 3.98%)</title><rect x="95.6916%" y="997" width="3.9770%" height="15" fill="rgb(214,77,8)" fg:x="5486" fg:w="228"/><text x="95.9416%" y="1007.50">nori..</text></g><g><title>nori-clone-benchmark`core::slice::raw::from_raw_parts (4 samples, 0.07%)</title><rect x="99.5988%" y="981" width="0.0698%" height="15" fill="rgb(217,168,37)" fg:x="5710" fg:w="4"/><text x="99.8488%" y="991.50"></text></g><g><title>dyld`start (5,715 samples, 99.69%)</title><rect x="0.0000%" y="1157" width="99.6860%" height="15" fill="rgb(221,217,23)" fg:x="0" fg:w="5715"/><text x="0.2500%" y="1167.50">dyld`start</text></g><g><title>nori-clone-benchmark`main (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1141" width="99.5988%" height="15" fill="rgb(243,229,36)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1151.50">nori-clone-benchmark`main</text></g><g><title>nori-clone-benchmark`std::rt::lang_start (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1125" width="99.5988%" height="15" fill="rgb(251,163,40)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1135.50">nori-clone-benchmark`std::rt::lang_start</text></g><g><title>nori-clone-benchmark`std::rt::lang_start_internal (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1109" width="99.5988%" height="15" fill="rgb(237,222,12)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1119.50">nori-clone-benchmark`std::rt::lang_start_internal</text></g><g><title>nori-clone-benchmark`std::rt::lang_start::_{{closure}} (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1093" width="99.5988%" height="15" fill="rgb(248,132,6)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1103.50">nori-clone-benchmark`std::rt::lang_start::_{{closure}}</text></g><g><title>nori-clone-benchmark`std::sys_common::backtrace::__rust_begin_short_backtrace (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1077" width="99.5988%" height="15" fill="rgb(227,167,50)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1087.50">nori-clone-benchmark`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>nori-clone-benchmark`core::ops::function::FnOnce::call_once (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1061" width="99.5988%" height="15" fill="rgb(242,84,37)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1071.50">nori-clone-benchmark`core::ops::function::FnOnce::call_once</text></g><g><title>nori-clone-benchmark`nori_clone_benchmark::main (5,710 samples, 99.60%)</title><rect x="0.0872%" y="1045" width="99.5988%" height="15" fill="rgb(212,4,50)" fg:x="5" fg:w="5710"/><text x="0.3372%" y="1055.50">nori-clone-benchmark`nori_clone_benchmark::main</text></g><g><title>nori-clone-benchmark`nori_clone::tokenizer::nori_tokenizer::NoriTokenizer::tokenize (1,151 samples, 20.08%)</title><rect x="79.6093%" y="1029" width="20.0767%" height="15" fill="rgb(230,228,32)" fg:x="4564" fg:w="1151"/><text x="79.8593%" y="1039.50">nori-clone-benchmark`nori_clone:..</text></g><g><title>nori-clone-benchmark`std::collections::hash::set::HashSet&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.6686%" y="1013" width="0.0174%" height="15" fill="rgb(248,217,23)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="1023.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="99.6686%" y="997" width="0.0174%" height="15" fill="rgb(238,197,32)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="1007.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="99.6686%" y="981" width="0.0174%" height="15" fill="rgb(236,106,1)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="991.50"></text></g><g><title>nori-clone-benchmark`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="99.6686%" y="965" width="0.0174%" height="15" fill="rgb(219,228,13)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="975.50"></text></g><g><title>nori-clone-benchmark`&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="99.6686%" y="949" width="0.0174%" height="15" fill="rgb(238,30,35)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="959.50"></text></g><g><title>nori-clone-benchmark`std::collections::hash::map::RandomState::new (1 samples, 0.02%)</title><rect x="99.6686%" y="933" width="0.0174%" height="15" fill="rgb(236,70,23)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="943.50"></text></g><g><title>nori-clone-benchmark`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="99.6686%" y="917" width="0.0174%" height="15" fill="rgb(249,104,48)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="927.50"></text></g><g><title>nori-clone-benchmark`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="99.6686%" y="901" width="0.0174%" height="15" fill="rgb(254,117,50)" fg:x="5714" fg:w="1"/><text x="99.9186%" y="911.50"></text></g><g><title>all (5,733 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(223,152,4)" fg:x="0" fg:w="5733"/><text x="0.2500%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`__exit (18 samples, 0.31%)</title><rect x="99.6860%" y="1157" width="0.3140%" height="15" fill="rgb(245,6,2)" fg:x="5715" fg:w="18"/><text x="99.9360%" y="1167.50"></text></g></svg></svg>